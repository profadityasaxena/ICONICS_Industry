<?xml version="1.0" encoding="utf-8"?>
<Canvas Background="#FF243782" Width="1100" Height="728" gwx:GwxProperties.Description="Display Size: H=1100 W:728" gwx:GwxProperties.ShowDescriptionInToolTip="True" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:gwx="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCore" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:iwm="clr-namespace:Ico.Windows.Media;assembly=IcoWPF" xmlns:script="clr-namespace:Ico.Script;assembly=IcoScriptEngine" xmlns:ic="clr-namespace:Ico.Collections;assembly=IcoCollections" xmlns:ig="clr-namespace:Ico.Gdx;assembly=GdxViewControl" xmlns:iws="clr-namespace:Ico.WPF.Specialized;assembly=IcoWPFSpecialized" xmlns:ig12="clr-namespace:Ico.Gdx;assembly=GdxClientCommon" xmlns:igd="clr-namespace:Ico.Gdx.Data;assembly=GdxClientCommon" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:iwc="clr-namespace:Ico.Windows.Controls;assembly=IcoWPF" xmlns:gwxcmd="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCoreCommands" xmlns:icc="clr-namespace:Ico.Commanding.Commands;assembly=IcoCommands">
  <Canvas.Resources>
    <BitmapImage x:Key="GwxThumbnailImageKey">
      <iwm:BitmapImageInfo.StreamSource>
        <iwm:Base64Stream Data="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" />
      </iwm:BitmapImageInfo.StreamSource>
    </BitmapImage>
  </Canvas.Resources>
  <gwx:GwxDocument.GwxDocument>
    <gwx:GwxDocument FileVersion="10.97.020.00" IsScalable="True" MaximumZoom="1" MinimumZoom="1" PanEnabled="False" PreferredStretch="Fill" ScanRate="500">
      <gwx:GwxDocument.ScriptCodeManager>
        <script:ScriptCodeManager>
          <script:ScriptCodeManager.Scripts>
            <script:ScriptCode Name="ThisDisplayCode" Type="JScriptNet">
              <x:XData><![CDATA[function ThisDisplay_AnimationStarted(sender : System.Object, e : System.EventArgs)
{
	        Clear();
            ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","Event Configuration")
	
			var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var event_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_type_empty_label");
			var event_id_empty_label        : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_id_empty_label");
			var event_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_name_empty_label");
			
			shop_empty_label.Visible              = false
	        line_empty_label.Visible              = false
            stage_empty_label.Visible             = false
	        equipment_name_empty_label.Visible    = false
			equipment_type_empty_label.Visible    = false
			event_type_empty_label.Visible        = false
			event_id_empty_label.Visible          = false
			event_name_empty_label.Visible        = false
			


}

function ThisDisplay_AnimationStopped(sender : System.Object, e : System.EventArgs)
{
		    Clear();
		    var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var event_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_type_empty_label");
			var event_id_empty_label        : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_id_empty_label");
			var event_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_name_empty_label");
			
			shop_empty_label.Visible              = false
	        line_empty_label.Visible              = false
            stage_empty_label.Visible             = false
	        equipment_name_empty_label.Visible    = false
			equipment_type_empty_label.Visible    = false
			event_type_empty_label.Visible        = false
			event_id_empty_label.Visible          = false
			event_name_empty_label.Visible        = false
		

			ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","")
			
					
	
}






]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ClearCode" Type="JScriptNet">
              <x:XData><![CDATA[function Clear(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){		
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
	var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
	var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
	var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
	var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	

	// [Array Reset] Collection arrays are reset here to default values
	shop_name.Items.Clear();
	line_name.Items.Clear();
	stage_name.Items.Clear();
	equipment_name.Items.Clear();
	equipment_type.Items.Clear();
	event_type.Items.Clear();
	
	//[Variable Reset] Variables are reset here to default values
	shop_name.SelectedIndex          = 0;
	line_name.SelectedIndex 	     = 0;
	stage_name.SelectedIndex         = 0;
	equipment_name.SelectedIndex     = 0;
	equipment_type.SelectedIndex     = 0;
	event_type.SelectedIndex         = 0;	
	event_name.Clear();
	event_id.Clear();
		
	//[Inline Test Statemnt] MessageBox.Show('Clearing all fields');
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Create" Type="JScriptNet">
              <x:XData><![CDATA[function Create(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]
		
			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Create';
			
			// [Provisioning Security System]
			var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
			//MessageBox.Show(logged_in_user.Text);
	
			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
			var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
			var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
			var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
			var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
			var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
			var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	        var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var event_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_type_empty_label");
			var event_id_empty_label        : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_id_empty_label");
			var event_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_name_empty_label");
			
			// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= logged_in_user.Text;	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			

            

			// [Query String] Building Query for calling stored procedure					
			var query_string : String = "Exec [dbo].[SP_Config_Event] ";		
			query_string += "@shop_name				        = '"+shop_name.Text+"',";
			query_string += "@line_name				        = '"+line_name.Text+"',";
			query_string += "@equipment_name				= '"+equipment_name.Text+"',";
			query_string += "@equipment_type				= '"+equipment_type.Text+"',";
			query_string += "@event_name        		    = '"+event_name.Text+"',";
			query_string += "@stage_name				    = '"+stage_name.Text+"',";
			query_string += "@event_id				    	= '"+event_id.Text+"',";
			query_string += "@event_type				    = '"+event_type.Text+"',";
			query_string += "@created_by				    = '"+created_by+"',";
			query_string += "@ActionOp 						= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( shop_name.Text =="" || line_name.Text =="" || equipment_name.Text =="" || equipment_type.Text == ""|| event_name.Text  ==""||stage_name.Text ==""||event_id.Text ==""||event_type.Text ==""||created_by.Text=="" ){
					
					//MessageBox.Show("Please fill in all the required values!")
				if(shop_name.Text == "")
				{shop_empty_label.Visible = true}
				else
				{shop_empty_label.Visible = false}
				
				if(line_name.Text == "")
				{line_empty_label.Visible = true}
				else					
				{line_empty_label.Visible = false}
        		
				if(stage_name.Text == "")
				{stage_empty_label.Visible = true}
				else
				{stage_empty_label.Visible = false}
				
				if(equipment_name.Text == "")
				{equipment_name_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(equipment_type.Text == "")
				{equipment_type_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(event_type.Text == "")
				{event_type_empty_label.Visible = true}
				else
				{event_type_empty_label.Visible = false}
				
				if(event_id.Text == "")
				{event_id_empty_label.Visible = true}
				else
				{event_id_empty_label.Visible = false}
				
				if(event_name.Text == "")
				{event_name_empty_label.Visible = true}
				else
				{event_name_empty_label.Visible = false}


			} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Database_Connection" Type="JScriptNet">
              <x:XData><![CDATA[//[Windows Based Authentication] User is authenticated to the SQL Server based on Windows IAM
const DB_SERVER               : String = "AK-WKS-0476-LS\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "sa";
const DB_PASSWORD             : String = "sql_1234";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Delete" Type="JScriptNet">
              <x:XData><![CDATA[function Delete(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]
		
			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Delete';
			
			// [Provisioning Security System]
			var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
			//MessageBox.Show(logged_in_user.Text);
	
			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
			var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
			var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
			var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
			var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
			var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
			var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	        var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var event_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_type_empty_label");
			var event_id_empty_label        : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_id_empty_label");
			var event_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_name_empty_label");
			
			// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= logged_in_user.Text;	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			

            

			// [Query String] Building Query for calling stored procedure					
			var query_string : String = "Exec [dbo].[SP_Config_Event] ";		
			query_string += "@shop_name				        = '"+shop_name.Text+"',";
			query_string += "@line_name				        = '"+line_name.Text+"',";
			query_string += "@equipment_name				= '"+equipment_name.Text+"',";
			query_string += "@equipment_type				= '"+equipment_type.Text+"',";
			query_string += "@event_name        		    = '"+event_name.Text+"',";
			query_string += "@stage_name				    = '"+stage_name.Text+"',";
			query_string += "@event_id				    	= '"+event_id.Text+"',";
			query_string += "@event_type				    = '"+event_type.Text+"',";
			query_string += "@created_by				    = '"+created_by+"',";
			query_string += "@ActionOp 						= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( shop_name.Text =="" || line_name.Text =="" || equipment_name.Text =="" || equipment_type.Text == ""|| event_name.Text  ==""||stage_name.Text ==""||event_id.Text ==""||event_type.Text ==""||created_by.Text=="" ){
					
					//MessageBox.Show("Please fill in all the required values!")
				if(shop_name.Text == "")
				{shop_empty_label.Visible = true}
				else
				{shop_empty_label.Visible = false}
				
				if(line_name.Text == "")
				{line_empty_label.Visible = true}
				else					
				{line_empty_label.Visible = false}
        		
				if(stage_name.Text == "")
				{stage_empty_label.Visible = true}
				else
				{stage_empty_label.Visible = false}
				
				if(equipment_name.Text == "")
				{equipment_name_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(equipment_type.Text == "")
				{equipment_type_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(event_type.Text == "")
				{event_type_empty_label.Visible = true}
				else
				{event_type_empty_label.Visible = false}
				
				if(event_id.Text == "")
				{event_id_empty_label.Visible = true}
				else
				{event_id_empty_label.Visible = false}
				
				if(event_name.Text == "")
				{event_name_empty_label.Visible = true}
				else
				{event_name_empty_label.Visible = false}


			} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_equipment_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_equipment_name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
		var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
		var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	      
		var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
        equipment_name_empty_label.Visible    = false

		
		// [Array Reset] Collection arrays are reset here to default values
		equipment_name.Items.Clear();
		event_type.Items.Clear();
		
		// [Setting Index] Setting Index to Zero	
		equipment_name.SelectedIndex  = 0;
		event_type.SelectedIndex     = 0;
		

        if (equipment_type.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct equipment_name from Config_Equipment WHERE equipment_type = '"+equipment_type.Text+"' AND stage_id = (Select stage_id from Config_Stage WHERE stage_name = '"+stage_name.Text+"' AND line_id = (SELECT line_id from Config_Line WHERE line_name = '"+line_name.Text+"'))", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    equipment_name.Items.Add(DataReader["equipment_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a equipment type first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_equipment_type" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_equipment_type(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		//var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
		var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
		var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	      	   
		var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
		equipment_type_empty_label.Visible    = false

		
		// [Array Reset] Collection arrays are reset here to default values
		equipment_name.Items.Clear();
		equipment_type.Items.Clear();
		event_type.Items.Clear();
		
		// [Setting Index] Setting Index to Zero	
		equipment_name.SelectedIndex  = 0;
		equipment_type.SelectedIndex  = 0;
		event_type.SelectedIndex     = 0;
		

        if (stage_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct equipment_type from Config_Equipment WHERE stage_id IN (SELECT stage_id from Config_Stage WHERE stage_name = '"+stage_name.Text+"')", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    equipment_type.Items.Add(DataReader["equipment_type"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a stage first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_event_type" Type="JScriptNet">
              <x:XData><![CDATA[
function Dropdown_event_type(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
		var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
		var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	   	
	    var event_type_empty_label     : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_type_empty_label");
		event_type_empty_label.Visible       = false

		
		// [Array Reset] Collection arrays are reset here to default values
			event_type.Items.Clear();
		
		// [Setting Index] Setting Index to Zero	
			event_type.SelectedIndex     = 0;
		

        if (equipment_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct event_type from Config_Event_Type ", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    event_type.Items.Add(DataReader["event_type"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a Equipment Name first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_line_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_line_name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
		var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
		var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	    var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
	    line_empty_label.Visible         = false

		
		// [Array Reset] Collection arrays are reset here to default values
	 	line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		equipment_type.Items.Clear();
		event_type.Items.Clear();
		
		// [Setting Index] Setting Index to Zero	
		line_name.SelectedIndex 	  = 0;
		stage_name.SelectedIndex      = 0;
		equipment_name.SelectedIndex  = 0;
		equipment_type.SelectedIndex  = 0;
		event_type.SelectedIndex     = 0;
		
		
		if (shop_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct line_name from Config_Line WHERE shop_name = '"+shop_name.Text+"'", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    line_name.Items.Add(DataReader["line_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a shop first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_shop_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_shop_name(sender : System.Object, e : System.EventArgs)
{
	   var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
		var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
		var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	    var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		shop_empty_label.Visible              = false

		// [Array Reset] Collection arrays are reset here to default values
		shop_name.Items.Clear();
		line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		equipment_type.Items.Clear();
		event_type.Items.Clear();
		
		// [Setting Index] Setting Index to Zero	
		shop_name.SelectedIndex 	  = 0;
		line_name.SelectedIndex 	  = 0;
		stage_name.SelectedIndex      = 0;
		equipment_name.SelectedIndex  = 0;
		equipment_type.SelectedIndex  = 0;
		event_type.SelectedIndex     = 0;
		


			
		var DataReader : System.Data.SqlClient.SqlDataReader;
		var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct shop_name from Config_Shop ", connection);
		
		try{
			DataReader=RetrieveDataCmd.ExecuteReader();
            while(DataReader.Read())
	           {
		         shop_name.Items.Add(DataReader["shop_name"]);
	           }
	           DataReader.Close();			
			   connection.Close()
			
		}catch(ex:Exception){
			MessageBox.Show(ex);
		}
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_stage_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_stage_name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
		var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
		var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	   
		var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
        stage_empty_label.Visible             = false

		// [Array Reset] Collection arrays are reset here to default values
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		equipment_type.Items.Clear();
		event_type.Items.Clear();
		
		// [Setting Index] Setting Index to Zero	
		stage_name.SelectedIndex      = 0;
		equipment_name.SelectedIndex  = 0;
		equipment_type.SelectedIndex  = 0;
		event_type.SelectedIndex      = 0;
		
        if (line_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;

            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct stage_name from Config_Stage WHERE line_id IN (SELECT line_id from Config_Line where line_name = '"+line_name.Text+"')", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    stage_name.Items.Add(DataReader["stage_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a line first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Event_ID" Type="JScriptNet">
              <x:XData><![CDATA[function Event_ID(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var eventtxt: System.Windows.Controls.TextBox=ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();
	if(eventtxt.Text!=""){
		if(!long.TryParse(eventtxt.Text)){
			MessageBox.Show("Please enter number only!")
			eventtxt.Text="";
		}
	}
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="eventCode" Type="JScriptNet">
              <x:XData><![CDATA[function event_id_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	    var event_id_empty_label        : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_id_empty_label");
		event_id_empty_label.Visible         = false
		Event_ID();


}

function event_name_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var event_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_name_empty_label");
		event_name_empty_label.Visible       = false
}

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="GridCode" Type="JScriptNet">
              <x:XData><![CDATA[function Grid(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
	var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
	var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
	var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
	var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	
	//[Grid Selection Code]
	var gdxViewer		: Ico.Gdx.GdxViewControl = Ico.Gdx.GdxViewControl(ThisConfiguration.GetObjectByName("DefaultGrid").ToDependencyObject());
	var tab_list 		: ItemsControl = ItemsControl(gdxViewer.Items[0]);
	var grid_list 		: Ico.Gdx.GdxGridView = Ico.Gdx.GdxGridView(tab_list.Items[0]);
	var Row_Selected 	: DataRow;
	Row_Selected = grid_list.GetHighlightedRow();
		
	if(grid_list.GetHighlightedRow() != null)
	{
			if (Row_Selected.Item[0] != String.IsNullOrEmpty){
				Dropdown_shop_name();
				shop_name.SelectedValue = Row_Selected.Item[11];
				
				Dropdown_line_name();
				line_name.SelectedValue = Row_Selected.Item[10];
					
				Dropdown_stage_name();
				stage_name.SelectedValue     = Row_Selected.Item[8];
					
				Dropdown_equipment_type();
				equipment_type.SelectedValue = Row_Selected.Item[6];	
				
				Dropdown_equipment_name();
				equipment_name.SelectedValue = Row_Selected.Item[5];
				
				Dropdown_event_type();
				event_type.SelectedValue = Row_Selected.Item[3];    

				event_name.Text          = Row_Selected.Item[2];
				
				event_id.Text            = Row_Selected.Item[1]
			}
	}
	
	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="JScriptDotNetGlobalVariablesCode" Type="JScriptNet" EditorBrowsable="Never">
              <x:XData><![CDATA[
var ThisWindow : Ico.Gwx.GwxRuntimeViewControl;
var ThisDocument : Ico.Gwx.GwxDocument;
var ThisConfiguration : Ico.Gwx.GwxConfiguration;
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Update" Type="JScriptNet">
              <x:XData><![CDATA[function Update(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]
		
			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Update';
			
			// [Provisioning Security System]
			var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
			//MessageBox.Show(logged_in_user.Text);
	
			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
			var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
			var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
			var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
			var event_id       			    : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_id").ToDependencyObject();	
			var event_name              	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("event_name").ToDependencyObject();
			var event_type	                : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("event_type").ToDependencyObject();
	        var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var event_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_type_empty_label");
			var event_id_empty_label        : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_id_empty_label");
			var event_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("event_name_empty_label");
			
			// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= logged_in_user.Text;	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			

            

			// [Query String] Building Query for calling stored procedure					
			var query_string : String = "Exec [dbo].[SP_Config_Event] ";		
			query_string += "@shop_name				        = '"+shop_name.Text+"',";
			query_string += "@line_name				        = '"+line_name.Text+"',";
			query_string += "@equipment_name				= '"+equipment_name.Text+"',";
			query_string += "@equipment_type				= '"+equipment_type.Text+"',";
			query_string += "@event_name        		    = '"+event_name.Text+"',";
			query_string += "@stage_name				    = '"+stage_name.Text+"',";
			query_string += "@event_id				    	= '"+event_id.Text+"',";
			query_string += "@event_type				    = '"+event_type.Text+"',";
			query_string += "@created_by				    = '"+created_by+"',";
			query_string += "@ActionOp 						= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( shop_name.Text =="" || line_name.Text =="" || equipment_name.Text =="" || equipment_type.Text == ""|| event_name.Text  ==""||stage_name.Text ==""||event_id.Text ==""||event_type.Text ==""||created_by.Text=="" ){
					
					//MessageBox.Show("Please fill in all the required values!")
				if(shop_name.Text == "")
				{shop_empty_label.Visible = true}
				else
				{shop_empty_label.Visible = false}
				
				if(line_name.Text == "")
				{line_empty_label.Visible = true}
				else					
				{line_empty_label.Visible = false}
        		
				if(stage_name.Text == "")
				{stage_empty_label.Visible = true}
				else
				{stage_empty_label.Visible = false}
				
				if(equipment_name.Text == "")
				{equipment_name_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(equipment_type.Text == "")
				{equipment_type_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(event_type.Text == "")
				{event_type_empty_label.Visible = true}
				else
				{event_type_empty_label.Visible = false}
				
				if(event_id.Text == "")
				{event_id_empty_label.Visible = true}
				else
				{event_id_empty_label.Visible = false}
				
				if(event_name.Text == "")
				{event_name_empty_label.Visible = true}
				else
				{event_name_empty_label.Visible = false}


			} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
          </script:ScriptCodeManager.Scripts>
          <script:ScriptCodeManager.AssemblyReferences>
            <ic:AssemblyReference AssemblyName="mscorlib" />
            <ic:AssemblyReference AssemblyName="System" />
            <ic:AssemblyReference AssemblyName="System.Core" />
            <ic:AssemblyReference AssemblyName="System.Data" />
            <ic:AssemblyReference AssemblyName="System.Xml" />
            <ic:AssemblyReference AssemblyName="System.Drawing" />
            <ic:AssemblyReference AssemblyName="System.Windows.Forms" />
            <ic:AssemblyReference AssemblyName="WindowsBase" />
            <ic:AssemblyReference AssemblyName="PresentationCore" />
            <ic:AssemblyReference AssemblyName="PresentationFramework" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCore" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCoreCommands" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeViewControl" />
            <ic:AssemblyReference AssemblyName="GwxConfigCore" />
            <ic:AssemblyReference AssemblyName="IcoComponentModel" />
            <ic:AssemblyReference AssemblyName="IcoFwxClientWrapper" />
            <ic:AssemblyReference AssemblyName="GdxViewControl" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/GdxViewControl.DLL" />
            <ic:AssemblyReference AssemblyName="IcoWPFSpecialized" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/IcoWPFSpecialized.DLL" />
            <ic:AssemblyReference AssemblyName="IcoCommonCore.Net" />
          </script:ScriptCodeManager.AssemblyReferences>
        </script:ScriptCodeManager>
      </gwx:GwxDocument.ScriptCodeManager>
      <gwx:GwxDocument.EventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="AnimationStarted" MethodName="ThisDisplay_AnimationStarted" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStopped" MethodName="ThisDisplay_AnimationStopped" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxDocument.EventBindings>
      <gwx:GwxDocument.RuntimeWindowProperties>
        <gwx:GwxWindowProperties LeftString="0%" TopString="0%" WindowState="Maximized" WidthString="100%" HeightString="100%" ControlBox="False" MaximizeBox="False" MinimizeBox="False" HorizontalScrollVisible="Hidden" VerticalScrollVisible="Hidden" MenuVisible="False" ShowContextMenu="False" NavigationBarVisible="False" StatusBarVisible="False" TitleBarVisible="False" OuterBorder="False" Resizable="False" InnerBorder="False" CommandingEnabled="False" DragAndDropCommandingEnabled="False" />
      </gwx:GwxDocument.RuntimeWindowProperties>
      <gwx:GwxDocument.ToolTipOptions>
        <gwx:GwxToolTipOptions ShowToolTips="False" />
      </gwx:GwxDocument.ToolTipOptions>
    </gwx:GwxDocument>
  </gwx:GwxDocument.GwxDocument>
  <Rectangle Stroke="#FF000000" Width="1100" Height="30" Canvas.Left="0" Canvas.Top="300">
    <Rectangle.Fill>
      <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
          <GradientStop Color="#FFF5F5F5" Offset="0" />
          <GradientStop Color="#FFEBEBEB" Offset="0.49" />
          <GradientStop Color="#FFE1E1E1" Offset="0.51" />
          <GradientStop Color="#FFCDCDCD" Offset="1" />
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.RelativeTransform>
          <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
        </LinearGradientBrush.RelativeTransform>
      </LinearGradientBrush>
    </Rectangle.Fill>
  </Rectangle>
  <ig:GdxViewControl FileVersion="10.97.020.00" FontFamily="Segoe UI" FontSize="12" IsTabStop="True" Name="DefaultGrid" Width="1100" Height="428" gwx:GwxProperties.Description="Grid Size=H:443,W:1100&#xD;&#xA;Position=X:0,Y:300&#xD;&#xA;Grid Header Font=Style :Calibri,Size:17,Color:White&#xD;&#xA;Grid Header Background color=R :0,G : 24,B :72&#xD;&#xA;Grid Text Font=Style :Calibri,Size:16,Color:White&#xD;&#xA;Grid Scrolbar Foreground color=R :0,G : 24,B :72&#xD;&#xA;" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="0" Canvas.Top="300">
    <ig:GdxViewControl.DataDictionaryRepository>
      <ig12:DataDictionary Name="DailyStatus" Key="47993581">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="15056362" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="49320909" />
      </ig12:DataDictionary>
      <ig12:DataDictionary Name="WeeklyStatus" Key="53237738">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="61233639" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="49445506" />
      </ig12:DataDictionary>
      <ig12:DataDictionary Name="MonthlyStatus" Key="27952209">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="1264671" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="35726287" />
      </ig12:DataDictionary>
      <ig12:DataDictionary Name="AnnualStatus" Key="63571381">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="54214786" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="47842506" />
      </ig12:DataDictionary>
    </ig:GdxViewControl.DataDictionaryRepository>
    <ig:GdxViewControl.FiltersRepository>
      <igd:GdxFilter Key="49320909" Expression="x={{Daily}}==0" Name="Daily_Not Applicable" />
      <igd:GdxFilter Key="15056362" Expression="x={{Daily}}==1" Name="Daily_Applicable" />
      <igd:GdxFilter Key="61233639" Expression="x={{Weekly}}==1" Name="Weekly_Applicable" />
      <igd:GdxFilter Key="49445506" Expression="x={{Weekly}}==0" Name="Weekly_Not Applicable" />
      <igd:GdxFilter Key="1264671" Expression="x={{Monthly}}==1" Name="Monthly_Applicable" />
      <igd:GdxFilter Key="35726287" Expression="x={{Monthly}}==0" Name="Monthly_Not Applicable" />
      <igd:GdxFilter Key="54214786" Expression="x={{Annual}}==1" Name="Annual_Applicable" />
      <igd:GdxFilter Key="47842506" Expression="x={{Annual}}==0" Name="Annual_Not Applicable" />
    </ig:GdxViewControl.FiltersRepository>
    <ig:GdxViewControl.SubscriptionsRepository>
      <igd:GdxSubscription Key="11348180" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssemblyID" />
          <igd:GdxDataField Key="AssemblyName" />
          <igd:GdxDataField Key="SubAssemblyID" />
          <igd:GdxDataField Key="SubAssemblyName" />
          <igd:GdxDataField Key="ComponentID" />
          <igd:GdxDataField Key="ComponentName" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz. GridAssetComponentInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="3170613" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="706558" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="19812975" Name="New Subscription">
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Config_Event</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="55833381" Name="New Subscription">
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Config_Event</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="53645294" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="uid" BuiltInType="Int32" />
          <igd:GdxDataField IsPrimaryKey="True" Key="event_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="event_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="event_type" />
          <igd:GdxDataField IsPrimaryKey="True" Key="equipment_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="equipment_name" />
          <igd:GdxDataField Key="equipment_type" />
          <igd:GdxDataField IsPrimaryKey="True" Key="stage_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="stage_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="line_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="line_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="shop_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="plant_name" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Config_Event</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
    </ig:GdxViewControl.SubscriptionsRepository>
    <ig:GdxViewControl.Header>
      <TextBlock Text="Event Configuration" FontFamily="Calibri" FontStyle="Normal" FontWeight="Bold" FontSize="19" Foreground="#FF001848" Padding="0,0,0,0" TextAlignment="Center" Visibility="Visible" />
    </ig:GdxViewControl.Header>
    <ig:GdxViewControl.Items>
      <iwc:MultipleTabItem IsSelected="True" Header="Tab" FontFamily="Calibri" FontSize="16">
        <ig:GdxGridView HeaderBackground="#FF001848" HeaderBorderBrush="#FFC6C7B5" HeaderCellBorderThickness="0,0,0,0" HeaderFontFamily="Calibri" HeaderFontSize="17" HeaderMouseOverForeground="#FFFFFFFF" HeaderMouseOverBorderBrush="#FF000000" HeaderSelectedForeground="#FFFFFFFF" HeaderSelectedBorderBrush="#FF000000" GroupHeaderBorderBrush="#FFD8D8D8" GroupHeaderBackground="#FFD8D8D8" GroupHeaderForeground="#FFFFFFFF" RowHeaderBackground="#FFD8D8D8" RowHeaderBorderBrush="#FFD8D8D8" RowHeaderCellBorderBrush="#FF626262" RowHeaderBorderThickness="0,0,1,2" RowHeight="25" ScrollBarBackground="#FFD8D8D8" ScrollBarForeground="#FF001848" ScrollBarMouseOverForeground="#FF171F31" ScrollBarMousePressedForeground="#FF171F31" ScrollBarBorderBrush="#FF373D54" ScrollBarMouseOverBorderBrush="#FF229EC8" DateTimeFormat="d" DoubleFormat="N0" SubscriptionID="53645294" AllowPaging="False" BorderBrush="#FFA5B6CB" BorderThickness="0,0,0,0" Background="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Uid="local:GdxView_1">
          <ig:GdxGridView.HeaderMouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF8993A2" Offset="0" />
                <GradientStop Color="#FF545F6D" Offset="0.5" />
                <GradientStop Color="#FF0C1C32" Offset="0.51" />
                <GradientStop Color="#FF132F54" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderMouseOverBackground>
          <ig:GdxGridView.HeaderSelectedBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderSelectedBackground>
          <ig:GdxGridView.MouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.3">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.MouseOverBackground>
          <ig:GdxGridView.SelectionBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.9">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.SelectionBackground>
          <ig:GdxGridView.Columns>
            <ig:GdxColumn Key="uid" IsVisible="False" Format="{x:Null}" Text="uid" />
            <ig:GdxColumn Key="event_id" Index="1" Format="{x:Null}" Text="Event ID" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="event_name" Index="2" Format="{x:Null}" Text="Event Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="event_type" Index="3" Format="{x:Null}" Text="Event Type" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="equipment_id" Index="4" IsVisible="False" Format="{x:Null}" Text="equipment_id" />
            <ig:GdxColumn Key="equipment_name" Index="5" Format="{x:Null}" Text="Equipment Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="equipment_type" Index="6" Format="{x:Null}" Text="Equipment Type" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="stage_id" Index="7" IsVisible="False" Format="{x:Null}" Text="stage_id" />
            <ig:GdxColumn Key="stage_name" Index="8" Format="{x:Null}" Text="Stage Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="line_id" Index="9" IsVisible="False" Format="{x:Null}" Text="line_id" />
            <ig:GdxColumn Key="line_name" Index="10" Format="{x:Null}" Text="Line Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="shop_name" Index="11" Format="{x:Null}" Text="Shop Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="plant_name" Index="12" Format="{x:Null}" Text="Plant Name" TextAlignment="Center" IsStar="True" />
          </ig:GdxGridView.Columns>
          <ig:GdxGridView.Sorts>
            <ig:GdxSort PropertyName="event_id" Direction="Ascending" />
          </ig:GdxGridView.Sorts>
        </ig:GdxGridView>
      </iwc:MultipleTabItem>
    </ig:GdxViewControl.Items>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Grid" ShowToolTip="False" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Grid" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </ig:GdxViewControl>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:15" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="589" Canvas.Top="15">
    <TextBlock Text="Line Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="77" Canvas.Top="55">
    <TextBlock Text="Stage Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="line_name" Width="250" Height="25" Canvas.Left="740" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_line_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="equipment_type_label" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="589" Canvas.Top="55">
    <TextBlock Text="Equipment Type" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="event_name_label" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="589" Canvas.Top="135">
    <TextBlock Text="Event Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="event_id_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="77" Canvas.Top="135">
    <TextBlock Text="Event ID" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="event_type_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="589" Canvas.Top="95">
    <TextBlock Text="Event Type" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="stage_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="55">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_stage_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="event_type" Width="250" Height="25" Canvas.Left="740" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_event_type" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="event_id" Width="250" Height="25" IsEnabled="True" Canvas.Left="232" Canvas.Top="135">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="event_id_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="event_name" Width="250" Height="25" IsEnabled="True" Canvas.Left="740" Canvas.Top="135">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="event_name_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="equipment_lable" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="77" Canvas.Top="95">
    <TextBlock Text="Equipment Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="equipment_name" Width="250" Height="25" Canvas.Left="231.974823" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_equipment_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="77" Canvas.Top="15">
    <TextBlock Text="Shop Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="shop_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_shop_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="15">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990" Canvas.Top="15">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="55">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="equipment_name_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="479.974823" Canvas.Top="95">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="event_type_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990" Canvas.Top="95">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="event_id_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="135">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="event_name_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990" Canvas.Top="136.38403">
    <TextBlock Text="*" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="equipment_type" Width="250" Height="25" Canvas.Left="739.999976" Canvas.Top="55">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_equipment_type" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="equipment_type_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="989.999976" Canvas.Top="55">
    <TextBlock Text="*" />
  </Label>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Modify" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="789.999993" Canvas.Top="233.000002">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ModifyScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Update" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshMod" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshMod" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Config_Event.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="MODIFY" />
  </Button>
  <Path Fill="#FFFFFFFF" Name="DatabaseEdit2" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Edit, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Edit">
    <Path.Data>
      <PathGeometry FillRule="EvenOdd" Figures="M816.509500334529,250.312894123643L825.851944751603,250.312894123643C826.219356184934,250.312894123643,826.518806769628,250.787821753234,826.518806769628,251.373902923103L826.518806769628,254.469356480144C826.518806769628,255.052069748927,826.219356184934,255.526997378517,825.851944751603,255.526997378517L816.509500334529,255.526997378517C816.139965049026,255.526997378517,815.842637869968,255.052069748927,815.842637955491,254.469356480144L815.842637955491,251.373902923103C815.842637869968,250.787821753234,816.139965049026,250.312894123643,816.509500334529,250.312894123643z M816.509500334529,243.725369903636L822.706648203518,243.725369903636 822.3987019553,246.659857332349 826.125910044606,245.13702353799 826.503940951159,244.560906907485C826.514559574946,244.631658439151,826.518806769628,244.70577888278,826.518806769628,244.783268238371L826.518806769628,247.882841451108C826.518806769628,248.465696579456,826.219356184934,248.940738774966,825.851944751603,248.940738774966L816.509500334529,248.940738774966C816.139965049026,248.940738774966,815.842637869968,248.465696579456,815.842637955491,247.882841451108L815.842637955491,244.783268238371C815.842637869968,244.197044535019,816.139965049026,243.725369903636,816.509500334529,243.725369903636z M823.523830121145,242.182043972753L825.263555813772,244.756970979293 823.056504069988,245.29285205873z M817.806760993778,238.657928581772C817.390590087849,238.657928244813 817.048731688968,239.200526728486 817.048731795146,239.861124099841 817.048731688968,240.528469572361 817.390590087849,241.06440288038 817.806760993778,241.06440288038 818.225057429521,241.06440288038 818.562690931491,240.528469572361 818.562690931491,239.861124099841 818.562690931491,239.200526728486 818.225057429521,238.657928244813 817.806760993778,238.657928581772z M826.295336798927,237.53203163334L828.062445854549,240.311670079928 825.719752091265,244.06165457439 825.694264251255,243.445080674065 825.099564194484,243.087938940638 825.097440809505,242.434302965227 824.502740540374,242.147915796092 824.44751851511,241.410048597663 823.952643035642,241.28201646476z M816.509389100499,237.255762690378L825.506079336898,237.255762690378 822.945316335671,241.411570639606 822.834897131233,242.469859846301 816.509389100499,242.469859846301C816.139925868654,242.469859846301,815.842649797599,241.994654225874,815.842649853521,241.411570639606L815.842649853521,238.314134317144C815.842649797599,237.727676966708,816.139925868654,237.255762690378,816.509389100499,237.255762690378z M827.548890575788,235.84748067871C827.645324192855,235.843853294011,827.735787528359,235.892217405258,827.802677446852,235.995394374232L829.053408962848,237.966283071119C829.206300114112,238.202116006348,829.174447428151,238.643460321315,828.985457882761,238.94667392189L828.728516620204,239.361066098762 826.925679313474,236.524333793387 827.18474374865,236.113310808151C827.291050819196,235.94275303231,827.424904982095,235.852144252394,827.548890575788,235.84748067871z" />
    </Path.Data>
  </Path>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Clear" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:504  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="503.999993" Canvas.Top="233.000002">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ClearScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Clear" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="CLEAR" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Add" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:647  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="646.999993" Canvas.Top="233.000002">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="AddScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Create" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Config_Event.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="ADD" />
  </Button>
  <Path Fill="#FFFFFFFF" Name="DatabaseAdd1" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Add, Connect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Add">
    <Path.Data>
      <PathGeometry FillRule="EvenOdd" Figures="M681.990618669297,248.985358201352L687.098347492824,248.985358201352 687.075572817317,249.076142489239C686.899643802742,249.80424784168 686.80357803765,250.590359100586 686.80357803765,251.40987607018 686.80357803765,252.229354750468 686.899643802742,253.015397293741 687.075572817317,253.743418888326L687.09832047099,253.834084547737 681.990618669297,253.834084547737C681.632617677019,253.834084547737,681.342015525187,253.392532263684,681.342015438696,252.849473318414L681.342015438696,249.969114074913C681.342015525187,249.426055129643,681.632617677019,248.985358201352,681.990618669297,248.985358201352z M690.730210734816,248.083509650178L690.730210734816,250.724178176042 688.990995783562,250.724178176042 688.990995783562,252.397992822274 690.730210734816,252.397992822274 690.730210734816,255.038489046261 691.832657567493,255.038489046261 691.832657567493,252.397992822274 693.571872518748,252.397992822274 693.571872518748,250.724178176042 691.832657567493,250.724178176042 691.832657567493,248.083509650178z M691.278505772709,246.291433010519C693.140348274309,246.291433010519 694.649817305316,248.582162913951 694.649817305316,251.409722229215 694.649817305316,254.234444717101 693.140348274309,256.526986183353 691.278505772709,256.526986183353 689.416597292804,256.526986183353 687.9074198724,254.234444717101 687.9074198724,251.409722229215 687.9074198724,248.582162913951 689.416597292804,246.291433010519 691.278505772709,246.291433010519z M681.990618669297,242.862147669246L691.065848909345,242.862147669246C691.423841119526,242.862147669246,691.714120672141,243.302797419642,691.714120672141,243.845969865359L691.714120672141,244.647525389585 691.622270312829,244.63510187706C691.508783347502,244.621948474626 691.394126562033,244.615250239048 691.278460285959,244.615250239048 689.736395719813,244.615250239048 688.373911042916,245.805979301466 687.568900044679,247.613664303475L687.528394318601,247.709505856658 681.990618669297,247.709505856658C681.632617677019,247.709505172919,681.342015525187,247.268855422524,681.342015636994,246.725032742332L681.342015636994,243.845969865359C681.342015525187,243.302797419642,681.632617677019,242.862147669246,681.990618669297,242.862147669246z M683.251441089485,238.153246759799C682.845917071592,238.153246759799 682.515438580765,238.654563215787 682.515438805947,239.270735216012 682.515438580765,239.88773744464 682.845917071592,240.388042413381 683.251441089485,240.388042413381 683.657251403685,240.388042413381 683.987452785628,239.88773744464 683.987452785628,239.270735216012 683.987452785628,238.654563215787 683.657251403685,238.153246759799 683.251441089485,238.153246759799z M681.990618669297,236.847307156574L691.065848008617,236.847307156574C691.423841119526,236.847307347687,691.714120672141,237.288006751442,691.714120672141,237.831202546796L691.714120672141,240.711259202213C691.714120672141,241.2553208487,691.423841119526,241.695006870924,691.065848008617,241.695006870924L681.990618669297,241.695006870924C681.632617677019,241.695006870924,681.342015525187,241.2553208487,681.342015438696,240.711259202213L681.342015438696,237.831202546796C681.342015525187,237.288006751442,681.632617677019,236.847307347687,681.990618669297,236.847307156574z" />
    </Path.Data>
  </Path>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Remove" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:933  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="932.999993" Canvas.Top="233.000002">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="RemoveScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Delete" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshRemove" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshRemove" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Config_Event.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="REMOVE" />
  </Button>
  <Path Fill="#FFFFFFFF" Name="DatabaseRemove2" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Remove, Delete, Disconnect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Remove">
    <Path.Data>
      <PathGeometry FillRule="EvenOdd" Figures="M959.894764848686,249.030460436672L965.002429472843,249.030460436672 964.979726630374,249.120957560298C964.803792436615,249.84907321336 964.707724419703,250.635194092693 964.707724419703,251.454721026633 964.707724419703,252.27424830244 964.803792436615,253.060329866862 964.979726630374,253.788382957925L965.002508061339,253.879186737892 959.894764848686,253.879186737892C959.536763923963,253.879186737892,959.246161776379,253.437479218372,959.246161820748,252.894439726393L959.246161820748,250.014353117965C959.246161776379,249.471141324095,959.536763923963,249.030460436672,959.894764848686,249.030460436672z M967.955732630982,248.555605657252L967.176169442974,249.73927896175 968.405960711943,251.60620447273 967.176169442974,253.473094771224 967.955732630982,254.656597141304 969.185546192965,252.789706842812 970.415360655674,254.656597141304 971.194766441509,253.473094771224 969.965019083016,251.60620447273 971.194766441509,249.73927896175 970.415360655674,248.555605657252 969.185546192965,250.422531510102z M969.182652154763,246.336534739124C971.044494656363,246.336534739124 972.553963687368,248.627131795756 972.553963687368,251.454738120074 972.553963687368,254.279678551253 971.044494656363,256.572087170818 969.182652154763,256.572087170818 967.320743674856,256.572087170818 965.811566254456,254.279678551253 965.811566254456,251.454738120074 965.811566254456,248.627131795756 967.320743674856,246.336534739124 969.182652154763,246.336534739124z M959.894764848686,242.907249188007L968.969994390669,242.907249188007C969.327987501578,242.907249188007,969.618267054195,243.3479304173,969.618267054195,243.890970251146L969.618267054195,244.692268397194 969.526537842763,244.679861635479C969.413048175251,244.666707548505 969.298388912782,244.660009654385 969.18271925898,244.660009654385 967.64061596154,244.660009654385 966.278097056991,245.850753831896 965.473065792378,247.658461507863L965.432286470253,247.754949198998 959.894764848686,247.754949198998C959.536763923963,247.754949198998,959.246161776379,247.314268311575,959.246161820748,246.770237058119L959.246161820748,243.890970251146C959.246161776379,243.3479304173,959.536763923963,242.907249188007,959.894764848686,242.907249188007z M961.155587471539,238.19834737505C960.750063341054,238.198347238302 960.419584872746,238.699458637855 960.419584534972,239.315582916711 960.419584872746,239.932542141806 960.750063341054,240.432802253785 961.155587471539,240.432802253785 961.56139778574,240.432802253785 961.891599167681,239.932542141806 961.891599167681,239.315582916711 961.891599167681,238.699458637855 961.56139778574,238.198347238302 961.155587471539,238.19834737505z M959.894764848686,236.892408307271L968.969994390669,236.892408307271C969.327987501578,236.892408366075,969.618267054195,237.333107108624,969.618267054195,237.876136310351L969.618267054195,240.756223158086C969.618267054195,241.300250650984,969.327987501578,241.740108318263,968.969994390669,241.740108660134L959.894764848686,241.740108660134C959.536763923963,241.740108318263,959.246161776379,241.300250650984,959.246161820748,240.756223158086L959.246161820748,237.876136310351C959.246161776379,237.333107108624,959.536763923963,236.892408366075,959.894764848686,236.892408307271z" />
    </Path.Data>
  </Path>
  <Canvas>
    <Path Fill="#FFFFFFFF" Name="DatabaseRefresh1" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Refresh, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Refresh">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M535.443702770794,248.29036788014L539.408842238766,248.29036788014C539.184603933915,249.128946033565 539.055235382632,250.036619481597 539.055235382632,250.991404785163 539.055235382632,251.638397761671 539.117763375632,252.263404786896 539.225570609484,252.86014532685L535.443702770794,252.86014532685C535.09225215419,252.86014532685,534.807641816741,252.445567906731,534.807641653396,251.93362745063L534.807641653396,249.220027279456C534.807641816741,248.704945928311,535.09225215419,248.29036788014,535.443702770794,248.29036788014z M544.226462062765,245.452725906708C544.267691307919,245.451155773213,544.309190452187,245.451155773213,544.351229179103,245.452725906708L544.353385353964,245.452725906708 544.35769684138,245.452725906708C544.88586978697,245.45900738277,545.386018064352,245.622321364019,545.840893999247,245.914402307267L545.855984205208,245.926964631337C547.199053494943,246.796925985021 548.130363448548,248.766116131114 548.115272595864,251.043090753597 548.093714512053,254.102087949048 546.375534822691,256.558079771896 544.275775993554,256.52667396172 542.637360761589,256.501548999548 541.253331479089,254.968909035738 540.735937036465,252.845826651449L542.096253138166,252.500354574792C542.477831415644,253.712647738141 543.312129453164,254.560624082618 544.288710671381,254.57632761576 545.636091664103,254.59517078784 546.737710544491,253.018562689779 546.750645222319,251.055653705722 546.76573629058,249.095885302681 545.683519965866,247.487870138337 544.336138973144,247.469026024176 544.221880676235,247.469026024176 544.109778554186,247.481588976301 543.999832822567,247.500432776436L543.997676647713,247.487870138337C543.635500925909,247.556964176837,543.299194775338,247.742263481316,543.006004361236,248.021781158414L543.47381518954,248.665615654382C543.501840935623,248.703303568677 543.512619438596,248.762975864122 543.497528370332,248.813226102488 543.484593692506,248.866617235899 543.452257105727,248.901164569174 543.413452209943,248.90430546422L542.277340567917,248.992243302854 541.268421900625,249.070759712459 541.2619546695,249.070759712459C541.23392892341,249.070759712459 541.210215095888,249.051915912326 541.190812540215,249.023650369137 541.171410415688,248.992243302854 541.162787225278,248.95141480754 541.169254671978,248.907445731211L541.330940408353,247.597792672147 541.563767627284,245.744806849956C541.570235073985,245.688275135528 541.598260820069,245.64430574517 541.634909756567,245.634884002118 541.673714005624,245.622321364019 541.712518685832,245.64430574517 541.734076554068,245.691415716546L542.107031641138,246.489142136682C542.624426083756,245.945808745499 543.238831580173,245.594055192778 543.90497708134,245.487272925958 543.913600271748,245.484132344939 543.922223462159,245.484132344939 543.930846652569,245.484132344939 543.989053457303,245.474710601887 544.045104733902,245.468429125824 544.103311538637,245.462147963787 544.144271315825,245.457437249274 544.185231739741,245.454296040202 544.226462062765,245.452725906708z M535.44356894222,242.518603312318L544.359340811534,242.518603312318C544.710713239312,242.518603312318,544.997405379575,242.933195491693,544.997405379575,243.448234449234L544.997405379575,243.702648832002C544.7171858598,243.633562958196 544.430467635033,243.589626854671 544.137302658714,243.589627168697 542.313629279643,243.589626854671 540.720599782276,244.990361473652 539.823841226534,247.088319837849L535.44356894222,247.088319837849C535.092196751577,247.088319837849,534.807635989696,246.673727658477,534.807636016673,246.161832108195L534.807636016673,243.448234449234C534.807635989696,242.933195491693,535.092196751577,242.518603312318,535.44356894222,242.518603312318z M536.683058821101,238.080735292788C536.284263200669,238.080735292788 535.958759740509,238.551514479481 535.958759740509,239.132142372311 535.958759740509,239.712770233738 536.284263200669,240.186688148692 536.683058821101,240.186688148692 537.081854225955,240.186688148692 537.405201985524,239.712770233738 537.405201985524,239.132142372311 537.405201985524,238.551514479481 537.081854225955,238.080735292788 536.683058821101,238.080735292788z M535.443559068915,236.847293373332L544.359334128728,236.847293373332C544.710705047485,236.847293373332,544.997406888595,237.264717665298,544.997406888595,237.77629790137L544.997406888595,240.491125414497C544.997406888595,241.002705681974,544.710705047485,241.416991371287,544.359334128728,241.416991371287L535.443559068915,241.416991371287C535.092187826793,241.416991371287,534.807641814601,241.002705681974,534.807641653396,240.491125414497L534.807641653396,237.77629790137C534.807641814601,237.264717665298,535.092187826793,236.847293373332,535.443559068915,236.847293373332z" />
      </Path.Data>
    </Path>
  </Canvas>
  <Canvas Name="logged_in_user_group" Visibility="Hidden" gwx:GwxProperties.Locked="True">
    <TextBox FontFamily="Segoe UI" FontSize="12" Name="logged_in_user" Width="250" Height="25" Canvas.Left="232.000001" Canvas.Top="233.000002">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxProcessPoint AnimationMode="Analog" DataSource="localsim::currentUser" />
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="CurrentUser_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>*.??</TextBox>
    <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="logged_in_user_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="77.000001" Canvas.Top="233.000002">
      <TextBlock Text="Logged in User" />
    </Label>
  </Canvas>
</Canvas>