<?xml version="1.0" encoding="utf-8"?>
<Canvas Background="#FF243782" Width="1100" Height="700" Focusable="False" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:iwm="clr-namespace:Ico.Windows.Media;assembly=IcoWPF" xmlns:gwx="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCore" xmlns:script="clr-namespace:Ico.Script;assembly=IcoScriptEngine" xmlns:ic="clr-namespace:Ico.Collections;assembly=IcoCollections" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ig="clr-namespace:Ico.Gdx;assembly=GdxViewControl" xmlns:iws="clr-namespace:Ico.WPF.Specialized;assembly=IcoWPFSpecialized" xmlns:ig13="clr-namespace:Ico.Gdx;assembly=GdxClientCommon" xmlns:igd="clr-namespace:Ico.Gdx.Data;assembly=GdxClientCommon" xmlns:iwc="clr-namespace:Ico.Windows.Controls;assembly=IcoWPF" xmlns:gwxcmd="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCoreCommands" xmlns:icc="clr-namespace:Ico.Commanding.Commands;assembly=IcoCommands">
  <Canvas.Resources>
    <BitmapImage x:Key="GwxThumbnailImageKey">
      <iwm:BitmapImageInfo.StreamSource>
        <iwm:Base64Stream Data="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" />
      </iwm:BitmapImageInfo.StreamSource>
    </BitmapImage>
  </Canvas.Resources>
  <gwx:GwxDocument.GwxDocument>
    <gwx:GwxDocument FileVersion="10.97.020.00" IsScalable="True" MinimumZoom="0.16" PanEnabled="False" PreferredStretch="Fill" ScanRate="500">
      <gwx:GwxDocument.ScriptCodeManager>
        <script:ScriptCodeManager>
          <script:ScriptCodeManager.Scripts>
            <script:ScriptCode Name="ThisDisplayCode" Type="JScriptNet">
              <x:XData><![CDATA[function ThisDisplay_AnimationStarted(sender : System.Object, e : System.EventArgs)
{
	        Clear();
            ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","Part Life Configuration")
	
			var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
		    var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
			var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
			var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
            var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  			var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
			var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
			var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
			var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
            var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
			var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
			var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
			var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
			var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
			var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
            var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  			var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");

			plant_empty_label.Visible            				= false
			shop_name_empty_label.Visible          				= false
			line_name_empty_label.Visible          				= false
			stage_name_empty_label.Visible   					= false
			equipment_name_empty_label.Visible  				= false
			sub_unit_name_empty_label.Visible      		 		= false
			part_id_empty_label.Visible     		  			= false
			part_name_empty_label.Visible        				= false
			part_life_value_estimated_empty_label.Visible     	= false
	        part_life_value_current_empty_label.Visible         = false
	     	part_life_units_empty_label.Visible            		= false
			change_reason_empty_label.Visible            		= false
			remarks_empty_label.Visible          				= false
			alert_value1_empty_label.Visible          			= false
			alert_value2_empty_label.Visible          			= false
			alert_user1_empty_label.Visible   					= false
			alert_user2_empty_label.Visible  					= false

}

function ThisDisplay_AnimationStopped(sender : System.Object, e : System.EventArgs)
{
            Clear();
			ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","")
			
			var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
		    var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
			var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
			var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
            var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  			var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
			var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
			var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
			var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
            var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
			var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
			var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
			var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
			var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
			var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
            var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  			var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");

			plant_empty_label.Visible            				= false
			shop_name_empty_label.Visible          				= false
			line_name_empty_label.Visible          				= false
			stage_name_empty_label.Visible   					= false
			equipment_name_empty_label.Visible  				= false
			sub_unit_name_empty_label.Visible      		 		= false
			part_id_empty_label.Visible     		  			= false
			part_name_empty_label.Visible        				= false
			part_life_value_estimated_empty_label.Visible     	= false
	        part_life_value_current_empty_label.Visible         = false
	     	part_life_units_empty_label.Visible            		= false
			change_reason_empty_label.Visible            		= false
			remarks_empty_label.Visible          				= false
			alert_value1_empty_label.Visible          			= false
			alert_value2_empty_label.Visible          			= false
			alert_user1_empty_label.Visible   					= false
			alert_user2_empty_label.Visible  					= false
}








]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Asterisk_Validation" Type="JScriptNet">
              <x:XData><![CDATA[
function part_id_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
	part_id_empty_label.Visible     		  			= false
}

function part_name_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
	part_name_empty_label.Visible        				= false
}

function part_life_value_estimated_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
	part_life_value_estimated_empty_label.Visible     	= false
}

function part_life_value_current_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
	part_life_value_current_empty_label.Visible         = false
}

function part_life_units_DropDownOpened(sender : System.Object, e : System.EventArgs)
{
	var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
	part_life_units_empty_label.Visible            		= false
}

function change_reason_DropDownOpened(sender : System.Object, e : System.EventArgs)
{
	var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
	change_reason_empty_label.Visible            		= false

}

function alert_value1_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
	alert_value1_empty_label.Visible          			= false

}

function alert_value2_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
	alert_value2_empty_label.Visible          			= false

}


function remarks_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
	remarks_empty_label.Visible          				= false
}
		

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ChangeCode" Type="JScriptNet">
              <x:XData><![CDATA[function Change(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
	// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
	connection.Open();
    
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Change';

	// [Provisioning Security System]
	var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
	//MessageBox.Show(logged_in_user.Text);

    
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
	var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	var current_value               = parseInt(part_life_value_current.Text)
    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
	var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
    var alert_value1           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value1").ToDependencyObject();
    var alert_value2           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value2").ToDependencyObject();
    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
    var enabled	                    : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("enabled").ToDependencyObject();
	
	var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
	var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
	var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
	var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
    var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  	var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
	var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
	var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
	var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
    var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
	var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
	var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
	var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
	var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
	var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
    var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  	var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");

    var part_life_current_pp      				: GwxDynamic              = ThisConfiguration.GetDynamicObjectByName("part_life_current_pp");
   
    part_life_current_pp.WriteValueToPrimaryDataSource(0);



    // [Hardcoded Variable] These variables have to be replaced using the tag for the logged in user.
	var created_by 		= logged_in_user.Text;
	var updated_by 		= logged_in_user.Text;	
	
	var enabled_int = -1;
			if(enabled.IsChecked == true){
				enabled_int =1;
			}
		    else {
				enabled_int =0;
			}

    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
		
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "EXEC [dbo].[SP_Maintenance_Part_Life]";
    query_string += "@plant_name     				= '"+plant_name.Text+"',";
	query_string += "@shop_name	    				= '"+shop_name.Text+"',";
	query_string += "@line_name 	    			= '"+line_name.Text+"',";
	query_string += "@stage_name        			= '"+stage_name.Text+"',";
    query_string += "@equipment_name        		= '"+equipment_name.Text+"',";
    query_string += "@sub_unit_name					= '"+sub_unit_name.Text+"',";
    query_string += "@part_id						= '"+part_id.Text+"',";
    query_string += "@part_name     				= '"+part_name.Text+"',";
    query_string += "@part_life_value_estimated		= '"+part_life_value_estimated.Text+"',";
    query_string += "@part_life_value_actual		= '"+current_value+"',";
    query_string += "@part_life_units				= '"+part_life_units.Text+"',";
	query_string += "@change_reason					= '"+change_reason.Text+"',";
	query_string += "@remarks       				= '"+remarks.Text+"',";
	query_string += "@alert_value_1				    = '"+alert_value1.Text+"',";
	query_string += "@alert_value_2				    = '"+alert_value2.Text+"',";
	query_string += "@enabled				        = '"+enabled_int+"',";
	query_string += "@alert_user_1   				= '"+alert_user_1.Text+"',";
	query_string += "@alert_user_2   				= '"+alert_user_2.Text+"',";
	query_string += "@created_by    				= '"+created_by+"',";
	query_string += "@updated_by    				= '"+updated_by+"',";
	query_string += "@ActionOp 			    		= '"+ActionOp+"'";		
			
	//[Inline Test Statement]MessageBox.Show(query_string);
					
    // [Validation Statement] This if-else statement checks if any of the fields have been left empty
    if ( plant_name.Text == ""|| shop_name.Text =="" || line_name.Text == ""|| stage_name.Text =="" || equipment_name.Text =="" || sub_unit_name.Text==""|| part_id.Text==""|| part_name.Text=="" || part_life_value_estimated.Text==""|| part_life_value_current.Text=="" ||  part_life_units.Text==""|| change_reason.Text==""||  remarks.Text==""|| alert_value1.Text=="" || alert_value2.Text==""|| alert_user_1.Text==""|| alert_user_2.Text=="" ){
        
		//MessageBox.Show("Please fill in all the required values!")

        if(plant_name.Text == "")
        {plant_empty_label.Visible = true}
        else 
        {plant_empty_label.Visible = false}
        
        if(shop_name.Text == "")
        {shop_name_empty_label.Visible = true}
        else					
        {shop_name_empty_label.Visible = false}
        
        if(line_name.Text == "")
        {line_name_empty_label.Visible = true}
        else					
        {line_name_empty_label.Visible = false}

        if(stage_name.Text == "")
        {stage_name_empty_label.Visible = true}
        else					
        {stage_name_empty_label.Visible = false}
        
        if(equipment_name.Text == "")
        {equipment_name_empty_label.Visible = true}
        else					
        {equipment_name_empty_label.Visible = false}
        
        if(sub_unit_name.Text == "")
        {sub_unit_name_empty_label.Visible = true}
        else					
        {sub_unit_name_empty_label.Visible = false}
        
        if(part_id.Text == "")
        {part_id_empty_label.Visible = true}
        else					
        {part_id_empty_label.Visible = false}
        
        if(part_name.Text == "")
        {part_name_empty_label.Visible = true}
        else					
        {part_name_empty_label.Visible = false}
        
        if(part_life_value_estimated.Text == "")
        {part_life_value_estimated_empty_label.Visible = true}
        else					
        {part_life_value_estimated_empty_label.Visible = false}
        
        if(part_life_value_current.Text == "")
        {part_life_value_current_empty_label.Visible = true}
        else					
        {part_life_value_current_empty_label.Visible = false}
        
		if(part_life_units.Text == "")
        {part_life_units_empty_label.Visible = true}
        else					
        {part_life_units_empty_label.Visible = false}
		
		if(change_reason.Text == "")
        {change_reason_empty_label.Visible = true}
        else					
        {change_reason_empty_label.Visible = false}
		
		if(remarks.Text == "")
        {remarks_empty_label.Visible = true}
        else					
        {remarks_empty_label.Visible = false}
		
		if(alert_value1.Text == "")
        {alert_value1_empty_label.Visible = true}
        else					
        {alert_value1_empty_label.Visible = false}

        if(alert_value2.Text == "")
        {alert_value2_empty_label.Visible = true}
        else					
        {alert_value2_empty_label.Visible = false}

		if(alert_user_1.Text == "")
        {alert_user1_empty_label.Visible = true}
        else					
        {alert_user1_empty_label.Visible = false}
		
		if(alert_user_2.Text == "")
        {alert_user2_empty_label.Visible = true}
        else					
        {alert_user2_empty_label.Visible = false}

        
        } else {
            // [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
            try {
                var reader : System.Data.SqlClient.SqlDataReader;
                //[Inline Test Statement] MessageBox.Show(query_string);

                var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
                reader = stored_procedure_query.ExecuteReader();
                Clear();	
                while(reader.Read())
                {
                    response = reader["Response"];
                    MessageBox.Show(response);
                }
                reader.Close();
            }
        catch(ex : Exception){
                MessageBox.Show (ex.Message);	
            }	
        }			
                        
		// [Closing connection with the database]
		

		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ClearCode" Type="JScriptNet">
              <x:XData><![CDATA[function Clear(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){		
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
	var part_life_value_current   	: System.Windows.Controls.TextBox   = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
	var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
    var alert_value1           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value1").ToDependencyObject();
    var alert_value2           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value2").ToDependencyObject();
    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
    var enabled	                    : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("enabled").ToDependencyObject();
		
	// [Array Reset] Collection arrays are reset here to default values
	plant_name.Items.Clear();
	shop_name.Items.Clear();
	line_name.Items.Clear();
	stage_name.Items.Clear();
    equipment_name.Items.Clear();
    sub_unit_name.Items.Clear();
	alert_user_1.Items.Clear();
	alert_user_2.Items.Clear();
	enabled.IsChecked= false;
	//part_life_units.Items.Clear();		
	//change_reason.Items.Clear();
			
	
	//[Variable Reset] Variables are reset here to default values
	plant_name.SelectedIndex        = 0;
	shop_name.SelectedIndex         = 0;
	line_name.SelectedIndex 	    = 0;
	stage_name.SelectedIndex 	    = 0;
	equipment_name.SelectedIndex 	= 0;
	sub_unit_name.SelectedIndex     = 0;
	part_life_units.SelectedIndex   = 0;
	change_reason.SelectedIndex     = 0;
	alert_user_1.SelectedIndex      = 0;
	alert_user_2.SelectedIndex      = 0;
			
	part_id.Clear();
	part_name.Clear();
	part_life_value_estimated.Clear();
	part_life_value_current.Clear();
	remarks.Clear();
	alert_value1.Clear();
	alert_value2.Clear();		
	//[Inline Test Statemnt] MessageBox.Show('Clearing all fields');
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="CreateCode" Type="JScriptNet">
              <x:XData><![CDATA[function Create(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
	// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
	connection.Open();
    
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Create';

	// [Provisioning Security System]
	var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
	//MessageBox.Show(logged_in_user.Text);

    
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
	var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
	var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
    var alert_value1           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value1").ToDependencyObject();
    var alert_value2           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value2").ToDependencyObject();
    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
    var enabled	                    : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("enabled").ToDependencyObject();
	
	var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
	var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
	var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
	var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
    var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  	var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
	var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
	var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
	var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
    var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
	var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
	var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
	var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
	var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
	var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
    var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  	var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");


    // [Hardcoded Variable] These variables have to be replaced using the tag for the logged in user.
	var created_by 		= logged_in_user.Text;
	var updated_by 		= logged_in_user.Text;
	
	var current_value =0;	
	
	var enabled_int = -1;
			if(enabled.IsChecked == true){
				enabled_int =1;
			}
		    else {
				enabled_int =0;
			}

    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
		
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "EXEC [dbo].[SP_Maintenance_Part_Life]";
    query_string += "@plant_name     				= '"+plant_name.Text+"',";
	query_string += "@shop_name	    				= '"+shop_name.Text+"',";
	query_string += "@line_name 	    			= '"+line_name.Text+"',";
	query_string += "@stage_name        			= '"+stage_name.Text+"',";
    query_string += "@equipment_name        		= '"+equipment_name.Text+"',";
    query_string += "@sub_unit_name					= '"+sub_unit_name.Text+"',";
    query_string += "@part_id						= '"+part_id.Text+"',";
    query_string += "@part_name     				= '"+part_name.Text+"',";
    query_string += "@part_life_value_estimated		= '"+part_life_value_estimated.Text+"',";
    query_string += "@part_life_value_actual		= '"+current_value+"',";
    query_string += "@part_life_units				= '"+part_life_units.Text+"',";
	query_string += "@change_reason					= '"+change_reason.Text+"',";
	query_string += "@remarks       				= '"+remarks.Text+"',";
	query_string += "@alert_value_1				    = '"+alert_value1.Text+"',";
	query_string += "@alert_value_2				    = '"+alert_value2.Text+"',";
	query_string += "@enabled				        = '"+enabled_int+"',";
	query_string += "@alert_user_1   				= '"+alert_user_1.Text+"',";
	query_string += "@alert_user_2   				= '"+alert_user_2.Text+"',";
	query_string += "@created_by    				= '"+created_by+"',";
	query_string += "@updated_by    				= '"+updated_by+"',";
	query_string += "@ActionOp 			    		= '"+ActionOp+"'";		
			
	//[Inline Test Statement]MessageBox.Show(query_string);
					
    // [Validation Statement] This if-else statement checks if any of the fields have been left empty
    if ( plant_name.Text == ""|| shop_name.Text =="" || line_name.Text == ""|| stage_name.Text =="" || equipment_name.Text =="" || sub_unit_name.Text==""|| part_id.Text==""|| part_name.Text=="" || part_life_value_estimated.Text==""|| part_life_value_current.Text=="" ||  part_life_units.Text==""|| change_reason.Text==""||  remarks.Text==""|| alert_value1.Text=="" || alert_value2.Text==""|| alert_user_1.Text==""|| alert_user_2.Text=="" ){
        
		//MessageBox.Show("Please fill in all the required values!")

        if(plant_name.Text == "")
        {plant_empty_label.Visible = true}
        else 
        {plant_empty_label.Visible = false}
        
        if(shop_name.Text == "")
        {shop_name_empty_label.Visible = true}
        else					
        {shop_name_empty_label.Visible = false}
        
        if(line_name.Text == "")
        {line_name_empty_label.Visible = true}
        else					
        {line_name_empty_label.Visible = false}

        if(stage_name.Text == "")
        {stage_name_empty_label.Visible = true}
        else					
        {stage_name_empty_label.Visible = false}
        
        if(equipment_name.Text == "")
        {equipment_name_empty_label.Visible = true}
        else					
        {equipment_name_empty_label.Visible = false}
        
        if(sub_unit_name.Text == "")
        {sub_unit_name_empty_label.Visible = true}
        else					
        {sub_unit_name_empty_label.Visible = false}
        
        if(part_id.Text == "")
        {part_id_empty_label.Visible = true}
        else					
        {part_id_empty_label.Visible = false}
        
        if(part_name.Text == "")
        {part_name_empty_label.Visible = true}
        else					
        {part_name_empty_label.Visible = false}
        
        if(part_life_value_estimated.Text == "")
        {part_life_value_estimated_empty_label.Visible = true}
        else					
        {part_life_value_estimated_empty_label.Visible = false}
        
        if(part_life_value_current.Text == "")
        {part_life_value_current_empty_label.Visible = true}
        else					
        {part_life_value_current_empty_label.Visible = false}
        
		if(part_life_units.Text == "")
        {part_life_units_empty_label.Visible = true}
        else					
        {part_life_units_empty_label.Visible = false}
		
		if(change_reason.Text == "")
        {change_reason_empty_label.Visible = true}
        else					
        {change_reason_empty_label.Visible = false}
		
		if(remarks.Text == "")
        {remarks_empty_label.Visible = true}
        else					
        {remarks_empty_label.Visible = false}
		
		if(alert_value1.Text == "")
        {alert_value1_empty_label.Visible = true}
        else					
        {alert_value1_empty_label.Visible = false}

        if(alert_value2.Text == "")
        {alert_value2_empty_label.Visible = true}
        else					
        {alert_value2_empty_label.Visible = false}

		if(alert_user_1.Text == "")
        {alert_user1_empty_label.Visible = true}
        else					
        {alert_user1_empty_label.Visible = false}
		
		if(alert_user_2.Text == "")
        {alert_user2_empty_label.Visible = true}
        else					
        {alert_user2_empty_label.Visible = false}

        
        } else {
            // [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
            try {
                var reader : System.Data.SqlClient.SqlDataReader;
                //[Inline Test Statement] MessageBox.Show(query_string);

                var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
                reader = stored_procedure_query.ExecuteReader();
                Clear();	
                while(reader.Read())
                {
                    response = reader["Response"];
                    MessageBox.Show(response);
                }
                reader.Close();
            }
        catch(ex : Exception){
                MessageBox.Show (ex.Message);	
            }	
        }			
                        
		// [Closing connection with the database]
		

		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Database_connection" Type="JScriptNet">
              <x:XData><![CDATA[
const DB_SERVER               : String = "AK-WKS-0476-LS\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "sa";
const DB_PASSWORD             : String = "sql_1234";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";
/*
const DB_SERVER               : String = "MSI\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "ks";
const DB_PASSWORD             : String = "8101";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";
*/]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="DeleteCode" Type="JScriptNet">
              <x:XData><![CDATA[function Delete(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
	// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
	connection.Open();
    
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Delete';

	// [Provisioning Security System]
	var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
	//MessageBox.Show(logged_in_user.Text);

    
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
	var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	var current_value               = parseInt(part_life_value_current.Text)
    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
	var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
    var alert_value1           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value1").ToDependencyObject();
    var alert_value2           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value2").ToDependencyObject();
    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
    var enabled	                    : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("enabled").ToDependencyObject();
	
	var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
	var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
	var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
	var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
    var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  	var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
	var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
	var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
	var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
    var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
	var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
	var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
	var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
	var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
	var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
    var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  	var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");


    // [Hardcoded Variable] These variables have to be replaced using the tag for the logged in user.
	var created_by 		= logged_in_user.Text;
	var updated_by 		= logged_in_user.Text;	
	
	var enabled_int = -1;
			if(enabled.IsChecked == true){
				enabled_int =1;
			}
		    else {
				enabled_int =0;
			}

    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
		
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "EXEC [dbo].[SP_Maintenance_Part_Life]";
    query_string += "@plant_name     				= '"+plant_name.Text+"',";
	query_string += "@shop_name	    				= '"+shop_name.Text+"',";
	query_string += "@line_name 	    			= '"+line_name.Text+"',";
	query_string += "@stage_name        			= '"+stage_name.Text+"',";
    query_string += "@equipment_name        		= '"+equipment_name.Text+"',";
    query_string += "@sub_unit_name					= '"+sub_unit_name.Text+"',";
    query_string += "@part_id						= '"+part_id.Text+"',";
    query_string += "@part_name     				= '"+part_name.Text+"',";
    query_string += "@part_life_value_estimated		= '"+part_life_value_estimated.Text+"',";
    query_string += "@part_life_value_actual		= '"+current_value+"',";
    query_string += "@part_life_units				= '"+part_life_units.Text+"',";
	query_string += "@change_reason					= '"+change_reason.Text+"',";
	query_string += "@remarks       				= '"+remarks.Text+"',";
	query_string += "@alert_value_1				    = '"+alert_value1.Text+"',";
	query_string += "@alert_value_2				    = '"+alert_value2.Text+"',";
	query_string += "@enabled				        = '"+enabled_int+"',";
	query_string += "@alert_user_1   				= '"+alert_user_1.Text+"',";
	query_string += "@alert_user_2   				= '"+alert_user_2.Text+"',";
	query_string += "@created_by    				= '"+created_by+"',";
	query_string += "@updated_by    				= '"+updated_by+"',";
	query_string += "@ActionOp 			    		= '"+ActionOp+"'";		
			
	//[Inline Test Statement]MessageBox.Show(query_string);
					
    // [Validation Statement] This if-else statement checks if any of the fields have been left empty
    if ( plant_name.Text == ""|| shop_name.Text =="" || line_name.Text == ""|| stage_name.Text =="" || equipment_name.Text =="" || sub_unit_name.Text==""|| part_id.Text==""|| part_name.Text=="" || part_life_value_estimated.Text==""|| part_life_value_current.Text=="" ||  part_life_units.Text==""|| change_reason.Text==""||  remarks.Text==""|| alert_value1.Text=="" || alert_value2.Text==""|| alert_user_1.Text==""|| alert_user_2.Text=="" ){
        
		//MessageBox.Show("Please fill in all the required values!")

        if(plant_name.Text == "")
        {plant_empty_label.Visible = true}
        else 
        {plant_empty_label.Visible = false}
        
        if(shop_name.Text == "")
        {shop_name_empty_label.Visible = true}
        else					
        {shop_name_empty_label.Visible = false}
        
        if(line_name.Text == "")
        {line_name_empty_label.Visible = true}
        else					
        {line_name_empty_label.Visible = false}

        if(stage_name.Text == "")
        {stage_name_empty_label.Visible = true}
        else					
        {stage_name_empty_label.Visible = false}
        
        if(equipment_name.Text == "")
        {equipment_name_empty_label.Visible = true}
        else					
        {equipment_name_empty_label.Visible = false}
        
        if(sub_unit_name.Text == "")
        {sub_unit_name_empty_label.Visible = true}
        else					
        {sub_unit_name_empty_label.Visible = false}
        
        if(part_id.Text == "")
        {part_id_empty_label.Visible = true}
        else					
        {part_id_empty_label.Visible = false}
        
        if(part_name.Text == "")
        {part_name_empty_label.Visible = true}
        else					
        {part_name_empty_label.Visible = false}
        
        if(part_life_value_estimated.Text == "")
        {part_life_value_estimated_empty_label.Visible = true}
        else					
        {part_life_value_estimated_empty_label.Visible = false}
        
        if(part_life_value_current.Text == "")
        {part_life_value_current_empty_label.Visible = true}
        else					
        {part_life_value_current_empty_label.Visible = false}
        
		if(part_life_units.Text == "")
        {part_life_units_empty_label.Visible = true}
        else					
        {part_life_units_empty_label.Visible = false}
		
		if(change_reason.Text == "")
        {change_reason_empty_label.Visible = true}
        else					
        {change_reason_empty_label.Visible = false}
		
		if(remarks.Text == "")
        {remarks_empty_label.Visible = true}
        else					
        {remarks_empty_label.Visible = false}
		
		if(alert_value1.Text == "")
        {alert_value1_empty_label.Visible = true}
        else					
        {alert_value1_empty_label.Visible = false}

        if(alert_value2.Text == "")
        {alert_value2_empty_label.Visible = true}
        else					
        {alert_value2_empty_label.Visible = false}

		if(alert_user_1.Text == "")
        {alert_user1_empty_label.Visible = true}
        else					
        {alert_user1_empty_label.Visible = false}
		
		if(alert_user_2.Text == "")
        {alert_user2_empty_label.Visible = true}
        else					
        {alert_user2_empty_label.Visible = false}

        
        } else {
            // [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
            try {
                var reader : System.Data.SqlClient.SqlDataReader;
                //[Inline Test Statement] MessageBox.Show(query_string);

                var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
                reader = stored_procedure_query.ExecuteReader();
                Clear();	
                while(reader.Read())
                {
                    response = reader["Response"];
                    MessageBox.Show(response);
                }
                reader.Close();
            }
        catch(ex : Exception){
                MessageBox.Show (ex.Message);	
            }	
        }			
                        
		// [Closing connection with the database]
		

		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Equipment_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Equipment_Name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
        var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
        equipment_name_empty_label.Visible    = false

        
        // [Array Reset] Collection arrays are reset here to default values
		equipment_name.Items.Clear();
		sub_unit_name.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		equipment_name.SelectedIndex = 0;
		sub_unit_name.SelectedIndex  = 0;

         if (stage_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct equipment_name from Config_Equipment WHERE stage_id IN (SELECT stage_id from Config_Stage WHERE stage_name  = '"+stage_name.Text+"') ", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    equipment_name.Items.Add(DataReader["equipment_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a stage first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Line_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Line_Name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
        var line_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_name_empty_label");
        line_name_empty_label.Visible    = false

        
        // [Array Reset] Collection arrays are reset here to default values
		line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		sub_unit_name.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		line_name.SelectedIndex 	 = 0;
		stage_name.SelectedIndex     = 0;
		equipment_name.SelectedIndex = 0;
		sub_unit_name.SelectedIndex  = 0;

        if (shop_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct line_name from Config_Line WHERE shop_name = '"+shop_name.Text+"'", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    line_name.Items.Add(DataReader["line_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
         } else {
            MessageBox.Show("You must select a shop first");
        }	

        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Plant_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Plant_name(sender : System.Object, e : System.EventArgs)
{
	    var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
 
        var plant_empty_label  			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plant_empty_label");
        plant_empty_label.Visible    	= false

		
		// [Array Reset] Collection arrays are reset here to default values
		plant_name.Items.Clear();
		shop_name.Items.Clear();
		line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		sub_unit_name.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		plant_name.SelectedIndex     = 0;
		shop_name.SelectedIndex      = 0;
		line_name.SelectedIndex 	 = 0;
		stage_name.SelectedIndex     = 0;
		equipment_name.SelectedIndex = 0;
		sub_unit_name.SelectedIndex  = 0;


     
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct plant_name from Config_Plant", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    plant_name.Items.Add(DataReader["plant_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
         
        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Shop_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Shop_Name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
 
        var shop_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_name_empty_label");
        shop_name_empty_label.Visible    = false

		
		// [Array Reset] Collection arrays are reset here to default values
		shop_name.Items.Clear();
		line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		sub_unit_name.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		shop_name.SelectedIndex      = 0;
		line_name.SelectedIndex 	 = 0;
		stage_name.SelectedIndex     = 0;
		equipment_name.SelectedIndex = 0;
		sub_unit_name.SelectedIndex  = 0;


     	if (plant_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct shop_name from Config_Shop", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    shop_name.Items.Add(DataReader["shop_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
         } 
		   else {
            		MessageBox.Show("You must select a Plant first");
        		}
        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Stage_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Stage_Name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
        var stage_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_name_empty_label");
        stage_name_empty_label.Visible    = false

		
		// [Array Reset] Collection arrays are reset here to default values
		stage_name.Items.Clear();
		equipment_name.Items.Clear();
		sub_unit_name.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		stage_name.SelectedIndex     = 0;
		equipment_name.SelectedIndex = 0;
		sub_unit_name.SelectedIndex  = 0;
				
   
        if (line_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct stage_name from Config_Stage WHERE line_id IN (Select line_id from Config_Line WHERE line_name = '"+line_name.Text+"'); ", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    stage_name.Items.Add(DataReader["stage_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
	} else {
            MessageBox.Show("You must select a line first");
        }
	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Sub_Unit" Type="JScriptNet">
              <x:XData><![CDATA[function sub_unit_name_DropDownOpened(sender : System.Object, e : System.EventArgs)
{
	    var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		
		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
		var sub_unit_name_empty_label  	: Ico.Gwx.GwxLabel=ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
	    sub_unit_name_empty_label.Visible  = false


		// [Array Reset] Collection arrays are reset here to default values
		sub_unit_name.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		sub_unit_name.SelectedIndex  = 0;

		if(equipment_name.Text!=""){	
			var DataReader : System.Data.SqlClient.SqlDataReader;
			var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("select sub_unit_name from Config_Sub_Unit where equipment_id IN(select equipment_id from Config_Equipment where equipment_name= '"+equipment_name.Text+"')", connection);
			
			try{
				DataReader=RetrieveDataCmd.ExecuteReader();
	
				while(DataReader.Read())
				{
					sub_unit_name.Items.Add(DataReader["sub_unit_name"]);
				}
				DataReader.Close();
				connection.Close()
				
			}catch(ex:Exception){
				MessageBox.Show(ex);
			}
		}
		else{
				MessageBox.Show("You must select a Equipment name first");
			}


}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Drowdown_Alert_User_1" Type="JScriptNet">
              <x:XData><![CDATA[
function Drowdown_Alert_User_1(sender : System.Object, e : System.EventArgs)
{
	    var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
 
        var alert_user1_empty_label  			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
        alert_user1_empty_label.Visible = false

		
		// [Array Reset] Collection arrays are reset here to default values
		alert_user_1.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		alert_user_1.SelectedIndex     = 0;

     
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct email from Alerts_User_Config ", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    alert_user_1.Items.Add(DataReader["email"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
         
        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Drowdown_Alert_User_2" Type="JScriptNet">
              <x:XData><![CDATA[
function Drowdown_Alert_User_2(sender : System.Object, e : System.EventArgs)
{
	    var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
		var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
	    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
	    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
		var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
	    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
		var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
	    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
	    //var alert_value           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value").ToDependencyObject();
	    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
	    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
	
 
        var alert_user2_empty_label  			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("alert_user2_empty_label");
        alert_user2_empty_label.Visible = false

		
		// [Array Reset] Collection arrays are reset here to default values
		alert_user_2.Items.Clear();
		
		// [Setting Index] Setting Index to Zero
		alert_user_2.SelectedIndex     = 0;

     
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct email from Alerts_User_Config ", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    alert_user_2.Items.Add(DataReader["email"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
         
        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="GridCode" Type="JScriptNet">
              <x:XData><![CDATA[function Grid(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
	var part_life_value_current   	: System.Windows.Controls.TextBox   = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();	
    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
	var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
    var alert_value1           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value1").ToDependencyObject();
    var alert_value2           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value2").ToDependencyObject();
    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
    var enabled	                    : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("enabled").ToDependencyObject();
   	var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
	var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
	var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
	var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
    var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  	var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
	var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
	var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
	var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
    var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
	var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
	var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
	var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
	//var alert_value_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value_empty_label");
    var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  	var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");


	//[Grid Selection Code]
	var gdxViewer		: Ico.Gdx.GdxViewControl = Ico.Gdx.GdxViewControl(ThisConfiguration.GetObjectByName("default_grid").ToDependencyObject());
	var tab_list 		: ItemsControl = ItemsControl(gdxViewer.Items[0]);
	var grid_list 		: Ico.Gdx.GdxGridView = Ico.Gdx.GdxGridView(tab_list.Items[0]);
	var Row_Selected 	: DataRow;
	Row_Selected = grid_list.GetHighlightedRow();
		
	if(grid_list.GetHighlightedRow() != null)
	{
			//if (Row_Selected.Item[0] != String.IsNullOrEmpty){
				
				
				Dropdown_Plant_name();
				plant_name.SelectedValue = Row_Selected.Item[22];	

				Dropdown_Shop_Name();
				shop_name.SelectedValue = Row_Selected.Item[21];
				
				Dropdown_Line_Name();
				line_name.SelectedValue = Row_Selected.Item[20];
				
				Dropdown_Stage_Name();
				stage_name.SelectedValue = Row_Selected.Item[18];
				
				Dropdown_Equipment_Name();
				equipment_name.SelectedValue = Row_Selected.Item[16];
				
				sub_unit_name_DropDownOpened();
				sub_unit_name.SelectedValue = Row_Selected.Item[14];
				
				Drowdown_Alert_User_1();
				alert_user_1.SelectedValue = Row_Selected.Item[11];

				Drowdown_Alert_User_2();
				alert_user_2.SelectedValue = Row_Selected.Item[12];

				
				part_life_units.SelectedValue = Row_Selected.Item[5];
				part_life_units_empty_label.Visible  = false

				change_reason.SelectedValue = Row_Selected.Item[6];
				change_reason_empty_label.Visible    = false
			
				part_id.Text = Row_Selected.Item[1];
				
				part_name.Text = Row_Selected.Item[2];
						
				part_life_value_estimated.Text = Row_Selected.Item[3];
				
			
			    
				remarks.Text = Row_Selected.Item[7];
				
				alert_value1.Text = Row_Selected.Item[8];
				
				alert_value2.Text = Row_Selected.Item[9];
				
				if (Row_Selected.Item[10] == 1) {
						enabled.IsChecked = true;
				} else {
						enabled.IsChecked = false;
				}		
		
			}
	}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="JScriptDotNetGlobalVariablesCode" Type="JScriptNet" EditorBrowsable="Never">
              <x:XData><![CDATA[
var ThisWindow : Ico.Gwx.GwxRuntimeViewControl;
var ThisDocument : Ico.Gwx.GwxDocument;
var ThisConfiguration : Ico.Gwx.GwxConfiguration;
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="partCode" Type="JScriptNet">
              <x:XData><![CDATA[
function part_id_SelectionChanged(sender : System.Object, e : System.Windows.RoutedEventArgs)
{
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();

	ThisWindow.SetGlobalAliases("#part_id="+part_id.Text+";\2");
	//@rgs64:MaterialManagement.Auxiliary.<#part_id#>.tool_id.Value

}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="UpdateCode" Type="JScriptNet">
              <x:XData><![CDATA[function Update(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
	// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
	connection.Open();
    
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Update';

	// [Provisioning Security System]
	var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
	//MessageBox.Show(logged_in_user.Text);

    
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var plant_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var equipment_name      		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
    var sub_unit_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("sub_unit_name").ToDependencyObject();
	var part_id           			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_id").ToDependencyObject();
    var part_name           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_name").ToDependencyObject();
    var part_life_value_estimated   : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("part_life_value_estimated").ToDependencyObject();
	var part_life_value_current   	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("part_life_value_current").ToDependencyObject();
	var current_value               = parseInt(part_life_value_current.Text)	
    var part_life_units           	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("part_life_units").ToDependencyObject();
	var change_reason   			: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("change_reason").ToDependencyObject();
    var remarks              		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("remarks").ToDependencyObject();
    var alert_value1           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value1").ToDependencyObject();
    var alert_value2           		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("alert_value2").ToDependencyObject();
    var alert_user_1           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_1").ToDependencyObject();
    var alert_user_2           		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("alert_user_2").ToDependencyObject();
    var enabled	                    : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("enabled").ToDependencyObject();
	
	var plant_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("plant_empty_label");
	var shop_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("shop_name_empty_label");
	var line_name_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("line_name_empty_label");
	var stage_name_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("stage_name_empty_label");
    var equipment_name_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
  	var sub_unit_name_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("sub_unit_name_empty_label");
	var part_id_empty_label            			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_id_empty_label");
	var part_name_empty_label           		: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_name_empty_label");
	var part_life_value_estimated_empty_label   : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_estimated_empty_label");
    var part_life_value_current_empty_label     : Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_value_current_empty_label");	
	var part_life_units_empty_label    			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("part_life_units_empty_label");
	var change_reason_empty_label      			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("change_reason_empty_label");
	var remarks_empty_label         			: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("remarks_empty_label");
	var alert_value1_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value1_empty_label");
	var alert_value2_empty_label  				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_value2_empty_label");
    var alert_user1_empty_label 				: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user1_empty_label");
  	var alert_user2_empty_label              	: Ico.Gwx.GwxLabel        = ThisConfiguration.GetObjectByName("alert_user2_empty_label");


    // [Hardcoded Variable] These variables have to be replaced using the tag for the logged in user.
	var created_by 		= logged_in_user.Text;
	var updated_by 		= logged_in_user.Text;	
	
	var enabled_int = -1;
			if(enabled.IsChecked == true){
				enabled_int =1;
			}
		    else {
				enabled_int =0;
			}

    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
		
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "EXEC [dbo].[SP_Maintenance_Part_Life]";
    query_string += "@plant_name     				= '"+plant_name.Text+"',";
	query_string += "@shop_name	    				= '"+shop_name.Text+"',";
	query_string += "@line_name 	    			= '"+line_name.Text+"',";
	query_string += "@stage_name        			= '"+stage_name.Text+"',";
    query_string += "@equipment_name        		= '"+equipment_name.Text+"',";
    query_string += "@sub_unit_name					= '"+sub_unit_name.Text+"',";
    query_string += "@part_id						= '"+part_id.Text+"',";
    query_string += "@part_name     				= '"+part_name.Text+"',";
    query_string += "@part_life_value_estimated		= '"+part_life_value_estimated.Text+"',";
    query_string += "@part_life_value_actual		= '"+current_value+"',";
    query_string += "@part_life_units				= '"+part_life_units.Text+"',";
	query_string += "@change_reason					= '"+change_reason.Text+"',";
	query_string += "@remarks       				= '"+remarks.Text+"',";
	query_string += "@alert_value_1				    = '"+alert_value1.Text+"',";
	query_string += "@alert_value_2				    = '"+alert_value2.Text+"',";
	query_string += "@enabled				        = '"+enabled_int+"',";
	query_string += "@alert_user_1   				= '"+alert_user_1.Text+"',";
	query_string += "@alert_user_2   				= '"+alert_user_2.Text+"',";
	query_string += "@created_by    				= '"+created_by+"',";
	query_string += "@updated_by    				= '"+updated_by+"',";
	query_string += "@ActionOp 			    		= '"+ActionOp+"'";		
			
	//[Inline Test Statement]MessageBox.Show(query_string);
					
    // [Validation Statement] This if-else statement checks if any of the fields have been left empty
    if ( plant_name.Text == ""|| shop_name.Text =="" || line_name.Text == ""|| stage_name.Text =="" || equipment_name.Text =="" || sub_unit_name.Text==""|| part_id.Text==""|| part_name.Text=="" || part_life_value_estimated.Text==""|| part_life_value_current.Text=="" ||  part_life_units.Text==""|| change_reason.Text==""||  remarks.Text==""|| alert_value1.Text=="" || alert_value2.Text==""|| alert_user_1.Text==""|| alert_user_2.Text=="" ){
        
		//MessageBox.Show("Please fill in all the required values!")

        if(plant_name.Text == "")
        {plant_empty_label.Visible = true}
        else 
        {plant_empty_label.Visible = false}
        
        if(shop_name.Text == "")
        {shop_name_empty_label.Visible = true}
        else					
        {shop_name_empty_label.Visible = false}
        
        if(line_name.Text == "")
        {line_name_empty_label.Visible = true}
        else					
        {line_name_empty_label.Visible = false}

        if(stage_name.Text == "")
        {stage_name_empty_label.Visible = true}
        else					
        {stage_name_empty_label.Visible = false}
        
        if(equipment_name.Text == "")
        {equipment_name_empty_label.Visible = true}
        else					
        {equipment_name_empty_label.Visible = false}
        
        if(sub_unit_name.Text == "")
        {sub_unit_name_empty_label.Visible = true}
        else					
        {sub_unit_name_empty_label.Visible = false}
        
        if(part_id.Text == "")
        {part_id_empty_label.Visible = true}
        else					
        {part_id_empty_label.Visible = false}
        
        if(part_name.Text == "")
        {part_name_empty_label.Visible = true}
        else					
        {part_name_empty_label.Visible = false}
        
        if(part_life_value_estimated.Text == "")
        {part_life_value_estimated_empty_label.Visible = true}
        else					
        {part_life_value_estimated_empty_label.Visible = false}
        
        if(part_life_value_current.Text == "")
        {part_life_value_current_empty_label.Visible = true}
        else					
        {part_life_value_current_empty_label.Visible = false}
        
		if(part_life_units.Text == "")
        {part_life_units_empty_label.Visible = true}
        else					
        {part_life_units_empty_label.Visible = false}
		
		if(change_reason.Text == "")
        {change_reason_empty_label.Visible = true}
        else					
        {change_reason_empty_label.Visible = false}
		
		if(remarks.Text == "")
        {remarks_empty_label.Visible = true}
        else					
        {remarks_empty_label.Visible = false}
		
		if(alert_value1.Text == "")
        {alert_value1_empty_label.Visible = true}
        else					
        {alert_value1_empty_label.Visible = false}

        if(alert_value2.Text == "")
        {alert_value2_empty_label.Visible = true}
        else					
        {alert_value2_empty_label.Visible = false}

		if(alert_user_1.Text == "")
        {alert_user1_empty_label.Visible = true}
        else					
        {alert_user1_empty_label.Visible = false}
		
		if(alert_user_2.Text == "")
        {alert_user2_empty_label.Visible = true}
        else					
        {alert_user2_empty_label.Visible = false}

        
        } else {
            // [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
            try {
                var reader : System.Data.SqlClient.SqlDataReader;
                //[Inline Test Statement] MessageBox.Show(query_string);

                var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
                reader = stored_procedure_query.ExecuteReader();
                Clear();	
                while(reader.Read())
                {
                    response = reader["Response"];
                    MessageBox.Show(response);
                }
                reader.Close();
            }
        catch(ex : Exception){
                MessageBox.Show (ex.Message);	
            }	
        }			
                        
		// [Closing connection with the database]
		

		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
          </script:ScriptCodeManager.Scripts>
          <script:ScriptCodeManager.AssemblyReferences>
            <ic:AssemblyReference AssemblyName="mscorlib" />
            <ic:AssemblyReference AssemblyName="System" />
            <ic:AssemblyReference AssemblyName="System.Core" />
            <ic:AssemblyReference AssemblyName="System.Data" />
            <ic:AssemblyReference AssemblyName="System.Xml" />
            <ic:AssemblyReference AssemblyName="System.Drawing" />
            <ic:AssemblyReference AssemblyName="System.Windows.Forms" />
            <ic:AssemblyReference AssemblyName="WindowsBase" />
            <ic:AssemblyReference AssemblyName="PresentationCore" />
            <ic:AssemblyReference AssemblyName="PresentationFramework" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCore" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCoreCommands" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeViewControl" />
            <ic:AssemblyReference AssemblyName="GwxConfigCore" />
            <ic:AssemblyReference AssemblyName="IcoComponentModel" />
            <ic:AssemblyReference AssemblyName="IcoFwxClientWrapper" />
            <ic:AssemblyReference AssemblyName="GdxViewControl" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/GdxViewControl.DLL" />
            <ic:AssemblyReference AssemblyName="IcoWPFSpecialized" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/IcoWPFSpecialized.DLL" />
            <ic:AssemblyReference AssemblyName="IcoCommonCore.Net" />
          </script:ScriptCodeManager.AssemblyReferences>
          <script:ScriptCodeManager.Namespaces>
            <s:String>System</s:String>
            <s:String>System.Collections</s:String>
            <s:String>System.ComponentModel</s:String>
            <s:String>System.Data</s:String>
            <s:String>System.Xml</s:String>
            <s:String>System.Windows</s:String>
            <s:String>System.Windows.Media</s:String>
            <s:String>System.Windows.Input</s:String>
            <s:String>System.Windows.Controls</s:String>
            <s:String>Ico.Gwx</s:String>
            <s:String>System.Diagnostics</s:String>
            <s:String>Ico.Fwx.ClientWrapper</s:String>
            <s:String>System.Flags</s:String>
          </script:ScriptCodeManager.Namespaces>
        </script:ScriptCodeManager>
      </gwx:GwxDocument.ScriptCodeManager>
      <gwx:GwxDocument.EventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="AnimationStopped" MethodName="ThisDisplay_AnimationStopped" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStopping" MethodName="ThisDisplay_AnimationStopped" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarting" MethodName="ThisDisplay_AnimationStarted" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarted" MethodName="ThisDisplay_AnimationStarted" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxDocument.EventBindings>
      <gwx:GwxDocument.RuntimeWindowProperties>
        <gwx:GwxWindowProperties LeftString="0%" TopString="0%" WidthString="100%" HeightString="100%" ControlBox="False" MaximizeBox="False" MinimizeBox="False" MenuVisible="False" ShowContextMenu="False" NavigationBarVisible="False" StatusBarVisible="False" OuterBorder="False" Resizable="False" />
      </gwx:GwxDocument.RuntimeWindowProperties>
    </gwx:GwxDocument>
  </gwx:GwxDocument.GwxDocument>
  <Canvas>
    <Rectangle Stroke="#FF000000" Name="Rectangle1" Width="1100" Height="30" Canvas.Left="0" Canvas.Top="296.111111">
      <Rectangle.Fill>
        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
          <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF5F5F5" Offset="0" />
            <GradientStop Color="#FFEBEBEB" Offset="0.49" />
            <GradientStop Color="#FFE1E1E1" Offset="0.51" />
            <GradientStop Color="#FFCDCDCD" Offset="1" />
          </LinearGradientBrush.GradientStops>
          <LinearGradientBrush.RelativeTransform>
            <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
          </LinearGradientBrush.RelativeTransform>
        </LinearGradientBrush>
      </Rectangle.Fill>
    </Rectangle>
  </Canvas>
  <ig:GdxViewControl FileVersion="10.97.020.00" Background="#FFBFBFBF" FontFamily="Segoe UI" FontSize="12" IsTabStop="True" Name="default_grid" Width="1100" Height="400" gwx:GwxProperties.Description="Grid Size=H:443,W:1100&#xD;&#xA;Position=X:0,Y:300&#xD;&#xA;Grid Header Font=Style :Calibri,Size:17,Color:White&#xD;&#xA;Grid Header Background color=R :0,G : 24,B :72&#xD;&#xA;Grid Text Font=Style :Calibri,Size:16,Color:White&#xD;&#xA;Grid Scrolbar Foreground color=R :0,G : 24,B :72&#xD;&#xA;" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="0" Canvas.Top="300">
    <ig:GdxViewControl.DataDictionaryRepository>
      <ig13:DataDictionary Name="DailyStatus" Key="47993581">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="15056362" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="49320909" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="WeeklyStatus" Key="53237738">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="61233639" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="49445506" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="MonthlyStatus" Key="27952209">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="1264671" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="35726287" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="AnnualStatus" Key="63571381">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="54214786" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="47842506" />
      </ig13:DataDictionary>
    </ig:GdxViewControl.DataDictionaryRepository>
    <ig:GdxViewControl.FiltersRepository>
      <igd:GdxFilter Key="49320909" Expression="x={{Daily}}==0" Name="Daily_Not Applicable" />
      <igd:GdxFilter Key="15056362" Expression="x={{Daily}}==1" Name="Daily_Applicable" />
      <igd:GdxFilter Key="61233639" Expression="x={{Weekly}}==1" Name="Weekly_Applicable" />
      <igd:GdxFilter Key="49445506" Expression="x={{Weekly}}==0" Name="Weekly_Not Applicable" />
      <igd:GdxFilter Key="1264671" Expression="x={{Monthly}}==1" Name="Monthly_Applicable" />
      <igd:GdxFilter Key="35726287" Expression="x={{Monthly}}==0" Name="Monthly_Not Applicable" />
      <igd:GdxFilter Key="54214786" Expression="x={{Annual}}==1" Name="Annual_Applicable" />
      <igd:GdxFilter Key="47842506" Expression="x={{Annual}}==0" Name="Annual_Not Applicable" />
    </ig:GdxViewControl.FiltersRepository>
    <ig:GdxViewControl.SubscriptionsRepository>
      <igd:GdxSubscription Key="11348180" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssemblyID" />
          <igd:GdxDataField Key="AssemblyName" />
          <igd:GdxDataField Key="SubAssemblyID" />
          <igd:GdxDataField Key="SubAssemblyName" />
          <igd:GdxDataField Key="ComponentID" />
          <igd:GdxDataField Key="ComponentName" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz. GridAssetComponentInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="3170613" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="706558" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="60979881" Name="New Subscription" />
      <igd:GdxSubscription Key="44676482" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="uid" BuiltInType="Int32" />
          <igd:GdxDataField Key="part_id" />
          <igd:GdxDataField IsPrimaryKey="True" Key="part_name" />
          <igd:GdxDataField Key="part_life_value_estimated" BuiltInType="Int32" />
          <igd:GdxDataField Key="part_life_value_actual" BuiltInType="Int32" />
          <igd:GdxDataField Key="part_life_units" />
          <igd:GdxDataField Key="change_reason" />
          <igd:GdxDataField Key="remarks" />
          <igd:GdxDataField Key="alert_value_1" BuiltInType="Int32" />
          <igd:GdxDataField Key="alert_value_2" BuiltInType="Int32" />
          <igd:GdxDataField Key="enabled" BuiltInType="Int32" />
          <igd:GdxDataField Key="alert_user_1" />
          <igd:GdxDataField Key="alert_user_2" />
          <igd:GdxDataField IsPrimaryKey="True" Key="sub_unit_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="sub_unit_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="equipment_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="equipment_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="stage_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="stage_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="line_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="line_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="shop_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="plant_name" />
          <igd:GdxDataField Key="created_by" />
          <igd:GdxDataField Key="created_on" BuiltInType="DateTime" />
          <igd:GdxDataField Key="updated_by" />
          <igd:GdxDataField Key="updated_on" BuiltInType="DateTime" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Maintenance_Part_Life</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
    </ig:GdxViewControl.SubscriptionsRepository>
    <ig:GdxViewControl.Header>
      <TextBlock Text="Part Life Maintenance" FontFamily="Calibri" FontStyle="Normal" FontWeight="Bold" FontSize="19" Foreground="#FF001848" Padding="0,0,0,0" TextAlignment="Center" Visibility="Visible" />
    </ig:GdxViewControl.Header>
    <ig:GdxViewControl.Items>
      <iwc:MultipleTabItem IsSelected="True" Header="Tab" FontFamily="Calibri" FontSize="16">
        <ig:GdxGridView HeaderBackground="#FF001848" HeaderBorderBrush="#FFC6C7B5" HeaderCellBorderThickness="0,0,0,0" HeaderFontFamily="Calibri" HeaderFontSize="17" HeaderMouseOverForeground="#FFFFFFFF" HeaderMouseOverBorderBrush="#FF000000" HeaderSelectedForeground="#FFFFFFFF" HeaderSelectedBorderBrush="#FF000000" GroupHeaderBorderBrush="#FFD8D8D8" GroupHeaderBackground="#FFD8D8D8" GroupHeaderForeground="#FFFFFFFF" RowHeaderBackground="#FFD8D8D8" RowHeaderBorderBrush="#FFD8D8D8" RowHeaderCellBorderBrush="#FF626262" RowHeaderBorderThickness="0,0,1,2" RowHeight="25" ScrollBarBackground="#FFD8D8D8" ScrollBarForeground="#FF001848" ScrollBarMouseOverForeground="#FF171F31" ScrollBarMousePressedForeground="#FF171F31" ScrollBarBorderBrush="#FF373D54" ScrollBarMouseOverBorderBrush="#FF229EC8" DateTimeFormat="d" DoubleFormat="N0" SubscriptionID="44676482" AllowPaging="False" BorderBrush="#FFA5B6CB" BorderThickness="0,0,0,0" Background="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Uid="local:GdxView_1">
          <ig:GdxGridView.HeaderMouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF8993A2" Offset="0" />
                <GradientStop Color="#FF545F6D" Offset="0.5" />
                <GradientStop Color="#FF0C1C32" Offset="0.51" />
                <GradientStop Color="#FF132F54" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderMouseOverBackground>
          <ig:GdxGridView.HeaderSelectedBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderSelectedBackground>
          <ig:GdxGridView.MouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.3">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.MouseOverBackground>
          <ig:GdxGridView.SelectionBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.9">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.SelectionBackground>
          <ig:GdxGridView.Columns>
            <ig:GdxColumn Key="uid" IsVisible="False" Format="{x:Null}" Text="uid" />
            <ig:GdxColumn Key="part_id" Index="1" Format="{x:Null}" Text="Part ID" IsAuto="True" />
            <ig:GdxColumn Key="part_name" Index="2" Format="{x:Null}" Text="Part Name" IsAuto="True" />
            <ig:GdxColumn Key="part_life_value_estimated" Index="3" Format="{x:Null}" Text="Estimated Value" IsAuto="True" />
            <ig:GdxColumn Key="part_life_value_actual" Index="4" IsVisible="False" Text="Actual Value" IsAuto="True" />
            <ig:GdxColumn Key="part_life_units" Index="5" Format="{x:Null}" Text="Part Life Units" IsAuto="True" />
            <ig:GdxColumn Key="change_reason" Index="6" Format="{x:Null}" Text="Change Reason" IsAuto="True" />
            <ig:GdxColumn Key="remarks" Index="7" Format="{x:Null}" Text="Remarks" IsAuto="True" />
            <ig:GdxColumn Key="alert_value_1" Index="8" Format="{x:Null}" Text="Alert Value 1" />
            <ig:GdxColumn Key="alert_value_2" Index="9" Format="{x:Null}" Text="Alert Value 2" />
            <ig:GdxColumn Key="enabled" Index="10" Format="{x:Null}" Text="Enabled" />
            <ig:GdxColumn Key="alert_user_1" Index="11" Format="{x:Null}" Text="Alert User 1" IsAuto="True" />
            <ig:GdxColumn Key="alert_user_2" Index="12" Format="{x:Null}" Text="Alert User 2" IsAuto="True" />
            <ig:GdxColumn Key="sub_unit_id" Index="13" IsVisible="False" Format="{x:Null}" Text="sub_unit_id" />
            <ig:GdxColumn Key="sub_unit_name" Index="14" Format="{x:Null}" Text="Sub-Unit" IsAuto="True" />
            <ig:GdxColumn Key="equipment_id" Index="15" IsVisible="False" Format="{x:Null}" Text="equipment_id" />
            <ig:GdxColumn Key="equipment_name" Index="16" Format="{x:Null}" Text="Equipment Name" IsAuto="True" />
            <ig:GdxColumn Key="stage_id" Index="17" IsVisible="False" Format="{x:Null}" Text="stage_id" />
            <ig:GdxColumn Key="stage_name" Index="18" Format="{x:Null}" Text="Stage Name" IsAuto="True" />
            <ig:GdxColumn Key="line_id" Index="19" IsVisible="False" Format="{x:Null}" Text="line_id" />
            <ig:GdxColumn Key="line_name" Index="20" Format="{x:Null}" Text="Line Name" IsAuto="True" />
            <ig:GdxColumn Key="shop_name" Index="21" Format="{x:Null}" Text="Shop Name" IsAuto="True" />
            <ig:GdxColumn Key="plant_name" Index="22" Format="{x:Null}" Text="Plant Name" IsAuto="True" />
            <ig:GdxColumn Key="created_by" Index="23" IsVisible="False" Format="{x:Null}" Text="created_by" />
            <ig:GdxColumn Key="created_on" Index="24" IsVisible="False" Format="{x:Null}" Text="created_on" />
            <ig:GdxColumn Key="updated_by" Index="25" IsVisible="False" Format="{x:Null}" Text="updated_by" />
            <ig:GdxColumn Key="updated_on" Index="26" IsVisible="False" Format="{x:Null}" Text="updated_on" />
          </ig:GdxGridView.Columns>
        </ig:GdxGridView>
      </iwc:MultipleTabItem>
    </ig:GdxViewControl.Items>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Grid" ShowToolTip="False" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Grid" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </ig:GdxViewControl>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_name_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="720.484674" Canvas.Top="39.53125">
    <TextBlock Text="*" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_name_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="1090.097561" Canvas.Top="42.53125">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="plant_label" Canvas.Left="10" Canvas.Top="15">
    <TextBlock Text="Plant Name " />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="6" Padding="4,2,5,3" Name="plant_name" Width="220" Height="25" Focusable="False" gwx:GwxProperties.Description="Select Plant" Canvas.Left="120" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Plant_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="plant_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="350.484663" Canvas.Top="41.751123">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_name_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="380" Canvas.Top="15">
    <TextBlock Text="Shop Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="shop_name" Width="220" Height="25" Canvas.Left="490" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Shop_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_name_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:15" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="750" Canvas.Top="15">
    <TextBlock Text="Line Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="line_name" Width="220" Height="25" Canvas.Left="860" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Line_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_name_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="10" Canvas.Top="55.189478">
    <TextBlock Text="Stage Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="equipment_name_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:15" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="380" Canvas.Top="55.189478">
    <TextBlock Text="Equipment " />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="equipment_name" Width="220" Height="25" Canvas.Left="490" Canvas.Top="55.189478">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Equipment_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="stage_name" Width="220" Height="25" Canvas.Left="120" Canvas.Top="55.189478">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Stage_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_name_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="350.484663" Canvas.Top="79.720728">
    <TextBlock Text="*" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="equipment_name_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="720.484674" Canvas.Top="79.720728">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="sub_unit_name_label" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="750" Canvas.Top="55.189478">
    <TextBlock Text="Sub-Unit " />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="sub_unit_name" Width="220" Height="25" Canvas.Left="860" Canvas.Top="55.189478">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="sub_unit_name_DropDownOpened" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="sub_unit_name_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="1090.097561" Canvas.Top="79.720728">
    <TextBlock Text="*" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="part_id" Width="220" Height="25" IsEnabled="True" Canvas.Left="120" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="SelectionChanged" MethodName="part_id_SelectionChanged" ScriptType="JScriptNet" />
            <script:ScriptEventBinding EventName="TextChanged" MethodName="part_id_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings></TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_id_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="10" Canvas.Top="95">
    <TextBlock Text="Part ID" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_id_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="350.484663" Canvas.Top="119.53125">
    <TextBlock Text="*" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="part_name" Width="220" Height="25" IsEnabled="True" Canvas.Left="490.000011" Canvas.Top="95.000004">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="part_name_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings></TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_name_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="380.000011" Canvas.Top="95.000004">
    <TextBlock Text="Part Name" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_name_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="720.484674" Canvas.Top="119.531254">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_life_value_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="750" Canvas.Top="95.000004">
    <TextBlock Text="Part Life Value" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="part_life_value_estimated" Width="100" Height="25" IsEnabled="True" Canvas.Left="860" Canvas.Top="95.000004">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="part_life_value_estimated_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings></TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="part_life_value_current" Width="100" Height="25" IsEnabled="True" Canvas.Left="980" Canvas.Top="95.000004">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="part_life_current_pp" DataSource="@rgs64:PartToolMonitoring.Parts.&lt;#part_id#&gt;.current_quantity.Value" />
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="part_life_value_current_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_life_value_estimated_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="970.380783" Canvas.Top="119.531254">
    <TextBlock Text="*" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_life_value_current_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="1090.097561" Canvas.Top="119.531254">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="total_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="877.673333" Canvas.Top="119.000003">
    <TextBlock Text="Total" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="current_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="1005.271667" Canvas.Top="119.000003">
    <TextBlock Text="Current" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="part_life_units_label" Canvas.Left="10" Canvas.Top="144.999996">
    <TextBlock Text="Part Life Units" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="6" Padding="4,2,5,3" Name="part_life_units" Width="220" Height="25" Focusable="False" gwx:GwxProperties.Description="Select Plant" Canvas.Left="120" Canvas.Top="144.999996">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="part_life_units_DropDownOpened" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <s:String></s:String>
    <s:String>Cycles</s:String>
    <s:String>Days</s:String>
    <s:String></s:String>
  </ComboBox>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="part_life_units_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="350.484663" Canvas.Top="171.751119">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="change_reason_label" Canvas.Left="380.000001" Canvas.Top="145.000007">
    <TextBlock Text="Change Reason" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="6" Padding="4,2,5,3" Name="change_reason" Width="220" Height="25" Focusable="False" gwx:GwxProperties.Description="Select Plant" Canvas.Left="490.000001" Canvas.Top="145.000007">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="change_reason_DropDownOpened" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <s:String></s:String>
    <s:String>Damaged</s:String>
    <s:String>Expired</s:String>
  </ComboBox>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="change_reason_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="720.484664" Canvas.Top="171.75113">
    <TextBlock Text="*" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="remarks" Width="220" Height="25" IsEnabled="True" Canvas.Left="860.000029" Canvas.Top="142.935108">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="remarks_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings></TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="remarks_label" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="750.000029" Canvas.Top="145.000005">
    <TextBlock Text="Remarks" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="remarks_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="1090.484692" Canvas.Top="169.531255">
    <TextBlock Text="*" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="alert_user1_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="970" Canvas.Top="220">
    <TextBlock Text="*" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="alert_user2_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="1090.484716" Canvas.Top="220">
    <TextBlock Text="*" />
  </Label>
  <Canvas>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Modify2" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="644.000009" Canvas.Top="240.000003">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ModifyScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Update" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshMod2" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ToggleValueCommand>
                  <gwxcmd:ToggleValueCommand.Values>
                    <s:String>0</s:String>
                    <s:String>1</s:String>
                  </gwxcmd:ToggleValueCommand.Values>
                </gwxcmd:ToggleValueCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshMod2" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:IcoCommandingCommand>
                  <gwxcmd:IcoCommandingCommand.Command>
                    <icc:RefreshCommandData Target="Preventitve" />
                  </gwxcmd:IcoCommandingCommand.Command>
                </gwxcmd:IcoCommandingCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="MODIFY" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseEdit4" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Edit, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Edit">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M670.509516461704,257.312895446659L679.851960878778,257.312895446659C680.219372312109,257.312895446659,680.518822896803,257.78782307625,680.518822896803,258.373904246119L680.518822896803,261.46935780316C680.518822896803,262.052071071943,680.219372312109,262.526998701533,679.851960878778,262.526998701533L670.509516461704,262.526998701533C670.139981176201,262.526998701533,669.842653997143,262.052071071943,669.842654082666,261.46935780316L669.842654082666,258.373904246119C669.842653997143,257.78782307625,670.139981176201,257.312895446659,670.509516461704,257.312895446659z M670.509516461704,250.725371226652L676.706664330693,250.725371226652 676.398718082475,253.659858655365 680.125926171781,252.137024861006 680.503957078334,251.560908230501C680.514575702121,251.631659762167,680.518822896803,251.705780205796,680.518822896803,251.783269561387L680.518822896803,254.882842774124C680.518822896803,255.465697902472,680.219372312109,255.940740097982,679.851960878778,255.940740097982L670.509516461704,255.940740097982C670.139981176201,255.940740097982,669.842653997143,255.465697902472,669.842654082666,254.882842774124L669.842654082666,251.783269561387C669.842653997143,251.197045858035,670.139981176201,250.725371226652,670.509516461704,250.725371226652z M677.52384624832,249.182045295769L679.263571940947,251.756972302309 677.056520197163,252.292853381746z M671.806777120953,245.657929904788C671.390606215024,245.657929567829 671.048747816143,246.200528051502 671.048747922321,246.861125422857 671.048747816143,247.528470895377 671.390606215024,248.064404203396 671.806777120953,248.064404203396 672.225073556696,248.064404203396 672.562707058666,247.528470895377 672.562707058666,246.861125422857 672.562707058666,246.200528051502 672.225073556696,245.657929567829 671.806777120953,245.657929904788z M680.295352926102,244.532032956356L682.062461981724,247.311671402944 679.71976821844,251.061655897406 679.69428037843,250.445081997081 679.099580321659,250.087940263654 679.09745693668,249.434304288243 678.502756667549,249.147917119108 678.447534642285,248.410049920679 677.952659162817,248.282017787776z M670.509405227674,244.255764013394L679.506095464073,244.255764013394 676.945332462846,248.411571962622 676.834913258408,249.469861169317 670.509405227674,249.469861169317C670.139941995829,249.469861169317,669.842665924774,248.99465554889,669.842665980696,248.411571962622L669.842665980696,245.31413564016C669.842665924774,244.727678289724,670.139941995829,244.255764013394,670.509405227674,244.255764013394z M681.548906702963,242.847482001726C681.64534032003,242.843854617027,681.735803655534,242.892218728274,681.802693574027,242.995395697248L683.053425090023,244.966284394135C683.206316241287,245.202117329364,683.174463555326,245.643461644331,682.985474009936,245.946675244906L682.728532747379,246.361067421778 680.925695440649,243.524335116403 681.184759875825,243.113312131167C681.291066946371,242.942754355326,681.42492110927,242.85214557541,681.548906702963,242.847482001726z" />
      </Path.Data>
    </Path>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Clear2" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:504  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="358.000009" Canvas.Top="240.000003">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ClearScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Clear" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="CLEAR" />
    </Button>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Add1" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:647  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="501.000009" Canvas.Top="240.000003">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="AddScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Create" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshAdd1" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ToggleValueCommand>
                  <gwxcmd:ToggleValueCommand.Values>
                    <s:String>0</s:String>
                    <s:String>1</s:String>
                  </gwxcmd:ToggleValueCommand.Values>
                </gwxcmd:ToggleValueCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshAdd1" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:IcoCommandingCommand>
                  <gwxcmd:IcoCommandingCommand.Command>
                    <icc:RefreshCommandData Target="Preventitve" />
                  </gwxcmd:IcoCommandingCommand.Command>
                </gwxcmd:IcoCommandingCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="ADD" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseAdd2" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Add, Connect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Add">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M535.990634796472,255.985359524368L541.098363619999,255.985359524368 541.075588944492,256.076143812255C540.899659929917,256.804249164696 540.803594164825,257.590360423602 540.803594164825,258.409877393196 540.803594164825,259.229356073484 540.899659929917,260.015398616757 541.075588944492,260.743420211342L541.098336598165,260.834085870753 535.990634796472,260.834085870753C535.632633804194,260.834085870753,535.342031652362,260.3925335867,535.342031565871,259.84947464143L535.342031565871,256.969115397929C535.342031652362,256.426056452659,535.632633804194,255.985359524368,535.990634796472,255.985359524368z M544.730226861991,255.083510973194L544.730226861991,257.724179499058 542.991011910737,257.724179499058 542.991011910737,259.39799414529 544.730226861991,259.39799414529 544.730226861991,262.038490369277 545.832673694668,262.038490369277 545.832673694668,259.39799414529 547.571888645923,259.39799414529 547.571888645923,257.724179499058 545.832673694668,257.724179499058 545.832673694668,255.083510973194z M545.278521899884,253.291434333535C547.140364401484,253.291434333535 548.649833432491,255.582164236967 548.649833432491,258.409723552231 548.649833432491,261.234446040117 547.140364401484,263.526987506369 545.278521899884,263.526987506369 543.416613419979,263.526987506369 541.907435999575,261.234446040117 541.907435999575,258.409723552231 541.907435999575,255.582164236967 543.416613419979,253.291434333535 545.278521899884,253.291434333535z M535.990634796472,249.862148992262L545.06586503652,249.862148992262C545.423857246701,249.862148992262,545.714136799316,250.302798742658,545.714136799316,250.845971188375L545.714136799316,251.647526712601 545.622286440004,251.635103200076C545.508799474677,251.621949797642 545.394142689208,251.615251562064 545.278476413134,251.615251562064 543.736411846988,251.615251562064 542.373927170091,252.805980624482 541.568916171854,254.613665626491L541.528410445776,254.709507179674 535.990634796472,254.709507179674C535.632633804194,254.709506495935,535.342031652362,254.26885674554,535.342031764169,253.725034065348L535.342031764169,250.845971188375C535.342031652362,250.302798742658,535.632633804194,249.862148992262,535.990634796472,249.862148992262z M537.25145721666,245.153248082815C536.845933198767,245.153248082815 536.51545470794,245.654564538803 536.515454933122,246.270736539028 536.51545470794,246.887738767656 536.845933198767,247.388043736397 537.25145721666,247.388043736397 537.65726753086,247.388043736397 537.987468912803,246.887738767656 537.987468912803,246.270736539028 537.987468912803,245.654564538803 537.65726753086,245.153248082815 537.25145721666,245.153248082815z M535.990634796472,243.84730847959L545.065864135792,243.84730847959C545.423857246701,243.847308670703,545.714136799316,244.288008074458,545.714136799316,244.831203869812L545.714136799316,247.711260525229C545.714136799316,248.255322171716,545.423857246701,248.69500819394,545.065864135792,248.69500819394L535.990634796472,248.69500819394C535.632633804194,248.69500819394,535.342031652362,248.255322171716,535.342031565871,247.711260525229L535.342031565871,244.831203869812C535.342031652362,244.288008074458,535.632633804194,243.847308670703,535.990634796472,243.84730847959z" />
      </Path.Data>
    </Path>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Remove1" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:933  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="787.000009" Canvas.Top="240.000003">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="RemoveScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Delete" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshRemove1" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ToggleValueCommand>
                  <gwxcmd:ToggleValueCommand.Values>
                    <s:String>0</s:String>
                    <s:String>1</s:String>
                  </gwxcmd:ToggleValueCommand.Values>
                </gwxcmd:ToggleValueCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshRemove1" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:IcoCommandingCommand>
                  <gwxcmd:IcoCommandingCommand.Command>
                    <icc:RefreshCommandData Target="Preventitve" />
                  </gwxcmd:IcoCommandingCommand.Command>
                </gwxcmd:IcoCommandingCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="REMOVE" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseRemove3" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Remove, Delete, Disconnect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Remove">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M813.894780975861,256.030461759688L819.002445600018,256.030461759688 818.979742757549,256.120958883314C818.80380856379,256.849074536376 818.707740546878,257.635195415709 818.707740546878,258.454722349649 818.707740546878,259.274249625456 818.80380856379,260.060331189878 818.979742757549,260.788384280941L819.002524188514,260.879188060908 813.894780975861,260.879188060908C813.536780051138,260.879188060908,813.246177903554,260.437480541388,813.246177947923,259.894441049409L813.246177947923,257.014354440981C813.246177903554,256.471142647111,813.536780051138,256.030461759688,813.894780975861,256.030461759688z M821.955748758157,255.555606980268L821.176185570149,256.739280284766 822.405976839118,258.606205795746 821.176185570149,260.47309609424 821.955748758157,261.65659846432 823.18556232014,259.789708165828 824.415376782849,261.65659846432 825.194782568684,260.47309609424 823.965035210191,258.606205795746 825.194782568684,256.739280284766 824.415376782849,255.555606980268 823.18556232014,257.422532833118z M823.182668281938,253.33653606214C825.044510783538,253.33653606214 826.553979814543,255.627133118772 826.553979814543,258.45473944309 826.553979814543,261.279679874269 825.044510783538,263.572088493834 823.182668281938,263.572088493834 821.320759802031,263.572088493834 819.811582381631,261.279679874269 819.811582381631,258.45473944309 819.811582381631,255.627133118772 821.320759802031,253.33653606214 823.182668281938,253.33653606214z M813.894780975861,249.907250511023L822.970010517844,249.907250511023C823.328003628753,249.907250511023,823.61828318137,250.347931740316,823.61828318137,250.890971574162L823.61828318137,251.69226972021 823.526553969938,251.679862958495C823.413064302426,251.666708871521 823.298405039957,251.660010977401 823.182735386155,251.660010977401 821.640632088715,251.660010977401 820.278113184166,252.850755154912 819.473081919553,254.658462830879L819.432302597428,254.754950522014 813.894780975861,254.754950522014C813.536780051138,254.754950522014,813.246177903554,254.314269634591,813.246177947923,253.770238381135L813.246177947923,250.890971574162C813.246177903554,250.347931740316,813.536780051138,249.907250511023,813.894780975861,249.907250511023z M815.155603598714,245.198348698066C814.750079468229,245.198348561318 814.419600999921,245.699459960871 814.419600662147,246.315584239727 814.419600999921,246.932543464822 814.750079468229,247.432803576801 815.155603598714,247.432803576801 815.561413912915,247.432803576801 815.891615294856,246.932543464822 815.891615294856,246.315584239727 815.891615294856,245.699459960871 815.561413912915,245.198348561318 815.155603598714,245.198348698066z M813.894780975861,243.892409630287L822.970010517844,243.892409630287C823.328003628753,243.892409689091,823.61828318137,244.33310843164,823.61828318137,244.876137633367L823.61828318137,247.756224481102C823.61828318137,248.300251974,823.328003628753,248.740109641279,822.970010517844,248.74010998315L813.894780975861,248.74010998315C813.536780051138,248.740109641279,813.246177903554,248.300251974,813.246177947923,247.756224481102L813.246177947923,244.876137633367C813.246177903554,244.33310843164,813.536780051138,243.892409689091,813.894780975861,243.892409630287z" />
      </Path.Data>
    </Path>
    <Canvas>
      <Path Fill="#FFFFFFFF" Name="DatabaseRefresh2" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Refresh, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Refresh">
        <Path.Data>
          <PathGeometry FillRule="EvenOdd" Figures="M389.443718897969,255.290369203156L393.408858365941,255.290369203156C393.18462006109,256.128947356581 393.055251509807,257.036620804613 393.055251509807,257.991406108179 393.055251509807,258.638399084687 393.117779502807,259.263406109912 393.225586736659,259.860146649866L389.443718897969,259.860146649866C389.092268281365,259.860146649866,388.807657943916,259.445569229747,388.807657780571,258.933628773646L388.807657780571,256.220028602472C388.807657943916,255.704947251327,389.092268281365,255.290369203156,389.443718897969,255.290369203156z M398.22647818994,252.452727229724C398.267707435094,252.451157096229,398.309206579362,252.451157096229,398.351245306278,252.452727229724L398.353401481139,252.452727229724 398.357712968555,252.452727229724C398.885885914145,252.459008705786,399.386034191527,252.622322687035,399.840910126422,252.914403630283L399.856000332383,252.926965954353C401.199069622118,253.796927308037 402.130379575723,255.76611745413 402.115288723039,258.043092076613 402.093730639228,261.102089272064 400.375550949866,263.558081094912 398.275792120729,263.526675284736 396.637376888764,263.501550322564 395.253347606264,261.968910358754 394.73595316364,259.845827974465L396.096269265341,259.500355897808C396.477847542819,260.712649061157 397.312145580339,261.560625405634 398.288726798556,261.576328938776 399.636107791278,261.595172110856 400.737726671666,260.018564012795 400.750661349494,258.055655028738 400.765752417755,256.095886625697 399.683536093041,254.487871461353 398.336155100319,254.469027347192 398.22189680341,254.469027347192 398.109794681361,254.481590299317 397.999848949742,254.500434099452L397.997692774888,254.487871461353C397.635517053084,254.556965499853,397.299210902513,254.742264804332,397.006020488411,255.02178248143L397.473831316715,255.665616977398C397.501857062798,255.703304891693 397.512635565771,255.762977187138 397.497544497507,255.813227425504 397.484609819681,255.866618558915 397.452273232902,255.90116589219 397.413468337118,255.904306787236L396.277356695092,255.99224462587 395.2684380278,256.070761035475 395.261970796675,256.070761035475C395.233945050585,256.070761035475 395.210231223063,256.051917235342 395.19082866739,256.023651692153 395.171426542863,255.99224462587 395.162803352453,255.951416130556 395.169270799153,255.907447054227L395.330956535528,254.597793995163 395.563783754459,252.744808172972C395.57025120116,252.688276458544 395.598276947244,252.644307068186 395.634925883742,252.634885325134 395.673730132799,252.622322687035 395.712534813007,252.644307068186 395.734092681243,252.691417039562L396.107047768313,253.489143459698C396.624442210931,252.945810068515 397.238847707348,252.594056515794 397.904993208515,252.487274248974 397.913616398923,252.484133667955 397.922239589334,252.484133667955 397.930862779744,252.484133667955 397.989069584478,252.474711924903 398.045120861077,252.46843044884 398.103327665812,252.462149286803 398.144287443,252.45743857229 398.185247866916,252.454297363218 398.22647818994,252.452727229724z M389.443585069395,249.518604635334L398.359356938709,249.518604635334C398.710729366487,249.518604635334,398.99742150675,249.933196814709,398.99742150675,250.44823577225L398.99742150675,250.702650155018C398.717201986975,250.633564281212 398.430483762208,250.589628177687 398.137318785889,250.589628491713 396.313645406818,250.589628177687 394.720615909451,251.990362796668 393.823857353709,254.088321160865L389.443585069395,254.088321160865C389.092212878752,254.088321160865,388.807652116871,253.673728981493,388.807652143848,253.161833431211L388.807652143848,250.44823577225C388.807652116871,249.933196814709,389.092212878752,249.518604635334,389.443585069395,249.518604635334z M390.683074948276,245.080736615804C390.284279327844,245.080736615804 389.958775867684,245.551515802497 389.958775867684,246.132143695327 389.958775867684,246.712771556754 390.284279327844,247.186689471708 390.683074948276,247.186689471708 391.08187035313,247.186689471708 391.405218112699,246.712771556754 391.405218112699,246.132143695327 391.405218112699,245.551515802497 391.08187035313,245.080736615804 390.683074948276,245.080736615804z M389.44357519609,243.847294696348L398.359350255903,243.847294696348C398.71072117466,243.847294696348,398.99742301577,244.264718988314,398.99742301577,244.776299224386L398.99742301577,247.491126737513C398.99742301577,248.00270700499,398.71072117466,248.416992694303,398.359350255903,248.416992694303L389.44357519609,248.416992694303C389.092203953968,248.416992694303,388.807657941776,248.00270700499,388.807657780571,247.491126737513L388.807657780571,244.776299224386C388.807657941776,244.264718988314,389.092203953968,243.847294696348,389.44357519609,243.847294696348z" />
        </Path.Data>
      </Path>
    </Canvas>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Modify3" Width="125" Height="24.999984" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="932.173442" Canvas.Top="240.000003">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ChangeScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Change" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshMod3" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ToggleValueCommand>
                  <gwxcmd:ToggleValueCommand.Values>
                    <s:String>0</s:String>
                    <s:String>1</s:String>
                  </gwxcmd:ToggleValueCommand.Values>
                </gwxcmd:ToggleValueCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshMod3" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:IcoCommandingCommand>
                  <gwxcmd:IcoCommandingCommand.Command>
                    <icc:RefreshCommandData Target="Preventitve" />
                  </gwxcmd:IcoCommandingCommand.Command>
                </gwxcmd:IcoCommandingCommand>
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="CHANGE" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseEdit5" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Edit, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Edit">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M949.721065636522,256.983894580407L959.063510053596,256.983894580407C959.430921486927,256.983894580407,959.730372071621,257.458822209998,959.730372071621,258.044903379867L959.730372071621,261.140356936908C959.730372071621,261.723070205691,959.430921486927,262.197997835281,959.063510053596,262.197997835281L949.721065636522,262.197997835281C949.351530351019,262.197997835281,949.054203171961,261.723070205691,949.054203257484,261.140356936908L949.054203257484,258.044903379867C949.054203171961,257.458822209998,949.351530351019,256.983894580407,949.721065636522,256.983894580407z M949.721065636522,250.3963703604L955.918213505511,250.3963703604 955.610267257293,253.330857789113 959.337475346599,251.808023994754 959.715506253152,251.231907364249C959.726124876939,251.302658895915,959.730372071621,251.376779339544,959.730372071621,251.454268695135L959.730372071621,254.553841907872C959.730372071621,255.13669703622,959.430921486927,255.61173923173,959.063510053596,255.61173923173L949.721065636522,255.61173923173C949.351530351019,255.61173923173,949.054203171961,255.13669703622,949.054203257484,254.553841907872L949.054203257484,251.454268695135C949.054203171961,250.868044991783,949.351530351019,250.3963703604,949.721065636522,250.3963703604z M956.735395423138,248.853044429517L958.475121115765,251.427971436057 956.268069371981,251.963852515494z M951.018326295771,245.328929038536C950.602155389842,245.328928701577 950.260296990961,245.87152718525 950.260297097139,246.532124556605 950.260296990961,247.199470029125 950.602155389842,247.735403337144 951.018326295771,247.735403337144 951.436622731514,247.735403337144 951.774256233484,247.199470029125 951.774256233484,246.532124556605 951.774256233484,245.87152718525 951.436622731514,245.328928701577 951.018326295771,245.328929038536z M959.50690210092,244.203032090104L961.274011156542,246.982670536692 958.931317393258,250.732655031154 958.905829553248,250.116081130829 958.311129496477,249.758939397402 958.309006111498,249.105303421991 957.714305842367,248.818916252856 957.659083817103,248.081049054427 957.164208337635,247.953016921524z M949.720954402492,243.926763147142L958.717644638891,243.926763147142 956.156881637664,248.08257109637 956.046462433226,249.140860303065 949.720954402492,249.140860303065C949.351491170647,249.140860303065,949.054215099592,248.665654682638,949.054215155514,248.08257109637L949.054215155514,244.985134773908C949.054215099592,244.398677423472,949.351491170647,243.926763147142,949.720954402492,243.926763147142z M960.760455877781,242.518481135474C960.856889494848,242.514853750775,960.947352830352,242.563217862022,961.014242748845,242.666394830996L962.264974264841,244.637283527883C962.417865416105,244.873116463112,962.386012730144,245.314460778079,962.197023184754,245.617674378654L961.940081922197,246.032066555526 960.137244615467,243.195334250151 960.396309050643,242.784311264915C960.502616121189,242.613753489074,960.636470284088,242.523144709158,960.760455877781,242.518481135474z" />
      </Path.Data>
    </Path>
  </Canvas>
  <Canvas Visibility="Hidden" gwx:GwxProperties.Locked="True">
    <TextBox FontFamily="Segoe UI" FontSize="12" Name="logged_in_user" Width="220" Height="25" Canvas.Left="119.999999" Canvas.Top="239.999993">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxProcessPoint AnimationMode="Analog" DataSource="localsim::currentUser" />
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="CurrentUser_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>*.??</TextBox>
    <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="logged_in_user_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="9.999999" Canvas.Top="239.999993">
      <TextBlock Text="Logged in User" />
    </Label>
  </Canvas>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="alert_value1_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="350.484663" Canvas.Top="220">
    <TextBlock Text="*" />
  </Label>
  <Label Background="{x:Null}" Foreground="#FFFF0000" FontFamily="Calibri" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="alert_value2_empty_label" Width="9.96" Height="24.413333" RenderTransform="1,0,0.00280955,1,-6.24799187029112,-24.53125" Visibility="Hidden" Canvas.Left="720.484664" Canvas.Top="220">
    <TextBlock Text="*" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="alert_value1" Width="220" Height="25" IsEnabled="True" Canvas.Left="120" Canvas.Top="189.999994">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="alert_value1_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings></TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="enabled1" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="10" Canvas.Top="189.999994">
    <TextBlock Text="Alert Value 1" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="enabled2" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="380" Canvas.Top="195">
    <TextBlock Text="Alert Value 2" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="alert_value2" Width="220" Height="25" IsEnabled="True" Canvas.Left="490.000001" Canvas.Top="190">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="alert_value2_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings></TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="enabled4" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="10" Canvas.Top="225">
    <TextBlock Text="Line Stop" />
  </Label>
  <CheckBox IsChecked="False" Foreground="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" Name="enabled" Width="71.3949803543091" Height="15.0983400344849" Canvas.Left="120" Canvas.Top="227.21583">
    <TextBlock Text="Enabled" />
  </CheckBox>
  <ComboBox IsDropDownOpen="False" Text="" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="6" Padding="4,2,5,3" Name="alert_user_1" Width="100" Height="25" Focusable="False" gwx:GwxProperties.Description="Select Plant" Canvas.Left="860" Canvas.Top="190.000003">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Drowdown_Alert_User_1" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="6" Padding="4,2,5,3" Name="alert_user_2" Width="100" Height="25" Focusable="False" gwx:GwxProperties.Description="Select Plant" Canvas.Left="980" Canvas.Top="190.000004">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Drowdown_Alert_User_2" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="enabled7" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="750" Canvas.Top="195">
    <TextBlock Text="Alert User 1/2" />
  </Label>
</Canvas>