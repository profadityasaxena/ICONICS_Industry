<?xml version="1.0" encoding="utf-8"?>
<Canvas Background="#FF243782" Width="1100" Height="728" gwx:GwxProperties.Description="Display Size: H=1100 W:728" gwx:GwxProperties.ShowDescriptionInToolTip="False" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:gwx="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCore" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:iwm="clr-namespace:Ico.Windows.Media;assembly=IcoWPF" xmlns:script="clr-namespace:Ico.Script;assembly=IcoScriptEngine" xmlns:ic="clr-namespace:Ico.Collections;assembly=IcoCollections" xmlns:gwxcmd="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCoreCommands" xmlns:ig="clr-namespace:Ico.Gdx;assembly=GdxViewControl" xmlns:iws="clr-namespace:Ico.WPF.Specialized;assembly=IcoWPFSpecialized" xmlns:ig13="clr-namespace:Ico.Gdx;assembly=GdxClientCommon" xmlns:igd="clr-namespace:Ico.Gdx.Data;assembly=GdxClientCommon" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:iwc="clr-namespace:Ico.Windows.Controls;assembly=IcoWPF">
  <Canvas.Resources>
    <BitmapImage x:Key="GwxThumbnailImageKey">
      <iwm:BitmapImageInfo.StreamSource>
        <iwm:Base64Stream Data="iVBORw0KGgoAAAANSUhEUgAAAQAAAACpCAYAAADEFuP0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAACb4SURBVHhe7Z0HfFRl1v/PpPfeCwkJCSEQQlMElN5EKeq6Vv4KiujaXlddX9e/yrqvr+Uvuij2tWOluAgKUaQpIL2XAAmQRnolPeT+n9+Tm5AMM8nM5AYmk/PNZz5z753JmfO0c597zrnP1fUZ/oJCDMP0SOzUd4ZheiBsABimB2OzlwALn59Mgf7e6p5tUlBURo//42d1r3vB7WMd2KwB+GzRn6hffIi6Z5scPZ5Ldz26TN1rwqmxnuyURqqxd1aPWCc9tX2AR0MVVdm7UKPu8k/ANdPgsfljlClj+yo3XTewjUEJ9HdX3N0clQEJIcroq2KUQQPCL4nBaWxstNlXWVkZFRQUyO3W2Cvn6f+cWknzTi4lh8YG9ejF2NuR8tRDE5Q7bhqqAPVwG/48Y5Di6+PaZe2lXyZbe5WUlMh3fcKqC+iB49/QDZnr1COXF81mAPNmj1BqaxpIZ6ejsvJqSu4fTjU19eTi4ki//ZEmt6eM70fppwspO7eM+vQOJNHByMXZkWpq6ykvv4KOncijrbtO61SRneLj12+ghLhgdc+2OHr0KG3dupVGjb6e5v71e/VokwF44MQ3pBMt+m7cLdRg56B+0hYfLxflqYcnyvoOCfISU9VzVFd/nlxdHcnZyYFWpRyiUVfGkLeXCzk52tP5801dxN3NieyF9SivqKGq6jr6fs0BKimttqi9bLl9wM8//0y9eie3aR8AAzAnbQUd846h5ZGT1KOXD81mAFVVdfT50p06d1cnShRTO3QWDPxaMbgx+EHK+qM0NLkXibMKeXk4yw54PC1fGgEvTxfKOlsqv6cFOLHZ6ishIYHmzp0rt1tzXmdPi+PvoLf63mF08AMM9v+IwTskOZJSNh6TxhhGuE90AOXml5Ofr5v8Hoz10IG9xKDXUYC/u/zumaxi6hXuS+XnaqhCGAJL0S+Trb0mTZok3/XJcQ2kFwfMt4rBD2zWB/DS02MpwM9L3bNNCovL6emXNqp7nWfymL4KBrlOoB7qMrh9rANOBGKYHgznATBMD4YNAMP0YNgAMEwPxmZ9AK89N6lHZJo98cIv6l4T3SURqKe2D7CmRCDNDMDVw3srmdmlVHGuhor1YsP3zR6pLFm6g0JDvCntdFGXe5jBp/+6yWYzzSoqKqiuro7yi+rp7v9arh5tygOYk/49uTbU0LtxtxoNBSIR6Im/TKA164/SgSM5RtsDuR1rxXfQpqVlNZq2my23D0CyVk5edZv2AcgDuOPUKkr3iKDlvSarRy8fmhkAZJUhph8TFUDRkX5kZ6+js3nltPSHvfSXOddQfuE5QnDJ06PpzOTh7kxKo0K1dQ1UWl5Dn3y9XdMOhkQTW+1gSATasmVLpxOBCkSb7NyfQcmJ4TJvA21RVV0vk3yWLNulW/DkVCWvoEIYgFpkdMr/9fNxp6KSSiosrpT7+J7cMBNbbh+QkpLSsxKB3EQHCgrwJAcHO5kA1Dc2mIpLqqhadKic3DJycXagpH5h5GhvT0gW2rTlJGXmlMoklNMZRaoU7UAShn56pq28+vbtazQR6J242+jt+NtMSgQKD/OhAQmhMtEnKNCTHB3tKTTYi06p7XEivYD8fd1pSFKEzOiEET96Ik9mDvbpHdDyPUuw5fbBq71EoFcS7+FEoK7mw/83w6ZTTQEyKec9+YO61zmmjk9QBg2IoJffXKfpTMwY3D7Wgc0aAGSa+ft6qnu2SVFJhdVnmhmD28c6sFkDwDBMx3AeAMP0YNgAMEwPxmYvAXpqoomjTARSqNbeST1inbz90kwKCfJT95iuIje/mB58eqW6dzGaGYCBiWHKmJGxlHO2jJb/eKCNJxmrBOEY3k9nFtPuA1m62Gh/BUlBuAU17UwheXq40L5D2Zp5oG090QRgySlLEoHADdOSlIbzjeTkYG+0vdTdFoYOjFDQdsgjIPEp2mxQ/3DKyC6h/YeNJxQZYvlHc2hg/wh1j+kqDhzOopvu+UTdI3I9X0MNOnuqt3OU+5oYABdne+VP0wfLpJBn/zpZQeIIkkWweoyDePn5uMnEESSaYB9JQIg7v/H+BpoxOYmcXRzofEMj2dnp5Io0+Bwx6XOVtVRSWkW/70g3O4PQlhNNWmcCWpIIlBgfrASL+t+w5aTu1WdnKBk5JVRZVScXaSkW9e3r7UY5eWUUFxMoziAV8n/Ky6upd5Q/2dvZyZyP/Yey6eTpQiSAydwAJH0FBXhQXO9A2Y74v8rqOpkDkrLh2EVtxwbg0tDaALg1VNO8tGVU5uhBn8XMIlhxTXwA1TUNMlNs1BXRSvqZIipFZ+nlL2cDyPyDhWnOAEQ6IAxBQ8N52enONzbSzr0ZNGo4lqByld9DIhGSTCLCfKhOfA9LUFkCEjFs9eXj46OW8gJIBMKZv6NEoNSTeTRkYCQNS45U9h/JlkY3JMiTampFu4hZAfASZ3cs8RYR6i0GvY5Cg72lYcaCIWg7rCAElq3eR1cOjqLhQ6Lk56lp+dIgODs3yeyKJC/GMhSdHdWJM3+FQ1NWJ7BZH8C/X5vZIxJN7n3C+PVdZ5kyLkExdPbWAp4BXBr0LwH0sVkDwEtOWTfsBLw0XDInIMMw3Q/OA2CYHgwbAIbpwdjsJQA/e8666Qk+gI6uv60BmzUA/GxA614SrCdEATrywFsDml0CYNkvvE+f3L/FoCDbT/9ZgcDQMa0xtEiDrbw6+2xAsPAfs5Q+vQNs0vhbO171TclV1oC9X8S4Bep2pxh/TZx8llxi3xCKDPORz5YbeUVvstPZ0dhRfWjwgHAamhxJ8bFB1LdPEG3eltYl8eVmZk5JIH8/d4NJNN39lZaWJp89FxkVTytTjqklhjVXaEThftKJv13+A9pddDI+NpC8PV3plpmDKS4mSMyWgmn40CgaltyLkvuH0egRseToaEfXTepPu/Zlat5W+N3gINsO0+YVlNN3P+xT95qYcnYLTT67lcodPajA5fJfAmk2A0Aq6NiRfWjbrlMyhfREej4VFlVSZVUtbdmeLtNI7XQ6mR3m5Gg8S00r9M+atvTCkmBz5syR260x9dmAACnW367cq0Pmnp+Pq0zXxvJfWBIMz/377Y90uYQbsgSF0eGZgkaUOnpSjlsQVVvJJRonAnVjOBHIumEnIMMwVg3nATBMD4YNAMP0YNgAMEwPxmZ9AD3VyeR4vk5BIlCtg0uXhlk7CzsBrQPNDMB/PzxBOXw8l1alHJbLfSGctP9wNlWcq2vTEZuXAlN3ZVLQ8fQCmnPrcDpwNIfWbU6lrJyyNv+DhJWamnrKOtt0HDLyC/HIqjrdzKkDlB9SDpKi4MFjF+iJmWbODTXKnadXy5VfPo69kSod3dvUSTP9+4YoeN5fZLgvbdlxSoflwVb8eIB0AvUrNHZkrFwy7Pftp3R47iPeQ4I8ldgof9qy87T83o3TBiorfrp46TBT4ExA60AzA/C3B8crO/aekUklWMknW10NyNXFkerqGrDeHw0b1Es+hioju1Q+FxAdDM8R/N9Fv+jwbMEtO9Jp5tQk+T/IFSgoPkfVYuD7erviIZZ0hfh/HM8tqJCy0V13H8iUz7g7dCy3TUfsqQbg3rTlpCOFPom5wagBAMjcdMVSbOcVuXoPVu5BtB916ufnTlVVdXL/y+W76LnHp4g2bFrBCfkceKwYHimGlZ++Wr67jeEwFTYA1oFmPoCyiho6nlYgehDJ5aLOZBXLRJUtO9MpO7dMLvmFboLnBcaITnQqs4h8vFxl52sGawhiPbntwpBgodCoCD/Z6bDkWKPojc3H3d0cpWwMfl8vN7nEGENy2v9Bn5vleoDtDX7g4e5Efr7u0iDDmGLQYwWluNggOpNRLL/j5GRPE0fHyyXZsBRYgL87lZZVUVl5jUwQQmIX073pFj6AmF5+SpWYCeTmV1zU40YOi1a27T7FlwAaM+rK3mJGdqrdEW7Kd4zB7WMdsBOwG9MdnEzG4PaxDmzWADAM0zGcB8AwPRg2AAzTg2EfQDeGfQDWTY/xAeDRYMOHRFN+0TnKyy+XTwJKSgilzX+kt3iII0K9laTEMNq9L0N8r7Jdz7GHu5OCJws5OdrL5wiqh+nKwb2UXCEf+QCGnl3XGvYyG8fSRCD1o4uIDPdR8GGgv0eb9sKzBJErkJwYTvoJQ9w+1oFmMwAkliAeXyYaHItL+IrX5m0n5cpAWHwCmYGbt6VRcVmVHMCuLk7yuz7ervJ5c8gdwKOlss+W0ibxf4MGRJC3pwvFRAfIdyw4Ut/QKFcdOnA4m/YezGrXkHAHax9zE4GQ2OXm6kRV1XUybwDPEAwP9REGJF3mBSB/A1mC8X2CyE20bWZOqTgRKHKREeSE6CcMcftYB5r5AM7mlcnnAybGh8iB7OhgR0OTe7U83++c6FA60UmwXFhQgKdM5kFWGfbxfEAvMchxdt8nBjfAd7y8XOXDJfGsOZxJzoszUmlZNbmKjogHTzKWY24iULUw0L4+rvIdCVpI2qoV2zDqAAbeU7RhRlYJHTuZJ1eCghHBO2O9XDIfQHiIl+Lk5ECnMoqNnrVNpaMpKeAzTOdoneSDpwnjSc0w7HjPyC41qw0NJQxx+1gH7ATsxrAT0LrhRCCGYawazgNgmB4MGwCG6cGwAWCYHgwbAIbpwbAT0Iapq0uj0vIqda8tc2+fRMEBPrRx60HatuvC48U6g4+XGzk5xap7TbSnA5g59SpKjI+kvYfSae363epRyzFHh5ioEBoxLIHyCkrl6+DR0+onncdUPVycHemx+bPk9rcrf6P0M7lyWwsM6aAPGwAbJr/wIJVXGn4Q5RsvzKdB/WPo/S9+oqU/bFbm3XktRYYF0q+/7aXoyGDy9fGkc5XV8tj/feVzk+L+Xu6eFBSQpO410Z4O4N47ptKoKxJpy84j9O8v19KIoQnKiGH9yN3NhUKD/Oh0Zh5t2LKfdu4/obkOt84aQ888eivl5pfQwvdWUHxMmLJt11G6+5ZJ8nfjYsLp6IkM8hN1gcSntNNnqaq6lr7+z6YOdTFVDx8vd3r3lYcpJMiXXlz0Da3bvJeefvjPirc4XlZeSdU1tZSZU0ie7q7k5+tJEaEB9MGSNXTs5IWUa2MY0kEfvgTooQzoGyUHuI+XBzk6Osh07KrqGgr09yY7sd1ffD5mRJL8jpeHa5edJG6ZMZr+dP3VVFPTlNk5blQyXTEI2YdVhEcSlpafk8e7Ag8xqPDCYF+7YRdVVtXQ9MnD5XvW2ULy9faggqIyWT9IVf925WbKyS1S/1sbHBzspSHyEb9VWtZUVgx6ZFki89XZyVEO/py8IjFTO0rFpRVSP63gGYAN097Z94vFT9Jn360jD3GmPSnObIeOdX76a8kM4KW/z5GDAFPhj75KoX2H09VPLMMcHaaOG0ZPPXSzGNx1dO3tz6pHtcFUPWCAVn2+QJYbbTHviUXqJ53HlBkAGwAbpr3r78FJsdTQcF5cgw+nD5ekyGvgzmKJD+CWmddIAzBt4hX02jsraO/BpnsLLMUcHe6bPZUevme63E4a+6B81wpT9cClziP3TqcyMeMJErOvBa99pX7SedgHwHRI8x1+lxtr0eNycjnqgH0APRxrGXQ9ffCDy1EHbAAYpgejixr0V74EYJgeiu6NRe8qkyeOVncZhukp/LxuM+k+/+I7ZeaMKeohhmF6Cit/SCH7mbNuWhAfFyOTLvhlPa/CojLlgf9+h7w8XemDJWvpykFx9OyrS2j81QN1xSXlypP//FhmppVXVFJ0ZJCu9f/m5hcrX63YSH1jwuivC/5NNTW11Dc2XH7ny+UblOAAb3J1ddadzsxTkG3m4e5CryxeRodTz9DgATFtZJWWnVOeeOEjamhooLjeYW0+a/2CLCTUpGzcTUn9oo1+j1/W8zqWepJ0n3z6tTL9+kmqTWCshczsAuWFN76hoAAf2rb7GI0bmUQbtx2iX7/7H92if/+gXH1lImXlFNIHX6bQlLFD6ER6jnyAKjLqJo0eREtXb6Gp44bQwaNnZGMj3owMMj8fD0I6K5J/QoP9KNDPi+67cwp9+OXPtOCJ23X/WPi1cja/mOzt7WXW2/UTr6Avv99ECX0iZN4AsuKiwgOljkdOZMIo0FHx7uXpRmfziik+JhyLf8rfQnIPfue15+ZSbHSoSam8zKVj1epfSPfOux8r104dpx5irAUxuJXPlm2kh+dMo5ffXiEGWRbO4vTy32fr1qzfo/z6+wEK9PeSAxCpo5u3H6GhSbG051A6TbommVas+YMG9e8tE0z+9sBMen7ht4SlwIMCvKT8ycJIHBdGo1IYg3tunUCPLfhEGIzBtPtAGhWXniNHB3u6+fqR8rtbd6dSYXE57TmYTg/efS2tXreLoiOCqF7MCvCO3x49PJFyC0pl+mr5uaqW38LvhIf4UVxMGBsAK2PN2g2ke3PxB8qUSWPUQwxjmLTTucrH364XRiUahoEHsw2Q8ssm0sWNuEcpKC5TD3UOezsd9YoIplMZnb+lEVNKf18vq5MFWDfz4XJahta6rf/2H9RQf2Gpdp1H7A0K7vjSAtwy6enh1nJXU2dAfjhulLA2WYB1Mx8up2VorduxTYvbGAB7J79+C+rqG2jW1Kto3MiBlJQQfdEdWbFRIZSc2JtOZ+WrRy6QEFxFg/uFkH19EZVUO8nbF3F31cLn58nryGuGD6C9hy7c4AHHEO4xLy2vVI9cALImj06imrIMKq1xJidVFm5dxX3jcb3D28jqiP95ZAL5u5TTscyaFllgiLhWrm84T0MH9qGM7AJ5rCOg24jB0aRU57XoBs/4C3+bTXkFJeQgjN+5StNu04Sspx+9hRxrz1Da2fMtut150zihWx/50i8n6r93ZDBlnb34dlTIS4oLIMfzJS26hQb50rOP3S7vM0e0AG3cmrm3TjZYl5A1fmQ/qqvIapF103WjqFKULTY6VJ5F4A/Afey4XfbP00dfJKe17H+KNvBzKqXUrNqWcr7w5GwKDvShQ6ln5HdMBbpdMTCSdLX5LbqNHZkkHY3mAlnTJgyhquLTLbIGJERJ/XAbtLkyX3x0IgV51lJNRS5VNri39DUwddxQ6RiFAxb+FTBzylVUVFIuHbL6QLfRw+Op4VxOi26Q99aLD0hn7pHjGbIvhIf4y7FpqE+05oWHx5O3QxEdz66nh+ZMo0++W0/7j5yhQYnRTTMAhIVwD/Y3KzfTon/Op+KSCunIgXJurs5ywQRUyktvfktnDAyYxPAGOpPfSDWNLi0zgL8/cgtVnKuWHmjcUx0XEyYXVhC74ngVLVj4pfrfbUnqRZR+to5qlaZ7tSHrntsmy3vUoyKCZAVg5ZbI8EA6eSqH+vQOoyXLfqU0AyupzL99DJ1JO0zrdpe0saLXT7ySDhw9RROvGUx9+0RQtShnTl6xfFzZO5+ulsbBEInh50U5z7fohsIsXDCPfvp1p1xdBzJGDusnLW2J+C2Uf78wphu2HlAlXGDOzERKPZ5GO040SFnwrGOFmu/XbKN3X36IsnMLqa6uQd7/jXrLKyyVsp95+TM5APXpG1JHWaIfNOt2/+xr6eXFS+mx+2aJegum42lZ8jjkoePBMG/ddZSWrf5dlXCBAZEKncqtb5E199ZJsiwwJqh71DkMfaG4dExOjJHymnVCpAALafzXc+/L/fm3jab0Ewdpw75yKQtt8NSDN1NtXb2MQiCSgQeG4f5/Z3FyaGxUpHHBgDl2MlP+1uvvfy9lgX5hDZRR0Nii2503jpO3Nd97xxRxcnGi6hrRd4Rs1BnWN4BRht7ou3jWYWuSo3R0Mqe2RdaYqwbQrv0n6IZrR5K/n5dcCwFOTYyB5lkypuNf/2cjFuSQ+8385a5plHXiD9q4p4DsnL3bnLEfmjOd9hw8ifCoPIlt33OMpk++itb/vo8S4iLpfxd9I8Zb21m4fhtA3uuiry3/cQuNvzpZ1g/6rYvos81rOKRs2E2rftmuSrjAvFuuprTUA7T5UKXhGUCB6Fy33TBWFrZpYYhauSDEpm0H5aoxp7Py5FkJ4Z6IUFidUMrMzpcPAQUFBXlUrziTnf2FGQA6xuJPVtHE0YPlCjMoxPY9qeTm5iwLCyMA6xUjZJ1pNbPIz4MsJ7JzcGqxfHWiQVF5pWWVVCIsKAZ/vTij4QyE0BPecWbqEx0mz+jNeu3el0onM4qFLJcWWQChKugTGRYgV11BeWGgMFjxjDsMRH29QEFBQRvdoAM6PmYSRcJoYiUbrKSD0F2q6CCeHq6io2SI8ofIMFqeMKTNxmXf/kOUWaS0yELIbfbNE+TnaFwsQJEkzvq/ik4ydGCcMAhFNHhArLT+vYTe+voVFRa20W1YcpwcBBgUWNwC/4s4f3SvEDqRnk39RMeDoYdBxZmvqqqGKtROnp+f30ZW//gouShFZk6BXLjCV5zJdoq6RUgQhgGg/lGnjo728ndXr9shj+/en0rpWaVt2gC6vPnRD5QQGyF/H4O2X1wv2ZZJ/XrT7gMnhEE/K2c9MAYbtlwwoIV6bYByQvd+8b1kWRP6RMoZJmREhAbKsqJuHeztZX/rLcrfPOvL0+tr3qIMo4VhRP1j0MOQYzxgP17oumNvKjk5OtJeMZgHCj3RjyAb42anMBypJ05TAzmTs4trS18DM8TZHuVEXWFRDxgBD9E3sPwXfqOwqJzyxUmyNfptAHk4Sf+2/RCFCcPpJU60WMMBJ0WspoSTBQxCgDBcGLtFwjijD4E9B47TqZwy2QaYAdz35FuifXbS9ZOuIF1w0q0KOq8WYMofiDOhqJTO4ubiTD6io7UnC1NTWMSOMEWWObQnD0s2PXLvTFq5dptsmI64lLqZi7XKAl2tW3PfMrWPNWPt5dyTspBmzXlR7i/74AlCxlbzCbPTVFVViTO8m7rXOc6ePUuhoaHqXufQUhZg3cyHy2kZWuuG2W5rA2DS7cCbN2+m559/Xkx1DF8bN5ORkaFuNYEfTElJUfeaOHz4sLrVPqmpqepWE5iurV69Wt0zj9ayPv74Y9qyxXSLbgh93UwtkyH0ZUE/fb755huqqamRn/3222/y2LFjx6R/RR9T5G3fvp2OHj2q7l2gWXYz+rJ+/vnni9oYGPoN1ElJSYm6d7Esc0EdvPnmm+qe6fIef/xx2r27/dWGTZW1dOlS+te//qXuGcaYLEN1ZIhCcSmHtm3GVN1eeeUVWrVqlbpnGEOyHNT3djlw4ABdeeWVdOrUKerTp4961Di4Vn711VcpKipKXCfX09atW+Xxc+fOyWub119/nQIDA+ntt9+mM2fO0KBBg+jEiRPSyBhi0aJFFB8fT2vXrqVffvmFevfuLa6dHCgrK4vGjx9PkydPpmXLltG2bduknuh8jz76KPn7+6sSLlBZWSkr+PPPP6ewsDByd3enmJgYuvHGG+mjjz6Sn1199dW0ceNGqSP0xeB77733VAkXgM7Lly+Xg+K2226T266uruTl5SWdMpA/e/ZsaXC+//57WXe5ubl01113yTK0ZuXKlfJ3MDhzcnLEdZ+TTMcFmFmhPr29vWVdbtq0icrLy2n+/PkUG2t4ySfUBQY55KHdAgICxHVinbhGd5RlPnLkiCxfY2OjuB71kMYdv3fNNdeoEi4Avd5//30qLS2ln376icLDw+V3cRxtt3fvXnrrrbdkewQFBcmyo94eeOAB8vX1VaW0JTs7W7Zrr169KD09nSIjI6UOzUYN7YvBMHjwYCoqKpL9CHLNYefOnTRr1ixZF0OHDlWPWg5OQj4+PrIfo87aA30Cv486QV2g3mEE0Ibon6h71A/AcdQH6hefo/8lJCTIz0wBJ1r0YYwlczGpRsvKyujQoUPk6empHmkfdDQMAjTgH3/8IRsPAw8DFZcIzXLQ2BMmTKAff/xRfg5Dg8GyY0eTA6mZUaNGSTljxoyh4uKmPPW0tDTy8/OTxgagw6DzYsaB30enxP9g9qIPBlRycrL8TVReXFycPF5dXS07zIoVK+Q2yoBBO2DAANlo+vLwOToDBjoMBuSePn1aDpCTJ0+2GEuEC6dPn05r1qyR2+gY+rIyMzOl8cBvoZPBEIWEhMi6x3G8AwwSvDCw8D1gSDeUC86rvn37UnBwsDQGGGSoL7QB5KGMzs7OcgCijTDQ9u3bJ2cCe/bsUSU1tSc6P+obBhe/hzbEGR4DAZ9jGzrBKKJ9UB6UwVgbwHigs2NwJCYmynrE/+Ad+kDn4cOHS2OIsmCAoO3NAScAnDDQN7QAxhv6YDB3BAwbfhuGuqKioqV+Ua+oF5zQmsE+DMbEiRNl+fE7MPS//vqr/L+OQP9Au6EdzAY+AK0QnUy+i0ZVxFlKbhviww8/VO6++25FnE3UIxezYcMGdcswYjqjCIOhfPfdd1LWV199pX5yMR3Jwv9CBmSZgjF5YmAqTz31VIsuogGlXHF2lPuG6Ei39hBTYil//fr16hHz5HVUXnNkCYOsiM6t7l2MvixxZlTEmVndM5/O1Js+l0OWmIHJthOzXvWIYbTW7WTaKWXA6HvlSxgeeVugZjQbAC2w1gYGrJv5cDktQ2vd9A2ApmsCmjI1YhjGetA0CqB/vdKZKIA+nYkCtAYOl85GAfSxtEyGMOQtNicKoI8heaZGAfTpTBSgs8CTv27dOnXPdEyJApiKKVEAYxiqI0PoRwFMxZQogCE4CsBRgG4RBZgxY4bZA4OjAB3DUQCOAnSLKAAMHvqTOXAUwATgHNAKjgJwFMAY+rI4CsBRgHax1gYGrJv5cDktQ2vdujQKwDBM90LTKIA+HAUwH0PeYo4CkPRwL1myRN0zHY4CtA9HATgK0C2iAPfdd5+sA3PgKEDHcBSAowDdIgrwzjvvSC+5OXAUwATgHNAKjgJwFMAY+rI4CmCDUQAxBVG3Oo+1NjBg3cyHy2kZWuvWpVEATIEZhuk+cBRAAywtkyEMeYs5CsBRgI7gKABHAdpga1EAtAmcs+bAUYCO4SgARwG6RRQAumIwmQNHAUwAzgGt4CgARwGMoS+LowDWEQXQibOSAiutBaZMjUwFZ9Lo6Gh1r3NoKQuwbubD5bQMrXV79rkFbZYF75IZgBZYq4UHrJv5cDktQ2vdLAoD4hqOowDGsbRMhjDkLeYoAMlr6U8//VTdMx2OArQPRwE4CtAtogDQudkRaiocBegYjgJwFKBbRAFQ1zBk5sBRABPAtYFWcBSAowDG0JfFUQAbvBdAWEd1q/NYawMD1s18uJyWobVuXXovgLnXaAzDXF44CqABlpbJEIa8xRwFIFq4cCG9/PLL6p7pcBSgfTgKwFGAbhEFgDz9OusIjgJ0DEcBOArQLaIAeDAIBog5cBTABOAc0AqOAnAUwBj6sjgKwCsCtYu1NjBg3cyHy2kZWuvWpanAmAK3hp2A5mPIWcROQCIxy6Fnn31W3TMddgK2DzsB2QnYLZyA6CfNPg9TYSdgx7ATkJ2A3cIJCKNlrjOPnYAmgGsDrWAnIDsBjaEvi52A/HDQdrHWBgasm/lwOS1Da926NBWYYZjuBacCa4ClZTKEIW8xRwFI9r/7779f3TMdjgK0D0cBOArQLaIAzzzzjOzk5sBRgI7hKABHAbpFFAD9YurUqep/mwZHAUwAzgGt4CgARwGMoS+LowA2GAUQZz11q/NYawMD1s18uJyWobVuXRoFMGW6wjCM9cBRAA2wtEyGMOQt5ihAUx2ISx51z3Q4CtA+HAXgKEC3iAKAZkeoqXAUoGM4CsBRgG4RBYDhRHuZA0cBTADOAa3gKABHAYyhL4ujAFbycFAxRYQyqjnoHLBwhqbdlgCraM40qD20lAVYN/PhclqG1rrNu+9+fjhoZ2HdzIfLaRla62ZRGBDXcBwFMI6lZTKEIW8xRwFIOm0NOWI7gqMA7cNRAI4CdIsoALbhTDMHjgJ0DEcBOArQLaIAaBcYC3PgKIAJ4NpAKzgKwFEAY+jL4iiADd4LIM4u6lbnsdYGBqyb+XA5LUNr3WAAxs58RL5gADS9FwBTfoZhrJv3XvmLfAGOAmiApWUyhCFvcU+PAkAW2v7dd9+lL774Qj1qGhwFaB+OAnAU4JJHAeAUW7BggWzTgwcPyn4CvWpra+Xn2IazF20JZ+/cuXNJTF/bOENNgaMAHcNRAI4CXPIoAOoA/4eBgfKi48Po4R31B8ONtk5NTZXtDWMH+ahT1LepcBTABKR3QCM4CsBRAGO0liUGhSIMtbpnGZ2pN30uh6zLGQUQBqflpakBENZR3eo81trAgHUzHy6nZWitm74B0NQJqH99xk5A8zHkLGInYJMTEO1mbtuxE7B92AnITsBu4QSEL2HYsGHSGQifkCmwE7Bj2AnITsBu4QSE3tAP3zEVdgKagLw40Ah2ArIT0BitZbET0EadgM0GQAustYEB62Y+XE7L0Fo3i5yApmLK1IhhGOtB0yiA/vUKRwHMx5C3mKMATVGAzz77TPqLzIGjAO3DUQCOAnSbKADqcvHixXTdddfJ73UERwE6hqMAHAXoNlGAN954g2bOnKlK6RiOApiA9A5oBEcBOApgjNayOArAUYAOsdYGBqyb+XA5LUNr3bo0CsAwTPdC0yiAPhwFMB9D3mKOAnAUoCM4CsBRgDbYYhQgKSlJlp2jAG3hKICAowC2HQXA76Pc5nRyjgKYgPQOaARHATgKYIzWsjgKYKNRAGGd1a3OY60NDFg38+FyWobWunVpFABTYIZhug8cBdAAS8tkCEPeYo4CNEUB4A9YsmSJetQ0OApwMS+9/R/5AhwF4ChAt4gCoDxo4+Y6MQWOAhjm6QdnqVtE9qIhFqjbRjl+/LgcyAMHDpQd3BjoqCgAvMvooCg0Co8OA88zBioaefTo0bIhUegRI0bQrl27ZMdBZ0Hnh7cU/wsvOMBxdGZEA3BWQadHI2AQoSFQeHSYfv36yQ4Frzd+r9m77OLi0iILv4kyNHthYUhQ4fgNVCAMCgYsPN6IDkRHR8uBi/+BrNby0NHR0PgO9EKZ4HnH0lUwgignyoXPEHVAR8R38R3UUWtZKF9oaKjcxv+gDvBkXAxaHMf/wKBAD3jgsY3P4cWH51xfNwx6fIa6j4iIkPUzZMgQaQBRbxiEqCe80G54h/6QjU6LKAH2IQttBsMI3TEo8Xuoa/QJPNgTslF/0AnyMaDR/vhfyGmtF0CZcKaDkevfv780QqhLGCYYIhyDrhhw0AHtjbaBZx1tis/w3izPGKgzRJRQf4iGGMMUWQB9CzqjLaGXIZplYRzghIWTEPoY3lE+1Av67rhx46ReAEYas7lp06bJdkFdok3QDhgHqNf2QDkxy0GfRd0ZA7o5O7uI+r4wk9e98d76jueRDMPYIET/H2jhzu0q46HlAAAAAElFTkSuQmCC" />
      </iwm:BitmapImageInfo.StreamSource>
    </BitmapImage>
  </Canvas.Resources>
  <gwx:GwxDocument.GwxDocument>
    <gwx:GwxDocument FileVersion="10.97.020.00" IsScalable="True" MaximumZoom="1" MinimumZoom="1" PanEnabled="False" PreferredStretch="Fill" ScanRate="500">
      <gwx:GwxDocument.ScriptCodeManager>
        <script:ScriptCodeManager>
          <script:ScriptCodeManager.Scripts>
            <script:ScriptCode Name="ThisDisplayCode" Type="JScriptNet">
              <x:XData><![CDATA[function ThisDisplay_AnimationStarted(sender : System.Object, e : System.EventArgs)
{
	        Clear();
            ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","PM Checkpoint")
	
			var stage_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("stage_name_LB");
			var plant_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("plant_name_LB");
		    var shop_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("shop_name_LB");
			var line_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("line_name_LB");
			var checkpoint_name_LB     : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checkpoint_name_LB");
			var checklist_name_LB        : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checklist_name_LB");
			var method_LB              : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("method_LB");
			var process_LB             : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("process_LB");
			var estimated_time_LB      : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("estimated_time_LB");
		




		
						
			stage_name_LB.Visible              = false
	        plant_name_LB.Visible              = false
            shop_name_LB.Visible               = false
	        line_name_LB.Visible               = false
			checklist_name_LB.Visible            = false
			checkpoint_name_LB.Visible         = false
			method_LB.Visible                  = false
			process_LB.Visible                 = false
			estimated_time_LB.Visible          = false
					

						


}

function ThisDisplay_AnimationStopped(sender : System.Object, e : System.EventArgs)
{
		     Clear();
		

			ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","")
			
			var stage_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("stage_name_LB");
			var plant_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("plant_name_LB");
		    var shop_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("shop_name_LB");
			var line_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("line_name_LB");
			var checkpoint_name_LB     : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checkpoint_name_LB");
			var checklist_name_LB        : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checklist_name_LB");
			var method_LB              : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("method_LB");
			var process_LB             : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("process_LB");
			var estimated_time_LB      : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("estimated_time_LB");
			



		
						
			stage_name_LB.Visible              = false
	        plant_name_LB.Visible              = false
            shop_name_LB.Visible               = false
	        line_name_LB.Visible               = false
			checklist_name_LB.Visible            = false
			checkpoint_name_LB.Visible         = false
			method_LB.Visible                  = false
			process_LB.Visible                 = false
			estimated_time_LB.Visible          = false
				

}






]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="checkpointCode" Type="JScriptNet">
              <x:XData><![CDATA[
function checkpoint_name_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var checkpoint_name_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("checkpoint_name_LB");
        checkpoint_name_LB.Visible    = false;

}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="CLEAR" Type="JScriptNet">
              <x:XData><![CDATA[function Clear(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){		
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
	var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
	var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
    var checkpoint_name : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_name").ToDependencyObject();
    var checklist_name    : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
    var method          : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("method").ToDependencyObject();
    var process         : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("process").ToDependencyObject();
    var estimated_time  : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("estimated_time").ToDependencyObject();
    var units           : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("units").ToDependencyObject();
    var value_LL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_LL").ToDependencyObject();
    var value_UL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_UL").ToDependencyObject();
var checkpoint_id        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_id").ToDependencyObject();

    


		
	// [Array Reset] Collection arrays are reset here to default values
	stage_name.Items.Clear();
	plant_name.Items.Clear();
	shop_name.Items.Clear();
	line_name.Items.Clear();
	checklist_name.Items.Clear();
	method.Items.Clear();
				
	//[Variable Reset] Variables are reset here to default values
	stage_name.SelectedIndex 	= 0;
	plant_name.SelectedIndex = 0;
	shop_name.SelectedIndex = 0;
    line_name.SelectedIndex = 0;
    checklist_name.SelectedIndex  = 0;
    method.SelectedIndex  = 0;
   	checkpoint_name.Clear();
    units.Clear();
    process.Clear();
    estimated_time.Clear();
    value_LL.Clear();
    value_UL.Clear();
    checkpoint_id.Clear();

		
		
	//[Inline Test Statemnt] MessageBox.Show('Clearing all fields');
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="CREATE" Type="JScriptNet">
              <x:XData><![CDATA[function Create(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
			
			var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
			// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
			// [Opening connection with the database]
			var connection : System.Data.SqlClient.SqlConnection;
			connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
			connection.Open();
			
			// [Opening SQL Data Reader]
			//	var Read : System.Data.SqlClient.SqlDataReader;	
			
				// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
				var ActionOp = 'Create';
				
				// [Variable Declaration] Creating holder variables that will hold the user input values in the script
				var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
				var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
				var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
				var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			    var checkpoint_name : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_name").ToDependencyObject();
			    var checklist_name    : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
			    var method          : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("method").ToDependencyObject();
			    var process         : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("process").ToDependencyObject();
			    var estimated_time  : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("estimated_time").ToDependencyObject();
			    var units           : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("units").ToDependencyObject();
			    var value_LL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_LL").ToDependencyObject();
			    var value_UL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_UL").ToDependencyObject();
			    var checkpoint_id        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_id").ToDependencyObject();
					 
			    var stage_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("stage_name_LB");
				var plant_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("plant_name_LB");
			    var shop_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("shop_name_LB");
				var line_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("line_name_LB");
				var checkpoint_name_LB     : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checkpoint_name_LB");
				var checklist_name_LB        : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checklist_name_LB");
				var method_LB              : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("method_LB");
				var process_LB             : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("process_LB");
				var estimated_time_LB      : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("estimated_time_LB");
		
					
	            var CurrentUser : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("CurrentUser").ToDependencyObject();
				var created_by 		= CurrentUser.Text;
				var last_updated_by = CurrentUser.Text;
	
		
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			
			var query_string : String = "Exec [dbo].[SP_Maintenance_Checkpoint] ";
			query_string += "@checkpoint_id			= '"+checkpoint_id.Text+"',";
			query_string += "@checklist_name		= '"+checklist_name.Text+"',";
			query_string += "@checkpoint_name	    = '"+checkpoint_name.Text+"',";
			query_string += "@checkpoint_method		= '"+method.Text+"',";
			query_string += "@process			    = '"+process.Text+"',";
			query_string += "@value_lower_limit		= '"+value_LL.Text+"',";
			query_string += "@value_upper_limit	    = '"+value_UL.Text+"',";
			query_string += "@value_units		    = '"+units.Text+"',";
			query_string += "@estimated_time	    = '"+estimated_time.Text+"',";
			query_string += "@created_by     		= '"+created_by+"',";
			query_string += "@ActionOp 			    = '"+ActionOp+"'";			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( method.Text == "" || checkpoint_name.Text == ""|| checklist_name.Text =="" || process.Text ==""|| method.Text =="" || estimated_time.Text =="" ){
					//MessageBox.Show("Please fill in all the required values!")
					
				if(stage_name.Text == "")
				{stage_name_LB.Visible = true}
				else
				{stage_name_LB.Visible = false}
				
				if(plant_name.Text == "")
				{plant_name_LB.Visible = true}
				else
				{plant_name_LB.Visible = false}
				
				if(shop_name.Text == "")
				{shop_name_LB.Visible = true}
				else					
				{shop_name_LB.Visible = false}
				
				if(line_name.Text == "")
				{line_name_LB.Visible = true}
				else					
				{line_name_LB.Visible = false}

								
				if(process.Text == "")
				{process_LB.Visible = true}
				else
				{process_LB.Visible = false}
				
				if(checklist_name.Text == "")
				{checklist_name_LB.Visible = true}
				else
				{checklist_name_LB.Visible = false}
				
				if(checkpoint_name.Text == "")
				{checkpoint_name_LB.Visible = true}
				else
				{checkpoint_name_LB.Visible = false}
				
				if(method.Text == "")
				{method_LB.Visible = true}
				else
				{method_LB.Visible = false}
				
				if(estimated_time.Text == "")
				{estimated_time_LB.Visible = true}
				else
				{estimated_time_LB.Visible = false}



			



				
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Database_Connection" Type="JScriptNet">
              <x:XData><![CDATA[
/*
const DB_SERVER               : String = "MSI\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "ks";
const DB_PASSWORD             : String = "8101";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";
*/
//[Windows Based Authentication] User is authenticated to the SQL Server based on Windows IAM

const DB_SERVER               : String = "AK-WKS-0476-LS\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "sa";
const DB_PASSWORD             : String = "sql_1234";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Checklist_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Checklist_Name(sender : System.Object, e : System.EventArgs)
{
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
		var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
		var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var checklist_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
			   
		
		var checklist_name_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("checklist_name_LB");
        checklist_name_LB.Visible    = false;

		
		// [Array Reset] Collection arrays are reset here to default values
		checklist_name.Items.Clear();

		// [Setting Index] Setting Index to Zero
		checklist_name.SelectedIndex           = 0;
		
		if(stage_name.Text!=""){
			
			var DataReader : System.Data.SqlClient.SqlDataReader;
			var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct [checklist_name] from Maintenance_Checklist WHERE [stage_id] IN (select [stage_id] from Config_Stage where [stage_name] = '"+stage_name.Text+"')", connection);
			
			try {
				DataReader=RetrieveDataCmd.ExecuteReader();
				
				while(DataReader.Read()) {
					checklist_name.Items.Add(DataReader["checklist_name"]);
				}
				DataReader.Close();
				connection.Close();
				
				} catch(ex:Exception){
					MessageBox.Show(ex);
				}
			}
	else{
			MessageBox.Show("You must select stage first");
		}

}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Line_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Line_Name(sender : System.Object, e : System.EventArgs)
{
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
				var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
				var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
				var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
				var checklist_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();

			   
		
		var line_name_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_name_LB");
        line_name_LB.Visible    = false;

		
		// [Array Reset] Collection arrays are reset here to default values
		line_name.Items.Clear();
		stage_name.Items.Clear();
		checklist_name.Items.Clear();

		// [Setting Index] Setting Index to Zero
		line_name.SelectedIndex            = 0;
		stage_name.SelectedIndex           = 0;
		checklist_name.SelectedIndex       = 0;
		
		if(shop_name.Text!=""){
			
			var DataReader : System.Data.SqlClient.SqlDataReader;
			var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct line_name from Config_Line WHERE shop_name = '"+shop_name.Text+"'", connection);
			
			try {
				DataReader=RetrieveDataCmd.ExecuteReader();
				
				while(DataReader.Read()) {
					line_name.Items.Add(DataReader["line_name"]);
				}
				DataReader.Close();
				connection.Close();
				
				} catch(ex:Exception){
					MessageBox.Show(ex);
				}
			}
	else{
			MessageBox.Show("You must select shop first");
		}

}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Method" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Method(sender : System.Object, e : System.EventArgs)
{

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		 var method       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("method").ToDependencyObject();
			   
		
		
		
		// [Array Reset] Collection arrays are reset here to default values
		method.Items.Clear();

		// [Setting Index] Setting Index to Zero
		method.SelectedIndex           = 0;
		
		method.Items.Add('Visual');
		method.Items.Add('Manual');
	
		
	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Plant_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Plant_Name(sender : System.Object, e : System.EventArgs)
{
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
        var shop_name     : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
        var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var checklist_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
        var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();

			   		
		var plant_name_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plant_name_LB");
        plant_name_LB.Visible    = false;

		
		// [Array Reset] Collection arrays are reset here to default values
		plant_name.Items.Clear();
        shop_name.Items.Clear();
        line_name.Items.Clear();
		stage_name.Items.Clear();
		checklist_name.Items.Clear();

		// [Setting Index] Setting Index to Zero
		plant_name.SelectedIndex           = 0;
		shop_name.SelectedIndex           = 0;
		line_name.SelectedIndex            = 0;
		stage_name.SelectedIndex           = 0;
		checklist_name.SelectedIndex       = 0;



			
			var DataReader : System.Data.SqlClient.SqlDataReader;
			var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT DISTINCT [plant_name] from Config_Plant ", connection);
			
			try {
				DataReader=RetrieveDataCmd.ExecuteReader();
				
				while(DataReader.Read()) {
					plant_name.Items.Add(DataReader["plant_name"]);
				}
				DataReader.Close();
				connection.Close();
				
				} catch(ex:Exception){
					MessageBox.Show(ex);
				}
			
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Shop_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Shop_Name(sender : System.Object, e : System.EventArgs)
{
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name     : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var plant_name     : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
        var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var checklist_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
        var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();

							    		
		var shop_name_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_name_LB");
        shop_name_LB.Visible    = false;

		
		// [Array Reset] Collection arrays are reset here to default values
		shop_name.Items.Clear();
        line_name.Items.Clear();
		stage_name.Items.Clear();
		checklist_name.Items.Clear();

		// [Setting Index] Setting Index to Zero
		shop_name.SelectedIndex           = 0;
		line_name.SelectedIndex            = 0;
		stage_name.SelectedIndex           = 0;
		checklist_name.SelectedIndex       = 0;

		if(plant_name.Text!=""){
			
			var DataReader : System.Data.SqlClient.SqlDataReader;
			var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct shop_name from Config_Shop WHERE plant_name = '"+plant_name.Text+"'",connection);
			
			try {
				DataReader=RetrieveDataCmd.ExecuteReader();
				
				while(DataReader.Read()) {
					shop_name.Items.Add(DataReader["shop_name"]);
				}
				DataReader.Close();
				connection.Close();
				
				} catch(ex:Exception){
					MessageBox.Show(ex);
				}
			}
	else{
			MessageBox.Show("You must select a plant first");
		}

}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_Stage_Name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_Stage_Name(sender : System.Object, e : System.EventArgs)
{
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		   var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
			var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		    var checklist_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();

		var stage_name_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_name_LB");
        stage_name_LB.Visible    = false;

		
		// [Array Reset] Collection arrays are reset here to default values
		stage_name.Items.Clear();
        checklist_name.Items.Clear();


		// [Setting Index] Setting Index to Zero
		stage_name.SelectedIndex           = 0;
		checklist_name.SelectedIndex       = 0;
		
	   if(line_name.Text!=""){	
			var DataReader : System.Data.SqlClient.SqlDataReader;
			var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct stage_name from Config_Stage WHERE line_id IN (Select line_id from Config_Line WHERE line_name = '"+line_name.Text+"');", connection);
			
			try {
				DataReader=RetrieveDataCmd.ExecuteReader();
				
				while(DataReader.Read()) {
					stage_name.Items.Add(DataReader["stage_name"]);
				}
				DataReader.Close();
				connection.Close();
				
				} catch(ex:Exception){
					MessageBox.Show(ex);
				}
			}
	else{
			MessageBox.Show("You must select Line first");
		}

	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="estimatedCode" Type="JScriptNet">
              <x:XData><![CDATA[
function estimated_time_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var estimated_time_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("estimated_time_LB");
        estimated_time_LB.Visible    = false;

}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Grid" Type="JScriptNet">
              <x:XData><![CDATA[function Grid(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
              var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
				var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
				var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
				var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			    var checkpoint_name : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_name").ToDependencyObject();
			    var checklist_name    : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
			    var method          : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("method").ToDependencyObject();
			    var process         : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("process").ToDependencyObject();
			    var estimated_time  : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("estimated_time").ToDependencyObject();
			    var units           : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("units").ToDependencyObject();
			    var value_LL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_LL").ToDependencyObject();
			    var value_UL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_UL").ToDependencyObject();
			    var checkpoint_id        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_id").ToDependencyObject();

		
	//[Grid Selection Code]
	var gdxViewer		: Ico.Gdx.GdxViewControl = Ico.Gdx.GdxViewControl(ThisConfiguration.GetObjectByName("default_grid").ToDependencyObject());
	var tab_list 		: ItemsControl = ItemsControl(gdxViewer.Items[0]);
	var grid_list 		: Ico.Gdx.GdxGridView = Ico.Gdx.GdxGridView(tab_list.Items[0]);
	var Row_Selected 	: DataRow;
	Row_Selected = grid_list.GetHighlightedRow();
		
	if(grid_list.GetHighlightedRow() != null)
	{
			if (Row_Selected.Item[0] != String.IsNullOrEmpty){
				
				Dropdown_Plant_Name();
				plant_name.SelectedValue = Row_Selected.Item[1];
				
				Dropdown_Shop_Name();
				shop_name.SelectedValue = Row_Selected.Item[2];
				
				Dropdown_Line_Name();
				line_name.SelectedValue = Row_Selected.Item[4];
				
				Dropdown_Stage_Name();
				stage_name.SelectedValue = Row_Selected.Item[6];
				
				Dropdown_Checklist_Name();
				checklist_name.SelectedValue = Row_Selected.Item[8];
									
				Dropdown_Method();
				method.SelectedValue = Row_Selected.Item[11];								
									
				units.Text = Row_Selected.Item[15];
				process.Text = Row_Selected.Item[12];
				value_LL.Text = Row_Selected.Item[13];
				value_UL.Text = Row_Selected.Item[14];
				estimated_time.Text = Row_Selected.Item[16];
				checkpoint_id.Text = Row_Selected.Item[0];
				
			    checkpoint_name.Text = Row_Selected.Item[10];

					
			

					
					
			}
	}
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="JScriptDotNetGlobalVariablesCode" Type="JScriptNet" EditorBrowsable="Never">
              <x:XData><![CDATA[
var ThisWindow : Ico.Gwx.GwxRuntimeViewControl;
var ThisDocument : Ico.Gwx.GwxDocument;
var ThisConfiguration : Ico.Gwx.GwxConfiguration;
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="processCode" Type="JScriptNet">
              <x:XData><![CDATA[
function process_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var process_LB  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("process_LB");
        process_LB.Visible    = false;

}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="REMOVE" Type="JScriptNet">
              <x:XData><![CDATA[function Delete(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
			
			var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
			// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
			// [Opening connection with the database]
			var connection : System.Data.SqlClient.SqlConnection;
			connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
			connection.Open();
			
			// [Opening SQL Data Reader]
			//	var Read : System.Data.SqlClient.SqlDataReader;	
			
				// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
				var ActionOp = 'Delete';
				
				// [Variable Declaration] Creating holder variables that will hold the user input values in the script
				var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
				var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
				var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
				var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			    var checkpoint_name : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_name").ToDependencyObject();
			    var checklist_name    : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
			    var method          : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("method").ToDependencyObject();
			    var process         : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("process").ToDependencyObject();
			    var estimated_time  : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("estimated_time").ToDependencyObject();
			    var units           : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("units").ToDependencyObject();
			    var value_LL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_LL").ToDependencyObject();
			    var value_UL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_UL").ToDependencyObject();
			    var checkpoint_id        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_id").ToDependencyObject();
					 
			    var stage_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("stage_name_LB");
				var plant_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("plant_name_LB");
			    var shop_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("shop_name_LB");
				var line_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("line_name_LB");
				var checkpoint_name_LB     : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checkpoint_name_LB");
				var checklist_name_LB        : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checklist_name_LB");
				var method_LB              : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("method_LB");
				var process_LB             : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("process_LB");
				var estimated_time_LB      : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("estimated_time_LB");
		
					
	            var CurrentUser : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("CurrentUser").ToDependencyObject();
				var created_by 		= CurrentUser.Text;
				var last_updated_by = CurrentUser.Text;
	
		
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			
			var query_string : String = "Exec [dbo].[SP_Maintenance_Checkpoint] ";
			query_string += "@checkpoint_id			= '"+checkpoint_id.Text+"',";
			query_string += "@checklist_name		= '"+checklist_name.Text+"',";
			query_string += "@checkpoint_name	    = '"+checkpoint_name.Text+"',";
			query_string += "@checkpoint_method		= '"+method.Text+"',";
			query_string += "@process			    = '"+process.Text+"',";
			query_string += "@value_lower_limit		= '"+value_LL.Text+"',";
			query_string += "@value_upper_limit	    = '"+value_UL.Text+"',";
			query_string += "@value_units		    = '"+units.Text+"',";
			query_string += "@estimated_time	    = '"+estimated_time.Text+"',";
			query_string += "@created_by     		= '"+created_by+"',";
			query_string += "@ActionOp 			    = '"+ActionOp+"'";			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( method.Text == "" || checkpoint_name.Text == ""|| checklist_name.Text =="" || process.Text ==""|| method.Text =="" || estimated_time.Text =="" ){
					//MessageBox.Show("Please fill in all the required values!")
					
				if(stage_name.Text == "")
				{stage_name_LB.Visible = true}
				else
				{stage_name_LB.Visible = false}
				
				if(plant_name.Text == "")
				{plant_name_LB.Visible = true}
				else
				{plant_name_LB.Visible = false}
				
				if(shop_name.Text == "")
				{shop_name_LB.Visible = true}
				else					
				{shop_name_LB.Visible = false}
				
				if(line_name.Text == "")
				{line_name_LB.Visible = true}
				else					
				{line_name_LB.Visible = false}

								
				if(process.Text == "")
				{process_LB.Visible = true}
				else
				{process_LB.Visible = false}
				
				if(checklist_name.Text == "")
				{checklist_name_LB.Visible = true}
				else
				{checklist_name_LB.Visible = false}
				
				if(checkpoint_name.Text == "")
				{checkpoint_name_LB.Visible = true}
				else
				{checkpoint_name_LB.Visible = false}
				
				if(method.Text == "")
				{method_LB.Visible = true}
				else
				{method_LB.Visible = false}
				
				if(estimated_time.Text == "")
				{estimated_time_LB.Visible = true}
				else
				{estimated_time_LB.Visible = false}



			



				
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="unitsCode" Type="JScriptNet">
              <x:XData><![CDATA[
function units_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{

}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="UPDATE" Type="JScriptNet">
              <x:XData><![CDATA[function Update(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
			
			var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
			// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
			
			// [Opening connection with the database]
			var connection : System.Data.SqlClient.SqlConnection;
			connection = new System.Data.SqlClient.SqlConnection(connection_string);
			
			connection.Open();
			
			// [Opening SQL Data Reader]
			//	var Read : System.Data.SqlClient.SqlDataReader;	
			
				// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
				var ActionOp = 'Update';
				
				// [Variable Declaration] Creating holder variables that will hold the user input values in the script
				var stage_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();
				var plant_name    	: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("plant_name").ToDependencyObject();
				var shop_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
				var line_name       : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			    var checkpoint_name : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_name").ToDependencyObject();
			    var checklist_name    : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("checklist_name").ToDependencyObject();
			    var method          : System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("method").ToDependencyObject();
			    var process         : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("process").ToDependencyObject();
			    var estimated_time  : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("estimated_time").ToDependencyObject();
			    var units           : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("units").ToDependencyObject();
			    var value_LL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_LL").ToDependencyObject();
			    var value_UL        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("value_UL").ToDependencyObject();
			    var checkpoint_id        : System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("checkpoint_id").ToDependencyObject();
					 
			    var stage_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("stage_name_LB");
				var plant_name_LB          : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("plant_name_LB");
			    var shop_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("shop_name_LB");
				var line_name_LB           : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("line_name_LB");
				var checkpoint_name_LB     : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checkpoint_name_LB");
				var checklist_name_LB        : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("checklist_name_LB");
				var method_LB              : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("method_LB");
				var process_LB             : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("process_LB");
				var estimated_time_LB      : Ico.Gwx.GwxLabel = ThisConfiguration.GetObjectByName("estimated_time_LB");
		
					
	            var CurrentUser : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("CurrentUser").ToDependencyObject();
				var created_by 		= CurrentUser.Text;
				var last_updated_by = CurrentUser.Text;
	
		
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			
			var query_string : String = "Exec [dbo].[SP_Maintenance_Checkpoint] ";
			query_string += "@checkpoint_id			= '"+checkpoint_id.Text+"',";
			query_string += "@checklist_name		= '"+checklist_name.Text+"',";
			query_string += "@checkpoint_name	    = '"+checkpoint_name.Text+"',";
			query_string += "@checkpoint_method		= '"+method.Text+"',";
			query_string += "@process			    = '"+process.Text+"',";
			query_string += "@value_lower_limit		= '"+value_LL.Text+"',";
			query_string += "@value_upper_limit	    = '"+value_UL.Text+"',";
			query_string += "@value_units		    = '"+units.Text+"',";
			query_string += "@estimated_time	    = '"+estimated_time.Text+"',";
			query_string += "@created_by     		= '"+created_by+"',";
			query_string += "@ActionOp 			    = '"+ActionOp+"'";			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( method.Text == "" || checkpoint_name.Text == ""|| checklist_name.Text =="" || process.Text ==""|| method.Text =="" || estimated_time.Text =="" ){
					//MessageBox.Show("Please fill in all the required values!")
					
				if(stage_name.Text == "")
				{stage_name_LB.Visible = true}
				else
				{stage_name_LB.Visible = false}
				
				if(plant_name.Text == "")
				{plant_name_LB.Visible = true}
				else
				{plant_name_LB.Visible = false}
				
				if(shop_name.Text == "")
				{shop_name_LB.Visible = true}
				else					
				{shop_name_LB.Visible = false}
				
				if(line_name.Text == "")
				{line_name_LB.Visible = true}
				else					
				{line_name_LB.Visible = false}

								
				if(process.Text == "")
				{process_LB.Visible = true}
				else
				{process_LB.Visible = false}
				
				if(checklist_name.Text == "")
				{checklist_name_LB.Visible = true}
				else
				{checklist_name_LB.Visible = false}
				
				if(checkpoint_name.Text == "")
				{checkpoint_name_LB.Visible = true}
				else
				{checkpoint_name_LB.Visible = false}
				
				if(method.Text == "")
				{method_LB.Visible = true}
				else
				{method_LB.Visible = false}
				
				if(estimated_time.Text == "")
				{estimated_time_LB.Visible = true}
				else
				{estimated_time_LB.Visible = false}



			



				
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
          </script:ScriptCodeManager.Scripts>
          <script:ScriptCodeManager.AssemblyReferences>
            <ic:AssemblyReference AssemblyName="mscorlib" />
            <ic:AssemblyReference AssemblyName="System" />
            <ic:AssemblyReference AssemblyName="System.Core" />
            <ic:AssemblyReference AssemblyName="System.Data" />
            <ic:AssemblyReference AssemblyName="System.Xml" />
            <ic:AssemblyReference AssemblyName="System.Drawing" />
            <ic:AssemblyReference AssemblyName="System.Windows.Forms" />
            <ic:AssemblyReference AssemblyName="WindowsBase" />
            <ic:AssemblyReference AssemblyName="PresentationCore" />
            <ic:AssemblyReference AssemblyName="PresentationFramework" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCore" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCoreCommands" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeViewControl" />
            <ic:AssemblyReference AssemblyName="GwxConfigCore" />
            <ic:AssemblyReference AssemblyName="IcoComponentModel" />
            <ic:AssemblyReference AssemblyName="IcoFwxClientWrapper" />
            <ic:AssemblyReference AssemblyName="GdxViewControl" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/GdxViewControl.DLL" />
            <ic:AssemblyReference AssemblyName="IcoWPFSpecialized" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/IcoWPFSpecialized.DLL" />
            <ic:AssemblyReference AssemblyName="IcoCommonCore.Net" />
          </script:ScriptCodeManager.AssemblyReferences>
        </script:ScriptCodeManager>
      </gwx:GwxDocument.ScriptCodeManager>
      <gwx:GwxDocument.EventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="AnimationStarted" MethodName="ThisDisplay_AnimationStopped" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarting" MethodName="ThisDisplay_AnimationStarted" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxDocument.EventBindings>
      <gwx:GwxDocument.RuntimeWindowProperties>
        <gwx:GwxWindowProperties LeftString="0%" TopString="0%" WindowState="Maximized" WidthString="100%" HeightString="100%" ControlBox="False" MaximizeBox="False" MinimizeBox="False" HorizontalScrollVisible="Hidden" VerticalScrollVisible="Hidden" MenuVisible="False" ShowContextMenu="False" NavigationBarVisible="False" StatusBarVisible="False" TitleBarVisible="False" OuterBorder="False" Resizable="False" InnerBorder="False" CommandingEnabled="False" DragAndDropCommandingEnabled="False" />
      </gwx:GwxDocument.RuntimeWindowProperties>
      <gwx:GwxDocument.ToolTipOptions>
        <gwx:GwxToolTipOptions ShowToolTips="False" />
      </gwx:GwxDocument.ToolTipOptions>
    </gwx:GwxDocument>
  </gwx:GwxDocument.GwxDocument>
  <Rectangle Stroke="#FF000000" Width="1100" Height="35.465465" Canvas.Left="0" Canvas.Top="300">
    <Rectangle.Fill>
      <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
          <GradientStop Color="#FFF5F5F5" Offset="0" />
          <GradientStop Color="#FFEBEBEB" Offset="0.49" />
          <GradientStop Color="#FFE1E1E1" Offset="0.51" />
          <GradientStop Color="#FFCDCDCD" Offset="1" />
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.RelativeTransform>
          <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
        </LinearGradientBrush.RelativeTransform>
      </LinearGradientBrush>
    </Rectangle.Fill>
  </Rectangle>
  <Canvas>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Modify" Width="125" Height="25" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="797.023144" Canvas.Top="260.490909">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ModifyScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Update" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Maintenance_Checkpoint.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="MODIFY" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseEdit1" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Edit, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Edit">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M823.532696505688,277.803810239335L832.875142466673,277.803810239335C833.242553960721,277.803810239335,833.542004594902,278.278737868926,833.542004594902,278.864819038794L833.542004594902,281.960272595832C833.542004594902,282.542985864613,833.242553960721,283.017913494203,832.875142466673,283.017913494203L823.532696505688,283.017913494203C823.163161159117,283.017913494203,822.865833930924,282.542985864613,822.865834016447,281.960272595832L822.865834016447,278.864819038794C822.865833930924,278.278737868926,823.163161159117,277.803810239335,823.532696505688,277.803810239335z M823.532696505688,271.216286019336L829.729845398804,271.216286019336 829.421899099695,274.150773448046 833.149107804951,272.627939653689 833.527138773977,272.051823023184C833.537757399519,272.12257455485,833.542004594902,272.196694998479,833.542004594902,272.274184354069L833.542004594902,275.373757566803C833.542004594902,275.95661269515,833.242553960721,276.43165489066,832.875142466673,276.43165489066L823.532696505688,276.43165489066C823.163161159117,276.43165489066,822.865833930924,275.95661269515,822.865834016447,275.373757566803L822.865834016447,272.274184354069C822.865833930924,271.687960650718,823.163161159117,271.216286019336,823.532696505688,271.216286019336z M830.547027451477,269.672960088454L832.286753431606,272.247887094992 830.07970132309,272.783768174428z M824.82995737932,266.148844697477C824.413786404616,266.148844360519 824.07192794924,266.69144284419 824.071928055419,267.352040215545 824.07192794924,268.019385688064 824.413786404616,268.555318996083 824.82995737932,268.555318996083 825.24825388419,268.555318996083 825.585887441956,268.019385688064 825.585887441956,267.352040215545 825.585887441956,266.69144284419 825.24825388419,266.148844360519 824.82995737932,266.148844697477z M833.318534587271,265.022947749046L835.085643934922,267.802586195632 832.742949784489,271.552570690089 832.717461940267,270.935996789765 832.122761785219,270.578855056339 832.120638399887,269.925219080928 831.525938032478,269.638831911794 831.470715998088,268.900964713366 830.975840436839,268.772932580462z M823.532585271641,264.746678806086L832.529276994811,264.746678806086 829.968513570399,268.902486755309 829.858094347714,269.960775962002 823.532585271641,269.960775962002C823.163121978739,269.960775962002,822.865845858557,269.485570341576,822.86584591448,268.902486755309L822.86584591448,265.805050432849C822.865845858557,265.218593082415,823.163121978739,264.746678806086,823.532585271641,264.746678806086z M834.572088571292,263.338396794419C834.668522204295,263.33476940972,834.758985554748,263.383133520967,834.825875484296,263.48631048994L836.076607206985,265.457199186825C836.229498383515,265.693032122054,836.19764569229,266.134376437021,836.008656115669,266.437590037595L835.75171481065,266.851982214467 833.948877205987,264.015249909095 834.207941683976,263.604226923859C834.31424877209,263.433669148019,834.448102957109,263.343060368102,834.572088571292,263.338396794419z" />
      </Path.Data>
    </Path>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Clear" Width="125" Height="25" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:504  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="511.023144" Canvas.Top="260.490909">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ClearScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Clear" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="CLEAR" />
    </Button>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Add" Width="125" Height="25" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:647  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="True" Canvas.Left="654.023144" Canvas.Top="260.490909">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="AddScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Create" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Maintenance_Checkpoint.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="ADD" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseAdd" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Add, Connect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Add">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M689.013792610188,276.476274317046L694.121522277806,276.476274317046 694.098747598536,276.567058604932C693.922818554887,277.295163957374 693.826752773918,278.081275216278 693.826752773918,278.900792185871 693.826752773918,279.720270866158 693.922818554887,280.50631340943 694.098747598536,281.234335004014L694.121495255968,281.325000663425 689.013792610188,281.325000663425C688.655791558748,281.325000663425,688.365189358892,280.883448379373,688.365189272399,280.340389434103L688.365189272399,277.460030190606C688.365189358892,276.916971245336,688.655791558748,276.476274317046,689.013792610188,276.476274317046z M697.75338611999,275.574425765872L697.75338611999,278.215094291734 696.014170881319,278.215094291734 696.014170881319,279.888908937963 697.75338611999,279.888908937963 697.75338611999,282.529405161947 698.855833134857,282.529405161947 698.855833134857,279.888908937963 700.59504837353,279.888908937963 700.59504837353,278.215094291734 698.855833134857,278.215094291734 698.855833134857,275.574425765872z M698.301681248494,273.782349126216C700.163524057778,273.782349126216 701.672993338235,276.073079029645 701.672993338235,278.900638344906 701.672993338235,281.725360832789 700.163524057778,284.017902299039 698.301681248494,284.017902299039 696.439772460895,284.017902299039 694.930594791088,281.725360832789 694.930594791088,278.900638344906 694.930594791088,276.073079029645 696.439772460895,273.782349126216 698.301681248494,273.782349126216z M689.013792610188,270.353063784946L698.089024349987,270.353063784946C698.447016619329,270.353063784946,698.737296219915,270.793713535342,698.737296219915,271.336885981058L698.737296219915,272.138441505284 698.645445845424,272.126017992759C698.531958861342,272.112864590325 698.417302056926,272.106166354746 698.301635761737,272.106166354746 696.759570940753,272.106166354746 695.397086038695,273.296895417163 694.592074907424,275.10458041917L694.551569174652,275.200421972353 689.013792610188,275.200421972353C688.655791558748,275.200421288615,688.365189358892,274.759771538219,688.3651894707,274.215948858028L688.3651894707,271.336885981058C688.365189358892,270.793713535342,688.655791558748,270.353063784946,689.013792610188,270.353063784946z M690.274615238737,265.644162875505C689.869091153828,265.644162875505 689.538612608387,266.145479331492 689.538612833569,266.761651331716 689.538612608387,267.378653560345 689.869091153828,267.878958529084 690.274615238737,267.878958529084 690.68042562,267.878958529084 691.010627056512,267.378653560345 691.010627056512,266.761651331716 691.010627056512,266.145479331492 690.68042562,265.644162875505 690.274615238737,265.644162875505z M689.013792610188,264.338223272281L698.089023449259,264.338223272281C698.447016619329,264.338223463394,698.737296219915,264.778922867148,698.737296219915,265.322118662502L698.737296219915,268.202175317916C698.737296219915,268.746236964403,698.447016619329,269.185922986626,698.089023449259,269.185922986626L689.013792610188,269.185922986626C688.655791558748,269.185922986626,688.365189358892,268.746236964403,688.365189272399,268.202175317916L688.365189272399,265.322118662502C688.365189358892,264.778922867148,688.655791558748,264.338223463394,689.013792610188,264.338223272281z" />
      </Path.Data>
    </Path>
    <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Delete" Width="125" Height="25" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:933  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="940.023144" Canvas.Top="260.490909">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="RemoveScript" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:ScriptCommand />
              </gwx:GwxPick.CommandParameters>
              <gwx:GwxPick.EventBindings>
                <script:ScriptEventBindings>
                  <script:ScriptEventBindings.EventBindings>
                    <x:Array Type="script:ScriptEventBinding">
                      <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Delete" ScriptType="JScriptNet" />
                    </x:Array>
                  </script:ScriptEventBindings.EventBindings>
                </script:ScriptEventBindings>
              </gwx:GwxPick.EventBindings>
            </gwx:GwxPick>
            <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Maintenance_Checkpoint.@@Refresh" Control="True">
              <gwx:GwxPick.CommandParameters>
                <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
              </gwx:GwxPick.CommandParameters>
            </gwx:GwxPick>
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <TextBlock Text="DELETE" />
    </Button>
    <Path Fill="#FFFFFFFF" Name="DatabaseRemove1" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Remove, Delete, Disconnect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Remove">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M966.917984715352,276.521376552366L972.02565018359,276.521376552366 972.002947337369,276.611873675991C971.827013114535,277.339989329052 971.730945081747,278.126110208386 971.730945081747,278.945637142325 971.730945081747,279.76516441813 971.827013114535,280.55124598255 972.002947337369,281.279299073614L972.025728772099,281.37010285358 966.917984715352,281.37010285358C966.559983731467,281.37010285358,966.269381535858,280.928395334061,966.269381580228,280.385355842083L966.269381580228,277.505269233657C966.269381535858,276.962057439789,966.559983731467,276.521376552366,966.917984715352,276.521376552366z M974.978953829785,276.046521772946L974.199390512948,277.230195077442 975.429181985149,279.097120588421 974.199390512948,280.964010886913 974.978953829785,282.147513256992 976.208767595003,280.280622958502 977.438582260948,282.147513256992 978.217988175587,280.964010886913 976.988240613869,279.097120588421 978.217988175587,277.230195077442 977.438582260948,276.046521772946 976.208767595003,277.913447625795z M976.205873556324,273.827450854821C978.067716365607,273.827450854821 979.577185646063,276.118047911451 979.577185646063,278.945654235765 979.577185646063,281.770594666941 978.067716365607,284.063003286503 976.205873556324,284.063003286503 974.343964768722,284.063003286503 972.834787098918,281.770594666941 972.834787098918,278.945654235765 972.834787098918,276.118047911451 974.343964768722,273.827450854821 976.205873556324,273.827450854821z M966.917984715352,270.398165303708L975.993215757086,270.398165303708C976.351208927157,270.398165303708,976.641488527744,270.838846533,976.641488527744,271.381886366845L976.641488527744,272.183184512893 976.549759301153,272.170777751179C976.436269614886,272.157623664203 976.321610333469,272.150925770083 976.205940660551,272.150925770083 974.663837108267,272.150925770083 973.301317978551,273.341669947593 972.496286580901,275.149377623558L972.455507252036,275.245865314694 966.917984715352,275.245865314694C966.559983731467,275.245865314694,966.269381535858,274.80518442727,966.269381580228,274.261153173815L966.269381580228,271.381886366845C966.269381535858,270.838846533,966.559983731467,270.398165303708,966.917984715352,270.398165303708z M968.178807546566,265.689263490756C967.773283349065,265.689263354008 967.442804826143,266.19037475356 967.442804488369,266.806499032415 967.442804826143,267.42345825751 967.773283349065,267.923718369488 968.178807546566,267.923718369488 968.58461792783,267.923718369488 968.914819364339,267.42345825751 968.914819364339,266.806499032415 968.914819364339,266.19037475356 968.58461792783,265.689263354008 968.178807546566,265.689263490756z M966.917984715352,264.383324422979L975.993215757086,264.383324422979C976.351208927157,264.383324481783,976.641488527744,264.82402322433,976.641488527744,265.367052426057L976.641488527744,268.247139273789C976.641488527744,268.791166766687,976.351208927157,269.231024433966,975.993215757086,269.231024775836L966.917984715352,269.231024775836C966.559983731467,269.231024433966,966.269381535858,268.791166766687,966.269381580228,268.247139273789L966.269381580228,265.367052426057C966.269381535858,264.82402322433,966.559983731467,264.383324481783,966.917984715352,264.383324422979z" />
      </Path.Data>
    </Path>
    <Canvas>
      <Path Fill="#FFFFFFFF" Name="DatabaseRefresh" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Refresh, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Refresh">
        <Path.Data>
          <PathGeometry FillRule="EvenOdd" Figures="M542.466852493692,275.781283995835L546.431992616935,275.781283995835C546.207754275025,276.619862149259 546.078385702364,277.52753559729 546.078385702364,278.482320900855 546.078385702364,279.129313877362 546.140913705696,279.754320902585 546.248720957366,280.35106144254L542.466852493692,280.35106144254C542.115401819008,280.35106144254,541.830791434525,279.936484022421,541.83079127118,279.424543566321L541.83079127118,276.71094339515C541.830791434525,276.195862044006,542.115401819008,275.781283995835,542.466852493692,275.781283995835z M551.249613237081,272.943642022405C551.290842489049,272.942071888911,551.332341640174,272.942071888911,551.374380374038,272.943642022405L551.376536549255,272.943642022405 551.380848037383,272.943642022405C551.909021070259,272.949923498467,552.409169430293,273.113237479716,552.864045440361,273.405318422964L552.879135648815,273.417880747034C554.222205160501,274.287842100717 555.153515268012,276.257032246808 555.138424412836,278.534006869288 555.116866325462,281.593004064736 553.398686352158,284.048995887582 551.298927176019,284.017590077405 549.660511673294,283.992465115233 548.276482162073,282.459825151426 547.759087633945,280.336742767139L549.119403960449,279.991270690482C549.500982300986,281.20356385383 550.33528047638,282.051540198305 551.311861855984,282.067243731448 552.659243071371,282.086086903527 553.76086213381,280.509478805468 553.773796813774,278.546569821413 553.78888788453,276.586801418375 552.706671380972,274.978786254032 551.359290165585,274.959942139872 551.245031849794,274.959942139872 551.132929709219,274.972505091997 551.022983959431,274.991348892131L551.020827784221,274.978786254032C550.658652002564,275.047880292532,550.322345796416,275.233179597012,550.029155333862,275.512697274108L550.496966239475,276.156531770076C550.52499199019,276.194219684371 550.535770494944,276.253891979816 550.520679424186,276.304142218181 550.507744744223,276.357533351593 550.4754081521,276.392080684868 550.436603249903,276.395221579914L549.300491420125,276.483159418547 548.291572586102,276.561675828153 548.285105353908,276.561675828153C548.257079603187,276.561675828153 548.233365771747,276.54283202802 548.213963212867,276.514566484831 548.194561085133,276.483159418547 548.185937893298,276.442330923234 548.192405341067,276.398361846905L548.354091104162,275.088708787843 548.58691836157,273.235722965654C548.59338580934,273.179191251225 548.621411560055,273.135221860868 548.65806050261,273.125800117815 548.696864758079,273.113237479716 548.7356694447,273.135221860868 548.757227316498,273.182331832243L549.130182465202,273.980058252379C549.647576993324,273.436724861196 550.261982591275,273.084971308476 550.928128202528,272.978189041655 550.936751394361,272.975048460636 550.945374586197,272.975048460636 550.953997778032,272.975048460636 551.012204592386,272.965626717585 551.068255878247,272.959345241522 551.126462692602,272.953064079485 551.167422476559,272.948353364973 551.208382907243,272.9452121559 551.249613237081,272.943642022405z M542.466718665096,270.00951942802L551.382492007809,270.00951942802C551.733864493654,270.00951942802,552.020556681295,270.424111607394,552.020556681295,270.939150564934L552.020556681295,271.193564947702C551.740337115212,271.124479073896 551.453618843063,271.080542970371 551.160453818296,271.080543284397 549.336780137849,271.080542970371 547.743750377222,272.48127758935 546.846991673283,274.579235953545L542.466718665096,274.579235953545C542.115346416386,274.579235953545,541.830785607479,274.164643774173,541.830785634456,273.652748223892L541.830785634456,270.939150564934C541.830785607479,270.424111607394,542.115346416386,270.00951942802,542.466718665096,270.00951942802z M543.706208748812,265.571651408494C543.307413062476,265.571651408494 542.981909548525,266.042430595186 542.981909548525,266.623058488016 542.981909548525,267.203686349442 543.307413062476,267.677604264396 543.706208748812,267.677604264396 544.10500421957,267.677604264396 544.428352032574,267.203686349442 544.428352032574,266.623058488016 544.428352032574,266.042430595186 544.10500421957,265.571651408494 543.706208748812,265.571651408494z M542.466708791789,264.33820948904L551.382485325002,264.33820948904C551.733856301826,264.33820948904,552.020558190315,264.755633781005,552.020558190315,265.267214017077L552.020558190315,267.9820415302C552.020558190315,268.493621797677,551.733856301826,268.90790748699,551.382485325002,268.90790748699L542.466708791789,268.90790748699C542.115337491601,268.90790748699,541.830791432385,268.493621797677,541.83079127118,267.9820415302L541.83079127118,265.267214017077C541.830791432385,264.755633781005,542.115337491601,264.33820948904,542.466708791789,264.33820948904z" />
        </Path.Data>
      </Path>
    </Canvas>
  </Canvas>
  <ig:GdxViewControl FileVersion="10.97.020.00" FontFamily="Segoe UI" FontSize="12" IsTabStop="True" Name="default_grid" Width="1100" Height="419.255255" VerticalAlignment="Bottom" gwx:GwxProperties.Description="Grid Size=H:443,W:1100&#xD;&#xA;Position=X:0,Y:300&#xD;&#xA;Grid Header Font=Style :Calibri,Size:17,Color:White&#xD;&#xA;Grid Header Background color=R :0,G : 24,B :72&#xD;&#xA;Grid Text Font=Style :Calibri,Size:16,Color:White&#xD;&#xA;Grid Scrolbar Foreground color=R :0,G : 24,B :72&#xD;&#xA;" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="0" Canvas.Top="304.631751">
    <ig:GdxViewControl.DataDictionaryRepository>
      <ig13:DataDictionary Name="Asset_Status" Key="11139557">
        <ig13:TextDataTranslation Text="Enable" FilterKey="35955500" />
        <ig13:TextDataTranslation Text="Disable" FilterKey="18984797" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="Tool_Allocation" Key="64349806">
        <ig13:TextDataTranslation Text="NotApplicable" FilterKey="62472706" />
        <ig13:TextDataTranslation Text="Applicable" FilterKey="17076602" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="New Text Translation" Key="48165881" />
    </ig:GdxViewControl.DataDictionaryRepository>
    <ig:GdxViewControl.FiltersRepository>
      <igd:GdxFilter Key="35955500" Expression="x={{AssetStatus}} == 1" Name="AssetStat_En" />
      <igd:GdxFilter Key="18984797" Expression="x={{AssetStatus}}==0" Name="AssetStat_Di" />
      <igd:GdxFilter Key="62472706" Expression="x={{ToolAllocation}}==0" Name="Tool_Alloc_NA" />
      <igd:GdxFilter Key="17076602" Expression="x={{ToolAllocation}}==1" Name="Tool_Alloc_A" />
    </ig:GdxViewControl.FiltersRepository>
    <ig:GdxViewControl.SubscriptionsRepository>
      <igd:GdxSubscription Key="32833728" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="LineID" />
          <igd:GdxDataField Key="LineName" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssetMake" />
          <igd:GdxDataField Key="AssetController" />
          <igd:GdxDataField Key="InstallationDate" BuiltInType="DateTime" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridAssetInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="35581412" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="ProcessName" />
          <igd:GdxDataField Key="ProcessID" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssetStatus" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:Cumi_LE_Line.GridmAssetInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="60518608" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="ProcessName" />
          <igd:GdxDataField IsReadOnly="True" Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField IsPrimaryKey="True" Key="ProcessID" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssetStatus" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CUMI_LE_Line.GridmAssetInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="20630641" Name="New Subscription" />
      <igd:GdxSubscription Key="57837606" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField IsPrimaryKey="True" Key="checkpoint_id" BuiltInType="Int32" />
          <igd:GdxDataField IsPrimaryKey="True" Key="plant_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="shop_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="line_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="line_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="stage_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="stage_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="checklist_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="checklist_name" />
          <igd:GdxDataField Key="checklist_type" />
          <igd:GdxDataField Key="checkpoint_name" />
          <igd:GdxDataField Key="checkpoint_method" />
          <igd:GdxDataField Key="process" />
          <igd:GdxDataField Key="value_lower_limit" BuiltInType="Double" />
          <igd:GdxDataField Key="value_upper_limit" BuiltInType="Double" />
          <igd:GdxDataField Key="value_units" />
          <igd:GdxDataField Key="estimated_completion_time_in_minutes" BuiltInType="Int32" />
          <igd:GdxDataField Key="created_by" />
          <igd:GdxDataField Key="created_on" BuiltInType="DateTime" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Maintenance_Checkpoint</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
    </ig:GdxViewControl.SubscriptionsRepository>
    <ig:GdxViewControl.Header>
      <TextBlock Text="PM CheckPoint Configuration" FontFamily="Calibri" FontStyle="Normal" FontWeight="Bold" FontSize="18" Foreground="#FF001848" Padding="0,0,0,0" TextAlignment="Center" Visibility="Visible" />
    </ig:GdxViewControl.Header>
    <ig:GdxViewControl.Items>
      <iwc:MultipleTabItem IsSelected="True" Header="Tab" FontFamily="Calibri" FontSize="16">
        <ig:GdxGridView HeaderBackground="#FF001848" HeaderBorderBrush="#FFFFFFFF" HeaderCellBorderThickness="0.75,0.75,0.75,0.75" HeaderFontFamily="Calibri" HeaderFontSize="17" HeaderMouseOverForeground="#FFFFFFFF" HeaderMouseOverBorderBrush="#FF000000" HeaderSelectedForeground="#FFFFFFFF" HeaderSelectedBorderBrush="#FF000000" GroupHeaderBorderBrush="#FFFFFFFF" GroupHeaderForeground="#FFFFFFFF" RowHeaderBackground="#FFD8D8D8" RowHeaderBorderBrush="#FFD8D8D8" RowHeaderCellBorderBrush="#FF626262" RowHeaderBorderThickness="0,0,1,2" RowHeight="25" ScrollBarBackground="#FFD8D8D8" ScrollBarForeground="#FF001848" ScrollBarMouseOverForeground="#FF171F31" ScrollBarMousePressedForeground="#FF171F31" ScrollBarBorderBrush="#FF373D54" ScrollBarMouseOverBorderBrush="#FF229EC8" DateTimeFormat="d" DoubleFormat="N0" SubscriptionID="57837606" AllowPaging="False" BorderBrush="#FFA5B6CB" BorderThickness="0,0,0,0" Background="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Uid="local:GdxView_1">
          <ig:GdxGridView.HeaderMouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF8993A2" Offset="0" />
                <GradientStop Color="#FF545F6D" Offset="0.5" />
                <GradientStop Color="#FF0C1C32" Offset="0.51" />
                <GradientStop Color="#FF132F54" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderMouseOverBackground>
          <ig:GdxGridView.HeaderSelectedBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderSelectedBackground>
          <ig:GdxGridView.GroupHeaderBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF393F4B" Offset="0" />
                <GradientStop Color="#FF121212" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.GroupHeaderBackground>
          <ig:GdxGridView.MouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.3">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.MouseOverBackground>
          <ig:GdxGridView.SelectionBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.9">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.SelectionBackground>
          <ig:GdxGridView.Columns>
            <ig:GdxColumn Key="checkpoint_id" Format="{x:Null}" Text="Check Point ID" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="plant_name" Index="1" Format="{x:Null}" Text="Plant Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="shop_name" Index="2" Format="{x:Null}" Text="Shop Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="line_id" Index="3" IsVisible="False" Format="{x:Null}" Text="line_id" />
            <ig:GdxColumn Key="line_name" Index="4" Format="{x:Null}" Text="Line Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="stage_id" Index="5" IsVisible="False" Format="{x:Null}" Text="stage_id" />
            <ig:GdxColumn Key="stage_name" Index="6" Format="{x:Null}" Text="Stage Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="checklist_id" Index="7" IsVisible="False" Format="{x:Null}" Text="Checklist ID" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="checklist_name" Index="8" Format="{x:Null}" Text="Checklist Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="checklist_type" Index="9" IsVisible="False" Format="{x:Null}" Text="checklist_type" />
            <ig:GdxColumn Key="checkpoint_name" Index="10" Format="{x:Null}" Text="Checkpoint Name" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="checkpoint_method" Index="11" Format="{x:Null}" Text="Method" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="process" Index="12" Format="{x:Null}" Text="Process" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="value_lower_limit" Index="13" Format="{x:Null}" Text="Lower Limit" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="value_upper_limit" Index="14" Format="{x:Null}" Text="Upper Limit" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="value_units" Index="15" Format="{x:Null}" Text="Units" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="estimated_completion_time_in_minutes" Index="16" Format="{x:Null}" Text="Estimated Completion Time" TextAlignment="Center" IsStar="True" />
            <ig:GdxColumn Key="created_by" Index="17" IsVisible="False" Format="{x:Null}" Text="created_by" />
            <ig:GdxColumn Key="created_on" Index="18" IsVisible="False" Format="{x:Null}" Text="created_on" />
          </ig:GdxGridView.Columns>
        </ig:GdxGridView>
      </iwc:MultipleTabItem>
    </ig:GdxViewControl.Items>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridScript" ShowToolTip="False" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Grid" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </ig:GdxViewControl>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="540" Canvas.Top="55">
    <TextBlock Text="Stage Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="plant_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="77" Canvas.Top="15">
    <TextBlock Text="Plant Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="540" Canvas.Top="15">
    <TextBlock Text="Shop Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="77" Canvas.Top="55">
    <TextBlock Text="Line Name" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="RowID" Width="250" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="1200" Canvas.Top="173.791667">1</TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="checklist_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="77" Canvas.Top="95">
    <TextBlock Text="Checklist Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="Specification" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="5899" Canvas.Top="175">
    <TextBlock Text="Specification UL" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="stage_name" Width="250" Height="25" Canvas.Left="680" Canvas.Top="55">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Stage_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="plant_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Plant_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="shop_name" Width="250" Height="25" Canvas.Left="680" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Shop_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="line_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="55">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Line_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_name_LB" Width="24.971297" Height="15" Canvas.Left="940" Canvas.Top="55">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_name_LB" Width="24.971297" Height="15" Canvas.Left="940" Canvas.Top="15">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="checklist_name_LB" Width="24.971297" Height="15" Canvas.Left="490" Canvas.Top="95">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="plant_name_LB" Width="24.971297" Height="15" Canvas.Left="490" Canvas.Top="15">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_name_LB" Width="24.971297" Height="15" Canvas.Left="490" Canvas.Top="55">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="checkpoint_type_LB" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="490" Canvas.Top="95">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="frequency_LB" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="1010" Canvas.Top="175">
    <TextBlock Text="*" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="checklist_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Checklist_Name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <TextBox FontFamily="Segoe UI" FontSize="12" Name="CurrentUser" Width="250" Height="25" Visibility="Hidden" Canvas.Left="246.621622" Canvas.Top="219.746667">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" DataSource="localsim::currentUser" />
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="CurrentUser_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>*.??</TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="checkpoint_name_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="540" Canvas.Top="95">
    <TextBlock Text="Checkpoint Name" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="checkpoint_name" Width="391.208852" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="680" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="checkpoint_name_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="checkpoint_name_LB" Width="24.971297" Height="15" Canvas.Left="1073.796913" Canvas.Top="96.018182">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="method_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="77" Canvas.Top="135">
    <TextBlock Text="Method" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="units" Width="250" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="680" Canvas.Top="175">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="units_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="method_LB" Width="24.971297" Height="15" Canvas.Left="490" Canvas.Top="135">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="process_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="540" Canvas.Top="135">
    <TextBlock Text="Process" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="process" Width="250" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="680" Canvas.Top="135">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="process_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="process_LB" Width="24.971297" Height="15" Canvas.Left="938.648648" Canvas.Top="138.401869">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="estimated_time_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="76.756508" Canvas.Top="176.872727">
    <TextBlock Text="Estimated Time(min)" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="estimated_time" Width="250" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="232" Canvas.Top="175">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="estimated_time_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="estimated_time_LB" Width="24.971297" Height="40.549549" Canvas.Left="490" Canvas.Top="168.441442">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="value_LL_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="77" Canvas.Top="215">
    <TextBlock Text="Value(Lower Limit)" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="value_LL" Width="250" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="232" Canvas.Top="215">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="checklist_name_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="value_UL_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="540" Canvas.Top="215">
    <TextBlock Text="Value(Upper Limit)" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="value_UL" Width="250" Height="25" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="680" Canvas.Top="215">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="checklist_name_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="units_label" Height="25" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:77  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="540" Canvas.Top="175">
    <TextBlock Text="Value(Units)" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="method" Width="250" Height="25" Canvas.Left="232" Canvas.Top="135">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_Method" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="4,2,5,3" Name="checkpoint_id" Width="38.918919" Height="25" Visibility="Hidden" gwx:GwxProperties.Description="Size=H:25,W:250&#xD;&#xA;Background color=White&#xD;&#xA;Text color=Black&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:232  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="False" Canvas.Left="518.243244" Canvas.Top="137.706927">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="estimated_time_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
</Canvas>