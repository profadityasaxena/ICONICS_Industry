<?xml version="1.0" encoding="utf-8"?>
<Canvas Background="#FF243782" Width="1100" Height="728" gwx:GwxProperties.Description="Display Size: H=1100 W:728" gwx:GwxProperties.ShowDescriptionInToolTip="True" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:gwx="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCore" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:iwm="clr-namespace:Ico.Windows.Media;assembly=IcoWPF" xmlns:script="clr-namespace:Ico.Script;assembly=IcoScriptEngine" xmlns:ic="clr-namespace:Ico.Collections;assembly=IcoCollections" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ig="clr-namespace:Ico.Gdx;assembly=GdxViewControl" xmlns:iws="clr-namespace:Ico.WPF.Specialized;assembly=IcoWPFSpecialized" xmlns:ig13="clr-namespace:Ico.Gdx;assembly=GdxClientCommon" xmlns:igd="clr-namespace:Ico.Gdx.Data;assembly=GdxClientCommon" xmlns:iwc="clr-namespace:Ico.Windows.Controls;assembly=IcoWPF" xmlns:gwxcmd="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCoreCommands" xmlns:icc="clr-namespace:Ico.Commanding.Commands;assembly=IcoCommands">
  <Canvas.Resources>
    <BitmapImage x:Key="GwxThumbnailImageKey">
      <iwm:BitmapImageInfo.StreamSource>
        <iwm:Base64Stream Data="" />
      </iwm:BitmapImageInfo.StreamSource>
    </BitmapImage>
  </Canvas.Resources>
  <gwx:GwxDocument.GwxDocument>
    <gwx:GwxDocument FileVersion="10.97.020.00" IsScalable="True" MaximumZoom="1" MinimumZoom="1" PanEnabled="False" PreferredStretch="Fill" ScanRate="500">
      <gwx:GwxDocument.ScriptCodeManager>
        <script:ScriptCodeManager>
          <script:ScriptCodeManager.Scripts>
            <script:ScriptCode Name="ThisDisplayCode" Type="JScriptNet">
              <x:XData><![CDATA[
function ExcelCode(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Action_ID" Type="JScriptNet">
              <x:XData><![CDATA[function Action_ID(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var actiontxt: System.Windows.Controls.TextBox=ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
	if(actiontxt.Text!=""){
		if(!long.TryParse(actiontxt.Text)){
			MessageBox.Show("Please enter number only!")
			actiontxt.Text="";
		}
	}
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="actionCode" Type="JScriptNet">
              <x:XData><![CDATA[
function action_id_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var action_id_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_id_empty_label");
	action_id_empty_label.Visible          = false
	Action_ID();
}

function action_description_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var action_description_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_description_empty_label");
	action_description_empty_label.Visible = false
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ClearCode" Type="JScriptNet">
              <x:XData><![CDATA[function Clear(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){		
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
	var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
	var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
	var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
	var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
	var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
	// [Array Reset] Collection arrays are reset here to default values
	shop_name.Items.Clear();
	line_name.Items.Clear();
	stage_name.Items.Clear();
	equipment_name.Items.Clear();
	equipment_type.Items.Clear();
	trigger_event.Items.Clear();
	action_enabled.IsChecked= false;

	//[Variable Reset] Variables are reset here to default values
	shop_name.SelectedIndex          = 0;
	line_name.SelectedIndex 	     = 0;
	stage_name.SelectedIndex         = 0;
	equipment_name.SelectedIndex     = 0;
	equipment_type.SelectedIndex     = 0;
	trigger_event.SelectedIndex      = 0;
	action_id.Clear();
	action_description.Clear();
		
	//[Inline Test Statemnt] MessageBox.Show('Clearing all fields');
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Create" Type="JScriptNet">
              <x:XData><![CDATA[function Create(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]
		//	var Read : System.Data.SqlClient.SqlDataReader;	

			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Create';
			
			// [Provisioning Security System]
			var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
			//MessageBox.Show(logged_in_user.Text);

			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var shop_name               		: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
			var line_name       				: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			var stage_name       				: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
			var equipment_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
			var equipment_type       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
			var action_description       		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
			var trigger_event       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
			var action_id       				: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
			var action_enabled	            	: System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
			var shop_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label               : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var action_id_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_id_empty_label");
			var trigger_event_empty_label       : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("trigger_event_empty_label");
			var action_description_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_description_empty_label");
			
			
			// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= logged_in_user.Text;	
					
			//[To Check value in checkbox]
			var action_enabled_int = -1;
			if(action_enabled.IsChecked == true){
				action_enabled_int =1;
			}
		    else {
				action_enabled_int =0;
			}
	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			var query_string : String = "Exec [dbo].[SP_Config_Action] ";	
			query_string += "@shop_name	         			= '"+shop_name.Text+"',";	
			query_string += "@line_name	         			= '"+line_name.Text+"',";
			query_string += "@stage_name			    	= '"+stage_name.Text+"',";
			query_string += "@equipment_name		        = '"+equipment_name.Text+"',";
			query_string += "@equipment_type			    = '"+equipment_type.Text+"',";
			query_string += "@action_description			= '"+action_description.Text+"',";
			query_string += "@trigger_event  			   	= '"+trigger_event.Text+"',";
			query_string += "@action_id				        = '"+action_id.Text+"',";
			query_string += "@action_enabled				= '"+action_enabled_int+"',";
			query_string += "@created_by				    = '"+created_by+"',";
			query_string += "@ActionOp 						= '"+ActionOp+"'";
			//[Inline Test Statement] 
					MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( shop_name.Text == ""|| line_name.Text == ""|| equipment_name.Text =="" || equipment_type.Text == ""|| action_description.Text ==""||trigger_event.Text ==""||stage_name.Text ==""||action_id.Text ==""||action_enabled ==""||created_by.Text=="" ){
					//MessageBox.Show("Please fill in all the required values!")
				
					
				if(shop_name.Text == "")
				{shop_empty_label.Visible = true}
				else
				{shop_empty_label.Visible = false}
				
				if(line_name.Text == "")
				{line_empty_label.Visible = true}
				else					
				{line_empty_label.Visible = false}
        		
				if(stage_name.Text == "")
				{stage_empty_label.Visible = true}
				else
				{stage_empty_label.Visible = false}
				
				if(equipment_name.Text == "")
				{equipment_name_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(equipment_type.Text == "")
				{equipment_type_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(action_id.Text == "")
				{action_id_empty_label.Visible = true}
				else
				{action_id_empty_label.Visible = false}
				
				if(trigger_event.Text == "")
				{trigger_event_empty_label.Visible = true}
				else
				{trigger_event_empty_label.Visible = false}
				
				if(action_description.Text == "")
				{action_description_empty_label.Visible = true}
				else
				{action_description_empty_label.Visible = false}


					
					
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Database_Connection" Type="JScriptNet">
              <x:XData><![CDATA[
const DB_SERVER               : String = "DESKTOP-BI1L6JI\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "sa";
const DB_PASSWORD             : String = "sql_1234";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Delete" Type="JScriptNet">
              <x:XData><![CDATA[function Delete(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]
		//	var Read : System.Data.SqlClient.SqlDataReader;	

			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Delete';
			
			// [Provisioning Security System]
			var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
			//MessageBox.Show(logged_in_user.Text);

			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var shop_name               		: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
			var line_name       				: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			var stage_name       				: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
			var equipment_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
			var equipment_type       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
			var action_description       		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
			var trigger_event       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
			var action_id       				: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
			var action_enabled	            	: System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
			var shop_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label               : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var action_id_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_id_empty_label");
			var trigger_event_empty_label       : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("trigger_event_empty_label");
			var action_description_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_description_empty_label");
			
			
			// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= logged_in_user.Text;	
					
			//[To Check value in checkbox]
			var action_enabled_int = -1;
			if(action_enabled.IsChecked == true){
				action_enabled_int =1;
			}
		    else {
				action_enabled_int =0;
			}
	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			var query_string : String = "Exec [dbo].[SP_Config_Action] ";	
			query_string += "@shop_name	         			= '"+shop_name.Text+"',";	
			query_string += "@line_name	         			= '"+line_name.Text+"',";
			query_string += "@stage_name			    	= '"+stage_name.Text+"',";
			query_string += "@equipment_name		        = '"+equipment_name.Text+"',";
			query_string += "@equipment_type			    = '"+equipment_type.Text+"',";
			query_string += "@action_description			= '"+action_description.Text+"',";
			query_string += "@trigger_event  			   	= '"+trigger_event.Text+"',";
			query_string += "@action_id				        = '"+action_id.Text+"',";
			query_string += "@action_enabled				= '"+action_enabled_int+"',";
			query_string += "@created_by				    = '"+created_by+"',";
			query_string += "@ActionOp 						= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( shop_name.Text == ""|| line_name.Text == ""|| equipment_name.Text =="" || equipment_type.Text == ""|| action_description.Text ==""||trigger_event.Text ==""||stage_name.Text ==""||action_id.Text ==""||action_enabled ==""||created_by.Text=="" ){
					//MessageBox.Show("Please fill in all the required values!")
				
					
				if(shop_name.Text == "")
				{shop_empty_label.Visible = true}
				else
				{shop_empty_label.Visible = false}
				
				if(line_name.Text == "")
				{line_empty_label.Visible = true}
				else					
				{line_empty_label.Visible = false}
        		
				if(stage_name.Text == "")
				{stage_empty_label.Visible = true}
				else
				{stage_empty_label.Visible = false}
				
				if(equipment_name.Text == "")
				{equipment_name_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(equipment_type.Text == "")
				{equipment_type_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(action_id.Text == "")
				{action_id_empty_label.Visible = true}
				else
				{action_id_empty_label.Visible = false}
				
				if(trigger_event.Text == "")
				{trigger_event_empty_label.Visible = true}
				else
				{trigger_event_empty_label.Visible = false}
				
				if(action_description.Text == "")
				{action_description_empty_label.Visible = true}
				else
				{action_description_empty_label.Visible = false}


					
					
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_equipment_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_equipment_name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
		var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
		var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
		var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
		var equipment_name_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
		equipment_name_empty_label.Visible     = false

		// [Array Reset] Collection arrays are reset here to default values
		equipment_name.Items.Clear();
		trigger_event.Items.Clear();
			
		// [Setting Index] Setting Index to Zero	
		equipment_name.SelectedIndex 	  = 0;
		trigger_event.SelectedIndex 	  = 0;	
		
		
        if (equipment_type.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct equipment_name from Config_Equipment WHERE equipment_id IN (SELECT equipment_id from Config_Equipment WHERE equipment_type = '"+equipment_type.Text+"' AND stage_id IN (SELECT stage_id from Config_Stage WHERE stage_name = '"+stage_name.Text+"'))", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    equipment_name.Items.Add(DataReader["equipment_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a Equipment Type first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_equipment_type" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_equipment_type(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
		var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
		var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
		var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
		var equipment_type_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
		equipment_type_empty_label.Visible     = false
		
		// [Array Reset] Collection arrays are reset here to default values
		equipment_type.Items.Clear();
		equipment_name.Items.Clear();
		trigger_event.Items.Clear();
			
		// [Setting Index] Setting Index to Zero	
		equipment_type.SelectedIndex 	  = 0;
		equipment_name.SelectedIndex 	  = 0;
		trigger_event.SelectedIndex 	  = 0;				

        
            var DataReader : System.Data.SqlClient.SqlDataReader;

            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct equipment_type from Config_Equipment WHERE stage_id IN (SELECT stage_id from Config_Stage WHERE stage_name = '"+stage_name.Text+"')", connection);
			
			try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    equipment_type.Items.Add(DataReader["equipment_type"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_line_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_line_name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
        // [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
		var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
		var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
		var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
		var line_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
		line_empty_label.Visible               = false

		// [Array Reset] Collection arrays are reset here to default values
		line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_type.Items.Clear();
		equipment_name.Items.Clear();
		trigger_event.Items.Clear();
			
		// [Setting Index] Setting Index to Zero	
		line_name.SelectedIndex 	      = 0;	
		stage_name.SelectedIndex 	      = 0;	
		equipment_type.SelectedIndex 	  = 0;
		equipment_name.SelectedIndex 	  = 0;
		trigger_event.SelectedIndex 	  = 0;				
		
		if (shop_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct line_name from Config_Line WHERE shop_name = '"+shop_name.Text+"'", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    line_name.Items.Add(DataReader["line_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a shop first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_shop_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_shop_name(sender : System.Object, e : System.EventArgs)
{
	   var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		connection.Open();

		// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
		var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
		var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
		var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
		var shop_empty_label            : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		shop_empty_label.Visible               = false

		
		// [Array Reset] Collection arrays are reset here to default values
		shop_name.Items.Clear();
	    line_name.Items.Clear();
		stage_name.Items.Clear();
		equipment_type.Items.Clear();
		equipment_name.Items.Clear();
		trigger_event.Items.Clear();
			
		// [Setting Index] Setting Index to Zero	
		shop_name.SelectedIndex 	      = 0;	
		line_name.SelectedIndex 	      = 0;	
		stage_name.SelectedIndex 	      = 0;	
		equipment_type.SelectedIndex 	  = 0;
		equipment_name.SelectedIndex 	  = 0;
		trigger_event.SelectedIndex 	  = 0;			
			
		var DataReader : System.Data.SqlClient.SqlDataReader;
		var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct shop_name from Config_Shop ", connection);
		
		try{
			DataReader=RetrieveDataCmd.ExecuteReader();
            while(DataReader.Read())
	           {
		         shop_name.Items.Add(DataReader["shop_name"]);
	           }
	           DataReader.Close();			
			   connection.Close()
			
		}catch(ex:Exception){
			MessageBox.Show(ex);
		}
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_stage_name" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_stage_name(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
       // [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
		var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
		var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
		var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
 		var stage_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
        stage_empty_label.Visible              = false
		
		// [Array Reset] Collection arrays are reset here to default values
		stage_name.Items.Clear();
		equipment_type.Items.Clear();
		equipment_name.Items.Clear();
		trigger_event.Items.Clear();
			
		// [Setting Index] Setting Index to Zero	
		stage_name.SelectedIndex 	      = 0;	
		equipment_type.SelectedIndex 	  = 0;
		equipment_name.SelectedIndex 	  = 0;
		trigger_event.SelectedIndex 	  = 0;			

        if (line_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT distinct stage_name from Config_Stage WHERE line_id IN ( SELECT line_id from Config_Line WHERE line_name = '"+line_name.Text+"')", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();

                while(DataReader.Read())
                {
                    stage_name.Items.Add(DataReader["stage_name"]);
                }
                DataReader.Close();
                connection.Close()
                
            }catch(ex:Exception){
                MessageBox.Show(ex);
            }
        } else {
            MessageBox.Show("You must select a line first");
        }	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Dropdown_trigger_event" Type="JScriptNet">
              <x:XData><![CDATA[function Dropdown_trigger_event(sender : System.Object, e : System.EventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();// [Variable Declaration] Creating holder variables that will hold the user input values in the script
		var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
		var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
		var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
		var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
		var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
		var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
		var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
		var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
		var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
		var trigger_event_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("trigger_event_empty_label");
		trigger_event_empty_label.Visible     = false;				
		
		// [Array Reset] Collection arrays are reset here to default values
		trigger_event.Items.Clear();

		// [Setting Index] Setting Index to Zero
		trigger_event.SelectedIndex  = 0;
			
			if (equipment_name.Text != "") {
            var DataReader : System.Data.SqlClient.SqlDataReader;
            var RetrieveDataCmd: System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand("SELECT  event_name from Config_Event WHERE event_id IN( SELECT event_id from Config_Event WHERE equipment_id IN(SELECT equipment_id FROM Config_Equipment WHERE equipment_name = '"+equipment_name.Text+"'))", connection);
            
            try{
                DataReader=RetrieveDataCmd.ExecuteReader();
                while(DataReader.Read())
	                {
	                    trigger_event.Items.Add(DataReader["event_name"]);
	                }
                DataReader.Close();
                connection.Close()
                
	           	   } catch(ex:Exception){
			                MessageBox.Show(ex);
	            		}
			 	} else {
		            	MessageBox.Show("You must select a Equipment Name first");
		        	}
		        	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ExcelCode" Type="JScriptNet">
              <x:XData><![CDATA[
function Excel_Upload(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	try
	{
		// Create an object
		var  uploadUtil = new  DaliExcelUploadLib.ExcelUploadUtil();
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
			
		//'MANDATORY FIELD' Set the connection string
		uploadUtil.DbConnectionString = connection_string;
       
		//'MANDATORY FIELD' Set the data folder where the file(s) will be found.
		uploadUtil.DataFileFolder = "D:\\Excel_Upload_Files";
		
		//'MANDATORY FIELD' Set the Excel file name to be uploaded.
        uploadUtil.DataFileName = "File_Config_Activities";
		
		//'MANDATORY FIELD' Set the Target Interface table name.
         uploadUtil.InterfaceTableName = "Excel_Interface_Activities_Configuration";
		 
		//'MANDATORY FIELD' Set the Stored procedure name.
       	uploadUtil.StoredProcedureName = "SP_Excel_Upload_for_Activities";
				
		//'Optional' Set true if you want the user to choose an excel file from the disk. 
        uploadUtil.chooseFileFromDrive = true;

		//'Optional' Set true if you want the user to choose multiple excel files.
        uploadUtil.uploadMultipleDataFiles = false;		
		
		//'CALL' this method reads and uploads the file to the sql server.
        uploadUtil.ReadDataFiles();

        //'Optional'  uploadUtil.Log  returns the error log , you can prompt it to the user.
		MessageBox.Show(uploadUtil.Log);
	}
	catch(e:Exception)
	{
		MessageBox.Show (e.Message);
	}
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Gridcode" Type="JScriptNet">
              <x:XData><![CDATA[function Grid(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var shop_name               	: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
	var line_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
	var stage_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
	var equipment_name       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
	var equipment_type       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
	var action_description       	: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
	var trigger_event       		: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
	var action_id       			: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
	var action_enabled	            : System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
	
	//[Grid Selection Code]
	var gdxViewer		: Ico.Gdx.GdxViewControl = Ico.Gdx.GdxViewControl(ThisConfiguration.GetObjectByName("DefaultGrid").ToDependencyObject());
	var tab_list 		: ItemsControl = ItemsControl(gdxViewer.Items[0]);
	var grid_list 		: Ico.Gdx.GdxGridView = Ico.Gdx.GdxGridView(tab_list.Items[0]);
	var Row_Selected 	: DataRow;
	Row_Selected = grid_list.GetHighlightedRow();
		
	if(grid_list.GetHighlightedRow() != null)
	{
		        Dropdown_shop_name();
				shop_name.SelectedValue         = Row_Selected.Item[13];

				Dropdown_line_name();
				line_name.SelectedValue         = Row_Selected.Item[12];
				
				Dropdown_stage_name();
				stage_name.SelectedValue        = Row_Selected.Item[10];	
				
				Dropdown_equipment_type();
				equipment_type.SelectedValue    = Row_Selected.Item[8];
				
				Dropdown_equipment_name();
				equipment_name.SelectedValue    = Row_Selected.Item[7];					
				
				action_id.Text                   = Row_Selected.Item[1];
				
				Dropdown_trigger_event();
				trigger_event.SelectedValue    = Row_Selected.Item[5];
				
				action_description.Text          = Row_Selected.Item[2];
				
				if (Row_Selected.Item[3] == 1) {
					action_enabled.IsChecked = true;
				} else {
					action_enabled.IsChecked = false;
				}		
	
    
	}
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="JScriptDotNetGlobalVariablesCode" Type="JScriptNet" EditorBrowsable="Never">
              <x:XData><![CDATA[
var ThisWindow : Ico.Gwx.GwxRuntimeViewControl;
var ThisDocument : Ico.Gwx.GwxDocument;
var ThisConfiguration : Ico.Gwx.GwxConfiguration;
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="PLC_Download_Confirm" Type="JScriptNet">
              <x:XData><![CDATA[ 
function PLC_Download_Confirm(sender : System.Object, e : System.EventArgs)
{
	//declare variables

    var plc_confirm : GwxDynamic = ThisConfiguration.GetDynamicObjectByName("plc_confirmation_pp"); 
    //read values and output into a message box

    //MessageBox.Show(plc_confirm.GetValueOfPrimaryDataSource());
    if (plc_confirm.GetValueOfPrimaryDataSource() == 1){
        MessageBox.Show("[Notification] : Configuration download has been confirmed by the PLC");
        plc_confirm.WriteValueToPrimaryDataSource(0); 
    }
		var plc_confirm2 : GwxDynamic = ThisConfiguration.GetDynamicObjectByName("plc_confirmation_pp2"); 
    //read values and output into a message box

    //MessageBox.Show(plc_confirm.GetValueOfPrimaryDataSource());
    if (plc_confirm2.GetValueOfPrimaryDataSource() == 1){
        MessageBox.Show("[Notification] : Configuration download has been confirmed by the PLC of SG2");
        plc_confirm2.WriteValueToPrimaryDataSource(0);
    }

		
}

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="TheDisplayCode" Type="JScriptNet">
              <x:XData><![CDATA[function ThisDisplay_AnimationStarted(sender : System.Object, e : System.EventArgs)
{
	        Clear();
            ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","Action Configuration")
	        
		    var shop_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label               : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var action_id_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_id_empty_label");
			var trigger_event_empty_label      	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("trigger_event_empty_label");
			var action_description_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_description_empty_label");
			
			shop_empty_label.Visible               = false
	        line_empty_label.Visible               = false
            stage_empty_label.Visible              = false
	        equipment_name_empty_label.Visible     = false
			equipment_type_empty_label.Visible     = false
			action_id_empty_label.Visible          = false
			trigger_event_empty_label.Visible      = false
			action_description_empty_label.Visible = false
			

}

function ThisDisplay_AnimationStopped(sender : System.Object, e : System.EventArgs)
{

			ThisWindow.FwxClientWrapper.WriteAsync("@rgs64:headerReg.Value","")	
			
			var shop_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label               : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var action_id_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_id_empty_label");
			var trigger_event_empty_label      	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("trigger_event_empty_label");
			var action_description_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_description_empty_label");
			
			shop_empty_label.Visible               = false
	        line_empty_label.Visible               = false
            stage_empty_label.Visible              = false
	        equipment_name_empty_label.Visible     = false
			equipment_type_empty_label.Visible     = false
			action_id_empty_label.Visible          = false
			trigger_event_empty_label.Visible      = false
			action_description_empty_label.Visible = false
			

}






]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Update" Type="JScriptNet">
              <x:XData><![CDATA[function Update(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]
		//	var Read : System.Data.SqlClient.SqlDataReader;	

			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Update';
			
			// [Provisioning Security System]
			var logged_in_user : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("logged_in_user").ToDependencyObject();
			//MessageBox.Show(logged_in_user.Text);

			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var shop_name               		: System.Windows.Controls.ComboBox  = ThisConfiguration.GetObjectByName("shop_name").ToDependencyObject();
			var line_name       				: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("line_name").ToDependencyObject();
			var stage_name       				: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("stage_name").ToDependencyObject();	
			var equipment_name       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_name").ToDependencyObject();
			var equipment_type       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("equipment_type").ToDependencyObject();
			var action_description       		: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_description").ToDependencyObject();
			var trigger_event       			: System.Windows.Controls.ComboBox	= ThisConfiguration.GetObjectByName("trigger_event").ToDependencyObject();
			var action_id       				: System.Windows.Controls.TextBox	= ThisConfiguration.GetObjectByName("action_id").ToDependencyObject();
			var action_enabled	            	: System.Windows.Controls.CheckBox	= ThisConfiguration.GetObjectByName("action_enabled").ToDependencyObject();
			var shop_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("shop_empty_label");
		    var line_empty_label                : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("line_empty_label");
			var stage_empty_label               : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("stage_empty_label");
			var equipment_name_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_name_empty_label");
			var equipment_type_empty_label      : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("equipment_type_empty_label");
			var action_id_empty_label           : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_id_empty_label");
			var trigger_event_empty_label       : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("trigger_event_empty_label");
			var action_description_empty_label  : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("action_description_empty_label");
			
			
			// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= logged_in_user.Text;	
					
			//[To Check value in checkbox]
			var action_enabled_int = -1;
			if(action_enabled.IsChecked == true){
				action_enabled_int =1;
			}
		    else {
				action_enabled_int =0;
			}
	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			var query_string : String = "Exec [dbo].[SP_Config_Action] ";	
			query_string += "@shop_name	         			= '"+shop_name.Text+"',";	
			query_string += "@line_name	         			= '"+line_name.Text+"',";
			query_string += "@stage_name			    	= '"+stage_name.Text+"',";
			query_string += "@equipment_name		        = '"+equipment_name.Text+"',";
			query_string += "@equipment_type			    = '"+equipment_type.Text+"',";
			query_string += "@action_description			= '"+action_description.Text+"',";
			query_string += "@trigger_event  			   	= '"+trigger_event.Text+"',";
			query_string += "@action_id				        = '"+action_id.Text+"',";
			query_string += "@action_enabled				= '"+action_enabled_int+"',";
			query_string += "@created_by				    = '"+created_by+"',";
			query_string += "@ActionOp 						= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( shop_name.Text == ""|| line_name.Text == ""|| equipment_name.Text =="" || equipment_type.Text == ""|| action_description.Text ==""||trigger_event.Text ==""||stage_name.Text ==""||action_id.Text ==""||action_enabled ==""||created_by.Text=="" ){
					//MessageBox.Show("Please fill in all the required values!")
				
					
				if(shop_name.Text == "")
				{shop_empty_label.Visible = true}
				else
				{shop_empty_label.Visible = false}
				
				if(line_name.Text == "")
				{line_empty_label.Visible = true}
				else					
				{line_empty_label.Visible = false}
        		
				if(stage_name.Text == "")
				{stage_empty_label.Visible = true}
				else
				{stage_empty_label.Visible = false}
				
				if(equipment_name.Text == "")
				{equipment_name_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(equipment_type.Text == "")
				{equipment_type_empty_label.Visible = true}
				else
				{equipment_name_empty_label.Visible = false}
				
				if(action_id.Text == "")
				{action_id_empty_label.Visible = true}
				else
				{action_id_empty_label.Visible = false}
				
				if(trigger_event.Text == "")
				{trigger_event_empty_label.Visible = true}
				else
				{trigger_event_empty_label.Visible = false}
				
				if(action_description.Text == "")
				{action_description_empty_label.Visible = true}
				else
				{action_description_empty_label.Visible = false}


					
					
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						Clear();
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
		
		connection.Close();
		
	}]]></x:XData>
            </script:ScriptCode>
          </script:ScriptCodeManager.Scripts>
          <script:ScriptCodeManager.AssemblyReferences>
            <ic:AssemblyReference AssemblyName="mscorlib" />
            <ic:AssemblyReference AssemblyName="System" />
            <ic:AssemblyReference AssemblyName="System.Core" />
            <ic:AssemblyReference AssemblyName="System.Data" />
            <ic:AssemblyReference AssemblyName="System.Xml" />
            <ic:AssemblyReference AssemblyName="System.Drawing" />
            <ic:AssemblyReference AssemblyName="System.Windows.Forms" />
            <ic:AssemblyReference AssemblyName="WindowsBase" />
            <ic:AssemblyReference AssemblyName="PresentationCore" />
            <ic:AssemblyReference AssemblyName="PresentationFramework" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCore" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCoreCommands" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeViewControl" />
            <ic:AssemblyReference AssemblyName="GwxConfigCore" />
            <ic:AssemblyReference AssemblyName="IcoComponentModel" />
            <ic:AssemblyReference AssemblyName="IcoFwxClientWrapper" />
            <ic:AssemblyReference AssemblyName="GdxViewControl" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/GdxViewControl.DLL" />
            <ic:AssemblyReference AssemblyName="IcoWPFSpecialized" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/IcoWPFSpecialized.DLL" />
            <ic:AssemblyReference AssemblyName="IcoCommonCore.Net" />
            <ic:AssemblyReference AssemblyName="DaliExcelUploadLib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" AssemblyCodebase="file:///C:/Program Files/ICONICS/GENESIS64/Components/DaliExcelUploadLib.DLL" />
          </script:ScriptCodeManager.AssemblyReferences>
          <script:ScriptCodeManager.Namespaces>
            <s:String>System</s:String>
            <s:String>System.Collections</s:String>
            <s:String>System.ComponentModel</s:String>
            <s:String>System.Data</s:String>
            <s:String>System.Xml</s:String>
            <s:String>System.Windows</s:String>
            <s:String>System.Windows.Media</s:String>
            <s:String>System.Windows.Input</s:String>
            <s:String>System.Windows.Controls</s:String>
            <s:String>Ico.Gwx</s:String>
            <s:String>System.Diagnostics</s:String>
            <s:String>Ico.Fwx.ClientWrapper</s:String>
            <s:String>DaliExcelUploadLib</s:String>
          </script:ScriptCodeManager.Namespaces>
        </script:ScriptCodeManager>
      </gwx:GwxDocument.ScriptCodeManager>
      <gwx:GwxDocument.EventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="AnimationStopped" MethodName="ThisDisplay_AnimationStopped" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarted" MethodName="ThisDisplay_AnimationStarted" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarting" MethodName="Clear" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxDocument.EventBindings>
      <gwx:GwxDocument.CustomViews>
        <gwx:GwxCustomViews>
          <gwx:GwxCustomViews.Views>
            <gwx:GwxCustomView Name="CustomView1" ViewArea="0,-4.50195919611273E-14,1100,728" />
          </gwx:GwxCustomViews.Views>
        </gwx:GwxCustomViews>
      </gwx:GwxDocument.CustomViews>
      <gwx:GwxDocument.RuntimeWindowProperties>
        <gwx:GwxWindowProperties LeftString="0%" TopString="0%" WindowState="Maximized" WidthString="100%" HeightString="100%" ControlBox="False" MaximizeBox="False" MinimizeBox="False" HorizontalScrollVisible="Hidden" VerticalScrollVisible="Hidden" MenuVisible="False" ShowContextMenu="False" NavigationBarVisible="False" StatusBarVisible="False" TitleBarVisible="False" OuterBorder="False" Resizable="False" InnerBorder="False" CommandingEnabled="False" DragAndDropCommandingEnabled="False" />
      </gwx:GwxDocument.RuntimeWindowProperties>
      <gwx:GwxDocument.ToolTipOptions>
        <gwx:GwxToolTipOptions ShowToolTips="False" />
      </gwx:GwxDocument.ToolTipOptions>
    </gwx:GwxDocument>
  </gwx:GwxDocument.GwxDocument>
  <Rectangle Stroke="#FF000000" Width="1100" Height="30" Canvas.Left="0" Canvas.Top="300">
    <Rectangle.Fill>
      <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
        <LinearGradientBrush.GradientStops>
          <GradientStop Color="#FFF5F5F5" Offset="0" />
          <GradientStop Color="#FFEBEBEB" Offset="0.49" />
          <GradientStop Color="#FFE1E1E1" Offset="0.51" />
          <GradientStop Color="#FFCDCDCD" Offset="1" />
        </LinearGradientBrush.GradientStops>
        <LinearGradientBrush.RelativeTransform>
          <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
        </LinearGradientBrush.RelativeTransform>
      </LinearGradientBrush>
    </Rectangle.Fill>
  </Rectangle>
  <ig:GdxViewControl FileVersion="10.97.020.00" FontFamily="Segoe UI" FontSize="12" IsTabStop="True" Name="DefaultGrid" Width="1100" Height="428" Canvas.Left="2.690802" Canvas.Top="300" gwx:GwxProperties.Description="Grid Size=H:443,W:1100&#xD;&#xA;Position=X:0,Y:300&#xD;&#xA;Grid Header Font=Style :Calibri,Size:17,Color:White&#xD;&#xA;Grid Header Background color=R :0,G : 24,B :72&#xD;&#xA;Grid Text Font=Style :Calibri,Size:16,Color:White&#xD;&#xA;Grid Scrolbar Foreground color=R :0,G : 24,B :72&#xD;&#xA;" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <ig:GdxViewControl.DataDictionaryRepository>
      <ig13:DataDictionary Name="DailyStatus" Key="47993581">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="15056362" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="49320909" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="WeeklyStatus" Key="53237738">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="61233639" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="49445506" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="MonthlyStatus" Key="27952209">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="1264671" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="35726287" />
      </ig13:DataDictionary>
      <ig13:DataDictionary Name="AnnualStatus" Key="63571381">
        <ig13:TextDataTranslation Text="Applicable" FilterKey="54214786" />
        <ig13:TextDataTranslation Text="Not Applicable" FilterKey="47842506" />
      </ig13:DataDictionary>
    </ig:GdxViewControl.DataDictionaryRepository>
    <ig:GdxViewControl.FiltersRepository>
      <igd:GdxFilter Key="49320909" Expression="x={{Daily}}==0" Name="Daily_Not Applicable" />
      <igd:GdxFilter Key="15056362" Expression="x={{Daily}}==1" Name="Daily_Applicable" />
      <igd:GdxFilter Key="61233639" Expression="x={{Weekly}}==1" Name="Weekly_Applicable" />
      <igd:GdxFilter Key="49445506" Expression="x={{Weekly}}==0" Name="Weekly_Not Applicable" />
      <igd:GdxFilter Key="1264671" Expression="x={{Monthly}}==1" Name="Monthly_Applicable" />
      <igd:GdxFilter Key="35726287" Expression="x={{Monthly}}==0" Name="Monthly_Not Applicable" />
      <igd:GdxFilter Key="54214786" Expression="x={{Annual}}==1" Name="Annual_Applicable" />
      <igd:GdxFilter Key="47842506" Expression="x={{Annual}}==0" Name="Annual_Not Applicable" />
    </ig:GdxViewControl.FiltersRepository>
    <ig:GdxViewControl.SubscriptionsRepository>
      <igd:GdxSubscription Key="11348180" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssemblyID" />
          <igd:GdxDataField Key="AssemblyName" />
          <igd:GdxDataField Key="SubAssemblyID" />
          <igd:GdxDataField Key="SubAssemblyName" />
          <igd:GdxDataField Key="ComponentID" />
          <igd:GdxDataField Key="ComponentName" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz. GridAssetComponentInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="3170613" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="706558" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="8512909" Name="New Subscription" />
      <igd:GdxSubscription Key="43482862" Name="New Subscription">
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Config_Action</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="359066" Name="New Subscription">
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Config_Action</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="15622255" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="uid" BuiltInType="Int32" />
          <igd:GdxDataField IsPrimaryKey="True" Key="action_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="action_description" />
          <igd:GdxDataField Key="action_enabled" BuiltInType="Int32" />
          <igd:GdxDataField IsPrimaryKey="True" Key="event_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="event_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="equipment_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="equipment_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="equipment_type" />
          <igd:GdxDataField IsPrimaryKey="True" Key="stage_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="stage_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="line_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="line_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="shop_name" />
          <igd:GdxDataField IsPrimaryKey="True" Key="plant_name" />
          <igd:GdxDataField Key="created_by" />
          <igd:GdxDataField Key="created_on" BuiltInType="DateTime" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.Config_Action</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
    </ig:GdxViewControl.SubscriptionsRepository>
    <ig:GdxViewControl.Header>
      <TextBlock Text="Action Configuration" FontFamily="Calibri" FontStyle="Normal" FontWeight="Bold" FontSize="19" Foreground="#FF001848" Padding="0,0,0,0" TextAlignment="Center" Visibility="Visible" />
    </ig:GdxViewControl.Header>
    <ig:GdxViewControl.Items>
      <iwc:MultipleTabItem IsSelected="True" Header="Tab" FontFamily="Calibri" FontSize="16">
        <ig:GdxGridView HeaderBackground="#FF001848" HeaderBorderBrush="#FFC6C7B5" HeaderCellBorderThickness="0,0,0,0" HeaderFontFamily="Calibri" HeaderFontSize="17" HeaderMouseOverForeground="#FFFFFFFF" HeaderMouseOverBorderBrush="#FF000000" HeaderSelectedForeground="#FFFFFFFF" HeaderSelectedBorderBrush="#FF000000" GroupHeaderBorderBrush="#FFD8D8D8" GroupHeaderBackground="#FFD8D8D8" GroupHeaderForeground="#FFFFFFFF" RowHeaderBackground="#FFD8D8D8" RowHeaderBorderBrush="#FFD8D8D8" RowHeaderCellBorderBrush="#FF626262" RowHeaderBorderThickness="0,0,1,2" RowHeight="25" ScrollBarBackground="#FFD8D8D8" ScrollBarForeground="#FF001848" ScrollBarMouseOverForeground="#FF171F31" ScrollBarMousePressedForeground="#FF171F31" ScrollBarBorderBrush="#FF373D54" ScrollBarMouseOverBorderBrush="#FF229EC8" DateTimeFormat="d" DoubleFormat="N0" SubscriptionID="15622255" AllowPaging="False" BorderBrush="#FFA5B6CB" BorderThickness="0,0,0,0" Background="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Uid="local:GdxView_1">
          <ig:GdxGridView.HeaderMouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF8993A2" Offset="0" />
                <GradientStop Color="#FF545F6D" Offset="0.5" />
                <GradientStop Color="#FF0C1C32" Offset="0.51" />
                <GradientStop Color="#FF132F54" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderMouseOverBackground>
          <ig:GdxGridView.HeaderSelectedBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderSelectedBackground>
          <ig:GdxGridView.MouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.3">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.MouseOverBackground>
          <ig:GdxGridView.SelectionBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.9">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.SelectionBackground>
          <ig:GdxGridView.Columns>
            <ig:GdxColumn Key="uid" IsVisible="False" Format="{x:Null}" Text="uid" />
            <ig:GdxColumn Key="action_id" Index="1" Format="{x:Null}" Text="Action ID" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="action_description" Index="2" Format="{x:Null}" Text="Action Description" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="action_enabled" Index="3" Format="{x:Null}" Text="Action Enabled" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="event_id" Index="4" IsVisible="False" Format="{x:Null}" Text="event_id" />
            <ig:GdxColumn Key="event_name" Index="5" Format="{x:Null}" Text="Trigger Event" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="equipment_id" Index="6" IsVisible="False" Format="{x:Null}" Text="equipment_id" />
            <ig:GdxColumn Key="equipment_name" Index="7" Format="{x:Null}" Text="Equipment Name" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="equipment_type" Index="8" Format="{x:Null}" Text="Equipment Type" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="stage_id" Index="9" IsVisible="False" Format="{x:Null}" Text="stage_id" />
            <ig:GdxColumn Key="stage_name" Index="10" Format="{x:Null}" Text="Stage Name" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="line_id" Index="11" IsVisible="False" Format="{x:Null}" Text="line_id" />
            <ig:GdxColumn Key="line_name" Index="12" Format="{x:Null}" Text="Line Name" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="shop_name" Index="13" Format="{x:Null}" Text="Shop Name" TextAlignment="Center" IsAuto="True" />
            <ig:GdxColumn Key="plant_name" Index="14" IsVisible="False" Format="{x:Null}" Text="plant_name" />
            <ig:GdxColumn Key="created_by" Index="15" IsVisible="False" Format="{x:Null}" Text="created_by" />
            <ig:GdxColumn Key="created_on" Index="16" IsVisible="False" Format="{x:Null}" Text="created_on" />
          </ig:GdxGridView.Columns>
        </ig:GdxGridView>
      </iwc:MultipleTabItem>
    </ig:GdxViewControl.Items>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Grid" ShowToolTip="False" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Grid" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </ig:GdxViewControl>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_name_label" Height="25" Canvas.Left="589" Canvas.Top="15" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:15" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <TextBlock Text="Line Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_name_label" Height="25" Canvas.Left="77" Canvas.Top="55" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <TextBlock Text="Stage Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="Sub Group 1" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="line_name" Width="250" Height="25" Canvas.Left="740" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_line_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="equipment_lable" Canvas.Left="77" Canvas.Top="95" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="Equipment Name" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="action_discription_label" Canvas.Left="589" Canvas.Top="135" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="Action Description" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="action_id_label" Height="25" Canvas.Left="77" Canvas.Top="135" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <TextBlock Text="Action ID" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="action_description" Width="250" Height="25" IsEnabled="True" Canvas.Left="740" Canvas.Top="135">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="action_description_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="action_enabled_label" Height="25" Canvas.Left="77" Canvas.Top="175" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <TextBlock Text="Action Enable" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="trigger_event_label" Canvas.Left="589" Canvas.Top="95" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="Trigger Event" />
  </Label>
  <CheckBox IsChecked="False" FontFamily="Segoe UI" FontSize="12" Name="action_enabled" Width="20" Height="15" IsEnabled="True" Canvas.Left="232" Canvas.Top="175">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="Checked" MethodName="MonthlySts_Checked" ScriptType="JScriptNet" />
            <script:ScriptEventBinding EventName="Unchecked" MethodName="MonthlySts_Unchecked" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock />
  </CheckBox>
  <ComboBox IsDropDownOpen="False" Text="ROBOT-3" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="equipment_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_equipment_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <ComboBox IsDropDownOpen="False" Text="Stage 3" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="stage_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="55">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_stage_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <TextBox FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="action_id" Width="250" Height="25" IsEnabled="True" Canvas.Left="232" Canvas.Top="135">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="action_id_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <ComboBox IsDropDownOpen="False" Text="Stage-3 Gear Meshing Robot-Output Gear Shaft Gripper Close Feedback (AI)" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="trigger_event" Width="250" Height="25" Canvas.Left="740" Canvas.Top="95">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_trigger_event" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_name_label" Height="25" Canvas.Left="77" Canvas.Top="15" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <TextBlock Text="Shop Name" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="Manless Engine Assembly" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="shop_name" Width="250" Height="25" Canvas.Left="232" Canvas.Top="15">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_shop_name" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="equipment_type_label" Canvas.Left="589" Canvas.Top="57.662864" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="Equipment Type" />
  </Label>
  <ComboBox IsDropDownOpen="False" Text="Robot" Background="#FFD8D8D8" FontFamily="Calibri" FontSize="16" Padding="4,2,5,3" Name="equipment_type" Width="250" Height="25" Canvas.Left="740" Canvas.Top="55">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="Dropdown_equipment_type" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </ComboBox>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="shop_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="15">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="line_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990" Canvas.Top="15">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="stage_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="55">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="equipment_name_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="95.418251">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="equipment_type_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990" Canvas.Top="55">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="action_id_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990.098408" Canvas.Top="95.879594">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="trigger_event_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="480" Canvas.Top="135">
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="action_description_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="990" Canvas.Top="135">
    <TextBlock Text="*" />
  </Label>
  <Button BorderBrush="#FF707070" Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" TabIndex="9" Name="Button3" Width="200" Height="25" Cursor="Hand" Canvas.Left="77" Canvas.Top="233">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Pick3" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:LoadDisplayCommand FileName="Configuration Download Popups/Config_Download_Action/BajajMEA_Action_Configuration_Save_to_PLC_Popup_Selection.gdfx" TargetType="UnownedPopup" TargetName="HomeWindow">
                <gwxcmd:LoadDisplayCommand.WindowProperties>
                  <gwx:GwxWindowProperties StartLocation="CenterScreen" WindowState="Maximized" WidthString="305" HeightString="205" ControlBox="False" MaximizeBox="False" MinimizeBox="False" MenuVisible="False" ShowContextMenu="False" NavigationBarVisible="False" StatusBarVisible="False" TitleBarVisible="False" OuterBorder="False" Resizable="False" InnerBorderBrush="#FF071E48" OverridePreviousDisplay="True" CommandingEnabled="False" DragAndDropCommandingEnabled="False" />
                </gwxcmd:LoadDisplayCommand.WindowProperties>
              </gwxcmd:LoadDisplayCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="Download to PLC" />
  </Button>
  <Image Stretch="Fill" Width="20" Height="25" Canvas.Left="89.800392" Canvas.Top="232.580645">
    <Image.Source>
      <BitmapImage>
        <iwm:BitmapImageInfo.StreamSource>
          <iwm:Base64Stream Data="" />
        </iwm:BitmapImageInfo.StreamSource>
      </BitmapImage>
    </Image.Source>
  </Image>
  <Canvas Name="logged_in_user_group" Visibility="Hidden" gwx:GwxProperties.Locked="True">
    <TextBox FontFamily="Segoe UI" FontSize="12" Name="logged_in_user" Width="250" Height="25" Canvas.Left="658.999993" Canvas.Top="267.365535">
      <gwx:GwxDynamicGroup.GwxDynamicGroup>
        <gwx:GwxDynamicGroup>
          <gwx:GwxDynamicGroup.DynamicsList>
            <gwx:GwxProcessPoint AnimationMode="Analog" DataSource="localsim::currentUser" />
          </gwx:GwxDynamicGroup.DynamicsList>
        </gwx:GwxDynamicGroup>
      </gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="CurrentUser_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>*.??</TextBox>
    <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="logged_in_user_label" Height="25" Canvas.Left="503.999993" Canvas.Top="267.365535" gwx:GwxProperties.Description="Size=H:25,W:Automatic&#xD;&#xA;Background color=None&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :16&#xD;&#xA;Position= X:589  Y:55" gwx:GwxProperties.ShowDescriptionInToolTip="True">
      <TextBlock Text="Logged in User" />
    </Label>
  </Canvas>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Modify" Width="125" Height="24.999984" Canvas.Left="789.999993" Canvas.Top="233.000002" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ModifyScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Update" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshMod" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshMod" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Config_Action.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="MODIFY" />
  </Button>
  <Path Fill="#FFFFFFFF" Name="DatabaseEdit2" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Edit, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Edit">
    <Path.Data>
      <PathGeometry FillRule="EvenOdd" Figures="M816.509500334529,250.312894123643L825.851944751603,250.312894123643C826.219356184934,250.312894123643,826.518806769628,250.787821753234,826.518806769628,251.373902923103L826.518806769628,254.469356480144C826.518806769628,255.052069748927,826.219356184934,255.526997378517,825.851944751603,255.526997378517L816.509500334529,255.526997378517C816.139965049026,255.526997378517,815.842637869968,255.052069748927,815.842637955491,254.469356480144L815.842637955491,251.373902923103C815.842637869968,250.787821753234,816.139965049026,250.312894123643,816.509500334529,250.312894123643z M816.509500334529,243.725369903636L822.706648203518,243.725369903636 822.3987019553,246.659857332349 826.125910044606,245.13702353799 826.503940951159,244.560906907485C826.514559574946,244.631658439151,826.518806769628,244.70577888278,826.518806769628,244.783268238371L826.518806769628,247.882841451108C826.518806769628,248.465696579456,826.219356184934,248.940738774966,825.851944751603,248.940738774966L816.509500334529,248.940738774966C816.139965049026,248.940738774966,815.842637869968,248.465696579456,815.842637955491,247.882841451108L815.842637955491,244.783268238371C815.842637869968,244.197044535019,816.139965049026,243.725369903636,816.509500334529,243.725369903636z M823.523830121145,242.182043972753L825.263555813772,244.756970979293 823.056504069988,245.29285205873z M817.806760993778,238.657928581772C817.390590087849,238.657928244813 817.048731688968,239.200526728486 817.048731795146,239.861124099841 817.048731688968,240.528469572361 817.390590087849,241.06440288038 817.806760993778,241.06440288038 818.225057429521,241.06440288038 818.562690931491,240.528469572361 818.562690931491,239.861124099841 818.562690931491,239.200526728486 818.225057429521,238.657928244813 817.806760993778,238.657928581772z M826.295336798927,237.53203163334L828.062445854549,240.311670079928 825.719752091265,244.06165457439 825.694264251255,243.445080674065 825.099564194484,243.087938940638 825.097440809505,242.434302965227 824.502740540374,242.147915796092 824.44751851511,241.410048597663 823.952643035642,241.28201646476z M816.509389100499,237.255762690378L825.506079336898,237.255762690378 822.945316335671,241.411570639606 822.834897131233,242.469859846301 816.509389100499,242.469859846301C816.139925868654,242.469859846301,815.842649797599,241.994654225874,815.842649853521,241.411570639606L815.842649853521,238.314134317144C815.842649797599,237.727676966708,816.139925868654,237.255762690378,816.509389100499,237.255762690378z M827.548890575788,235.84748067871C827.645324192855,235.843853294011,827.735787528359,235.892217405258,827.802677446852,235.995394374232L829.053408962848,237.966283071119C829.206300114112,238.202116006348,829.174447428151,238.643460321315,828.985457882761,238.94667392189L828.728516620204,239.361066098762 826.925679313474,236.524333793387 827.18474374865,236.113310808151C827.291050819196,235.94275303231,827.424904982095,235.852144252394,827.548890575788,235.84748067871z" />
    </Path.Data>
  </Path>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Clear" Width="125" Height="24.999984" Canvas.Left="503.999993" Canvas.Top="233.000002" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:504  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ClearScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Clear" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="CLEAR" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Add" Width="125" Height="24.999984" Canvas.Left="646.999993" Canvas.Top="233.000002" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:647  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="AddScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Create" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshAdd" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshAdd" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Config_Action.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="ADD" />
  </Button>
  <Path Fill="#FFFFFFFF" Name="DatabaseAdd1" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Add, Connect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Add">
    <Path.Data>
      <PathGeometry FillRule="EvenOdd" Figures="M681.990618669297,248.985358201352L687.098347492824,248.985358201352 687.075572817317,249.076142489239C686.899643802742,249.80424784168 686.80357803765,250.590359100586 686.80357803765,251.40987607018 686.80357803765,252.229354750468 686.899643802742,253.015397293741 687.075572817317,253.743418888326L687.09832047099,253.834084547737 681.990618669297,253.834084547737C681.632617677019,253.834084547737,681.342015525187,253.392532263684,681.342015438696,252.849473318414L681.342015438696,249.969114074913C681.342015525187,249.426055129643,681.632617677019,248.985358201352,681.990618669297,248.985358201352z M690.730210734816,248.083509650178L690.730210734816,250.724178176042 688.990995783562,250.724178176042 688.990995783562,252.397992822274 690.730210734816,252.397992822274 690.730210734816,255.038489046261 691.832657567493,255.038489046261 691.832657567493,252.397992822274 693.571872518748,252.397992822274 693.571872518748,250.724178176042 691.832657567493,250.724178176042 691.832657567493,248.083509650178z M691.278505772709,246.291433010519C693.140348274309,246.291433010519 694.649817305316,248.582162913951 694.649817305316,251.409722229215 694.649817305316,254.234444717101 693.140348274309,256.526986183353 691.278505772709,256.526986183353 689.416597292804,256.526986183353 687.9074198724,254.234444717101 687.9074198724,251.409722229215 687.9074198724,248.582162913951 689.416597292804,246.291433010519 691.278505772709,246.291433010519z M681.990618669297,242.862147669246L691.065848909345,242.862147669246C691.423841119526,242.862147669246,691.714120672141,243.302797419642,691.714120672141,243.845969865359L691.714120672141,244.647525389585 691.622270312829,244.63510187706C691.508783347502,244.621948474626 691.394126562033,244.615250239048 691.278460285959,244.615250239048 689.736395719813,244.615250239048 688.373911042916,245.805979301466 687.568900044679,247.613664303475L687.528394318601,247.709505856658 681.990618669297,247.709505856658C681.632617677019,247.709505172919,681.342015525187,247.268855422524,681.342015636994,246.725032742332L681.342015636994,243.845969865359C681.342015525187,243.302797419642,681.632617677019,242.862147669246,681.990618669297,242.862147669246z M683.251441089485,238.153246759799C682.845917071592,238.153246759799 682.515438580765,238.654563215787 682.515438805947,239.270735216012 682.515438580765,239.88773744464 682.845917071592,240.388042413381 683.251441089485,240.388042413381 683.657251403685,240.388042413381 683.987452785628,239.88773744464 683.987452785628,239.270735216012 683.987452785628,238.654563215787 683.657251403685,238.153246759799 683.251441089485,238.153246759799z M681.990618669297,236.847307156574L691.065848008617,236.847307156574C691.423841119526,236.847307347687,691.714120672141,237.288006751442,691.714120672141,237.831202546796L691.714120672141,240.711259202213C691.714120672141,241.2553208487,691.423841119526,241.695006870924,691.065848008617,241.695006870924L681.990618669297,241.695006870924C681.632617677019,241.695006870924,681.342015525187,241.2553208487,681.342015438696,240.711259202213L681.342015438696,237.831202546796C681.342015525187,237.288006751442,681.632617677019,236.847307347687,681.990618669297,236.847307156574z" />
    </Path.Data>
  </Path>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Remove" Width="125" Height="24.999984" Canvas.Left="932.999993" Canvas.Top="233.000002" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:933  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="RemoveScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Delete" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshRemove" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshRemove" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.Config_Action.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="REMOVE" />
  </Button>
  <Path Fill="#FFFFFFFF" Name="DatabaseRemove2" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Remove, Delete, Disconnect, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Remove">
    <Path.Data>
      <PathGeometry FillRule="EvenOdd" Figures="M959.894764848686,249.030460436672L965.002429472843,249.030460436672 964.979726630374,249.120957560298C964.803792436615,249.84907321336 964.707724419703,250.635194092693 964.707724419703,251.454721026633 964.707724419703,252.27424830244 964.803792436615,253.060329866862 964.979726630374,253.788382957925L965.002508061339,253.879186737892 959.894764848686,253.879186737892C959.536763923963,253.879186737892,959.246161776379,253.437479218372,959.246161820748,252.894439726393L959.246161820748,250.014353117965C959.246161776379,249.471141324095,959.536763923963,249.030460436672,959.894764848686,249.030460436672z M967.955732630982,248.555605657252L967.176169442974,249.73927896175 968.405960711943,251.60620447273 967.176169442974,253.473094771224 967.955732630982,254.656597141304 969.185546192965,252.789706842812 970.415360655674,254.656597141304 971.194766441509,253.473094771224 969.965019083016,251.60620447273 971.194766441509,249.73927896175 970.415360655674,248.555605657252 969.185546192965,250.422531510102z M969.182652154763,246.336534739124C971.044494656363,246.336534739124 972.553963687368,248.627131795756 972.553963687368,251.454738120074 972.553963687368,254.279678551253 971.044494656363,256.572087170818 969.182652154763,256.572087170818 967.320743674856,256.572087170818 965.811566254456,254.279678551253 965.811566254456,251.454738120074 965.811566254456,248.627131795756 967.320743674856,246.336534739124 969.182652154763,246.336534739124z M959.894764848686,242.907249188007L968.969994390669,242.907249188007C969.327987501578,242.907249188007,969.618267054195,243.3479304173,969.618267054195,243.890970251146L969.618267054195,244.692268397194 969.526537842763,244.679861635479C969.413048175251,244.666707548505 969.298388912782,244.660009654385 969.18271925898,244.660009654385 967.64061596154,244.660009654385 966.278097056991,245.850753831896 965.473065792378,247.658461507863L965.432286470253,247.754949198998 959.894764848686,247.754949198998C959.536763923963,247.754949198998,959.246161776379,247.314268311575,959.246161820748,246.770237058119L959.246161820748,243.890970251146C959.246161776379,243.3479304173,959.536763923963,242.907249188007,959.894764848686,242.907249188007z M961.155587471539,238.19834737505C960.750063341054,238.198347238302 960.419584872746,238.699458637855 960.419584534972,239.315582916711 960.419584872746,239.932542141806 960.750063341054,240.432802253785 961.155587471539,240.432802253785 961.56139778574,240.432802253785 961.891599167681,239.932542141806 961.891599167681,239.315582916711 961.891599167681,238.699458637855 961.56139778574,238.198347238302 961.155587471539,238.19834737505z M959.894764848686,236.892408307271L968.969994390669,236.892408307271C969.327987501578,236.892408366075,969.618267054195,237.333107108624,969.618267054195,237.876136310351L969.618267054195,240.756223158086C969.618267054195,241.300250650984,969.327987501578,241.740108318263,968.969994390669,241.740108660134L959.894764848686,241.740108660134C959.536763923963,241.740108318263,959.246161776379,241.300250650984,959.246161820748,240.756223158086L959.246161820748,237.876136310351C959.246161776379,237.333107108624,959.536763923963,236.892408366075,959.894764848686,236.892408307271z" />
    </Path.Data>
  </Path>
  <Canvas>
    <Path Fill="#FFFFFFFF" Name="DatabaseRefresh1" Margin="0,0,0,0" gwx:GwxProperties.Description="Icon, Database, Refresh, Network, Connectivity" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Title="Database - Refresh">
      <Path.Data>
        <PathGeometry FillRule="EvenOdd" Figures="M535.443702770794,248.29036788014L539.408842238766,248.29036788014C539.184603933915,249.128946033565 539.055235382632,250.036619481597 539.055235382632,250.991404785163 539.055235382632,251.638397761671 539.117763375632,252.263404786896 539.225570609484,252.86014532685L535.443702770794,252.86014532685C535.09225215419,252.86014532685,534.807641816741,252.445567906731,534.807641653396,251.93362745063L534.807641653396,249.220027279456C534.807641816741,248.704945928311,535.09225215419,248.29036788014,535.443702770794,248.29036788014z M544.226462062765,245.452725906708C544.267691307919,245.451155773213,544.309190452187,245.451155773213,544.351229179103,245.452725906708L544.353385353964,245.452725906708 544.35769684138,245.452725906708C544.88586978697,245.45900738277,545.386018064352,245.622321364019,545.840893999247,245.914402307267L545.855984205208,245.926964631337C547.199053494943,246.796925985021 548.130363448548,248.766116131114 548.115272595864,251.043090753597 548.093714512053,254.102087949048 546.375534822691,256.558079771896 544.275775993554,256.52667396172 542.637360761589,256.501548999548 541.253331479089,254.968909035738 540.735937036465,252.845826651449L542.096253138166,252.500354574792C542.477831415644,253.712647738141 543.312129453164,254.560624082618 544.288710671381,254.57632761576 545.636091664103,254.59517078784 546.737710544491,253.018562689779 546.750645222319,251.055653705722 546.76573629058,249.095885302681 545.683519965866,247.487870138337 544.336138973144,247.469026024176 544.221880676235,247.469026024176 544.109778554186,247.481588976301 543.999832822567,247.500432776436L543.997676647713,247.487870138337C543.635500925909,247.556964176837,543.299194775338,247.742263481316,543.006004361236,248.021781158414L543.47381518954,248.665615654382C543.501840935623,248.703303568677 543.512619438596,248.762975864122 543.497528370332,248.813226102488 543.484593692506,248.866617235899 543.452257105727,248.901164569174 543.413452209943,248.90430546422L542.277340567917,248.992243302854 541.268421900625,249.070759712459 541.2619546695,249.070759712459C541.23392892341,249.070759712459 541.210215095888,249.051915912326 541.190812540215,249.023650369137 541.171410415688,248.992243302854 541.162787225278,248.95141480754 541.169254671978,248.907445731211L541.330940408353,247.597792672147 541.563767627284,245.744806849956C541.570235073985,245.688275135528 541.598260820069,245.64430574517 541.634909756567,245.634884002118 541.673714005624,245.622321364019 541.712518685832,245.64430574517 541.734076554068,245.691415716546L542.107031641138,246.489142136682C542.624426083756,245.945808745499 543.238831580173,245.594055192778 543.90497708134,245.487272925958 543.913600271748,245.484132344939 543.922223462159,245.484132344939 543.930846652569,245.484132344939 543.989053457303,245.474710601887 544.045104733902,245.468429125824 544.103311538637,245.462147963787 544.144271315825,245.457437249274 544.185231739741,245.454296040202 544.226462062765,245.452725906708z M535.44356894222,242.518603312318L544.359340811534,242.518603312318C544.710713239312,242.518603312318,544.997405379575,242.933195491693,544.997405379575,243.448234449234L544.997405379575,243.702648832002C544.7171858598,243.633562958196 544.430467635033,243.589626854671 544.137302658714,243.589627168697 542.313629279643,243.589626854671 540.720599782276,244.990361473652 539.823841226534,247.088319837849L535.44356894222,247.088319837849C535.092196751577,247.088319837849,534.807635989696,246.673727658477,534.807636016673,246.161832108195L534.807636016673,243.448234449234C534.807635989696,242.933195491693,535.092196751577,242.518603312318,535.44356894222,242.518603312318z M536.683058821101,238.080735292788C536.284263200669,238.080735292788 535.958759740509,238.551514479481 535.958759740509,239.132142372311 535.958759740509,239.712770233738 536.284263200669,240.186688148692 536.683058821101,240.186688148692 537.081854225955,240.186688148692 537.405201985524,239.712770233738 537.405201985524,239.132142372311 537.405201985524,238.551514479481 537.081854225955,238.080735292788 536.683058821101,238.080735292788z M535.443559068915,236.847293373332L544.359334128728,236.847293373332C544.710705047485,236.847293373332,544.997406888595,237.264717665298,544.997406888595,237.77629790137L544.997406888595,240.491125414497C544.997406888595,241.002705681974,544.710705047485,241.416991371287,544.359334128728,241.416991371287L535.443559068915,241.416991371287C535.092187826793,241.416991371287,534.807641814601,241.002705681974,534.807641653396,240.491125414497L534.807641653396,237.77629790137C534.807641814601,237.264717665298,535.092187826793,236.847293373332,535.443559068915,236.847293373332z" />
      </Path.Data>
    </Path>
  </Canvas>
  <Label FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="plc_confirm_process_point" Canvas.Left="310" Canvas.Top="233" gwx:GwxProperties.Stretch="Uniform">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="plc_confirmation_pp" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.01_Sub Group1.Config_Return_Values.Action_Download.Value">
            <gwx:GwxProcessPoint.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="DataUpdated" MethodName="PLC_Download_Confirm" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxProcessPoint.EventBindings>
          </gwx:GwxProcessPoint>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" LayoutTransform="2.06934107823561,0,0,1,0,0" />
  </Label>
  <Label FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="plc_confirm_process_point2" Canvas.Left="383.550296" Canvas.Top="235.5625" gwx:GwxProperties.Stretch="Uniform">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="plc_confirmation_pp2" DataSource="@Kepware.KEPServerEX.V6\SB2_PLC.RJ71EN71.Config_Return_Values.Action_Download.Value">
            <gwx:GwxProcessPoint.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="DataUpdated" MethodName="PLC_Download_Confirm" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxProcessPoint.EventBindings>
          </gwx:GwxProcessPoint>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" LayoutTransform="2.06934107823561,0,0,1,0,0" />
  </Label>
</Canvas>