<?xml version="1.0" encoding="utf-8"?>
<Canvas Background="#FF243782" Width="1100" Height="700" Focusable="False" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:iwm="clr-namespace:Ico.Windows.Media;assembly=IcoWPF" xmlns:gwx="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCore" xmlns:script="clr-namespace:Ico.Script;assembly=IcoScriptEngine" xmlns:ic="clr-namespace:Ico.Collections;assembly=IcoCollections" xmlns:ig="clr-namespace:Ico.Gdx;assembly=GdxViewControl" xmlns:iws="clr-namespace:Ico.WPF.Specialized;assembly=IcoWPFSpecialized" xmlns:ig12="clr-namespace:Ico.Gdx;assembly=GdxClientCommon" xmlns:igd="clr-namespace:Ico.Gdx.Data;assembly=GdxClientCommon" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:iwc="clr-namespace:Ico.Windows.Controls;assembly=IcoWPF" xmlns:gwxcmd="clr-namespace:Ico.Gwx;assembly=GwxRuntimeCoreCommands" xmlns:icc="clr-namespace:Ico.Commanding.Commands;assembly=IcoCommands">
  <Canvas.Resources>
    <BitmapImage x:Key="GwxThumbnailImageKey">
      <iwm:BitmapImageInfo.StreamSource>
        <iwm:Base64Stream Data="" />
      </iwm:BitmapImageInfo.StreamSource>
    </BitmapImage>
  </Canvas.Resources>
  <gwx:GwxDocument.GwxDocument>
    <gwx:GwxDocument FileVersion="10.97.020.00" IsScalable="True" MaximumZoom="1" MinimumZoom="1" PreferredStretch="Fill" ScanRate="500">
      <gwx:GwxDocument.ScriptCodeManager>
        <script:ScriptCodeManager>
          <script:ScriptCodeManager.Scripts>
            <script:ScriptCode Name="ThisDisplayCode" Type="JScriptNet">
              <x:XData><![CDATA[// [Function] for AnimationStarting Mode
function ThisDisplay_AnimationStarted(sender : System.Object, e : System.EventArgs)
{
	Clear();
	ThisWindow.FwxClientWrapper.Write("@reg:headerReg.Value","Production Start");
	
	var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
	var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
	var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
	var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
	var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
						
	production_date_empty_label.Visible     = false
	plc_order_id_empty_label.Visible        = false
    model_family_empty_label.Visible        = false
	production_shift_empty_label.Visible    = false
    order_status_empty_label.Visible        = false
	model_empty_label.Visible               = false
	work_order_empty_label.Visible      	= false
	sku_empty_label.Visible      			= false

    
}

// [Function]for AnimationStopping Mode
function ThisDisplay_AnimationStopping(sender : System.Object, e : System.EventArgs)
{  	
	Clear();
	ThisWindow.FwxClientWrapper.Write("@reg:headerReg.Value","");
	
	var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
	var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
	var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
	var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
	var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
						
	production_date_empty_label.Visible     = false
	plc_order_id_empty_label.Visible        = false
    model_family_empty_label.Visible        = false
	production_shift_empty_label.Visible    = false
    order_status_empty_label.Visible        = false
	model_empty_label.Visible               = false
	work_order_empty_label.Visible      	= false
	sku_empty_label.Visible      			= false
	
}






]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Asterisk_Validation" Type="JScriptNet">
              <x:XData><![CDATA[function production_date_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
	production_date_empty_label.Visible     = false
}

function production_shift_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
	production_shift_empty_label.Visible    = false

}

function plc_order_id_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
	plc_order_id_empty_label.Visible        = false

}


function model_family_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
    model_family_empty_label.Visible        = false
}

function model_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
	model_empty_label.Visible               = false

}

function sku_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
	sku_empty_label.Visible      			= false

}
	
function work_order_TextChanged(sender : System.Object, e : System.Windows.Controls.TextChangedEventArgs)
{
	var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
	work_order_empty_label.Visible      	= false
}

	

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="CLEAR" Type="JScriptNet">
              <x:XData><![CDATA[// [Function] clearing data in input holder
function Clear(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
	var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
	var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
	var planned_quantity    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();	
	var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
	var sg1_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_started").ToDependencyObject();
	var sg1_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_rejected").ToDependencyObject();
	var sg1_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_repaired").ToDependencyObject();
	var sg1_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_completed").ToDependencyObject();
    var sg2_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_started").ToDependencyObject();
	var sg2_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_rejected").ToDependencyObject();
	var sg2_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_repaired").ToDependencyObject();
	var sg2_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_completed").ToDependencyObject();
	var sg3_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_started").ToDependencyObject();
	var sg3_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_rejected").ToDependencyObject();
	var sg3_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_repaired").ToDependencyObject();
	var sg3_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_completed").ToDependencyObject();
	var manual_started		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_started").ToDependencyObject();
	var manual_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_rejected").ToDependencyObject();
	var manual_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_repaired").ToDependencyObject();
	var manual_completed	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_completed").ToDependencyObject();

	var sg1_total			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_total").ToDependencyObject();
	var sg2_total			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_total").ToDependencyObject();
	var sg3_total			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_total").ToDependencyObject();
	var manual_total		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_total").ToDependencyObject();

	var sg1_total_comp		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_total_comp").ToDependencyObject();
	var sg2_total_comp		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_total_comp").ToDependencyObject();
	var sg3_total_comp		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_total_comp").ToDependencyObject();
	var manual_total_comp	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_total_comp").ToDependencyObject();

	
	var hold  				= ThisConfiguration.GetObjectByName("hold");
    var unhold				= ThisConfiguration.GetObjectByName("unhold");
	var short_close			= ThisConfiguration.GetObjectByName("short_close");
     
	//[Variable Reset] Emptying the variables
	production_date.Text 		= "" ;
	production_shift.Text 		= "" ;
	work_order.Text	    		= "" ;
	plc_order_id.Text	    	= "" ;
    order_status.Text   		= "" ;
	model_family.Text   		= "" ;	
	model.Text   				= "" ;	
	sku.Text	    			= "" ;
	planned_quantity.Text	    = "" ;
	sg1_started.Text   			= "" ;
	sg1_rejected.Text   		= "" ;
	sg1_repaired.Text   		= "" ;
	sg1_completed.Text     		= "" ;
	sg2_started.Text   			= "" ;
	sg2_rejected.Text   		= "" ;
	sg2_repaired.Text   		= "" ;
	sg2_completed.Text     		= "" ;
	sg3_started.Text   			= "" ;
	sg3_rejected.Text   		= "" ;
	sg3_repaired.Text   		= "" ;
	sg3_completed.Text     		= "" ;
	manual_started.Text   		= "" ;
	manual_rejected.Text   		= "" ;
	manual_repaired.Text   		= "" ;
	manual_completed.Text     	= "" ;
	
	sg1_total.Text				= "" ;
	sg2_total.Text				= "" ;
	sg3_total.Text				= "" ;
	manual_total.Text			= "" ;
	
	sg1_total_comp.Text			= "" ;
	sg2_total_comp.Text			= "" ;
	sg3_total_comp.Text			= "" ;
	manual_total_comp.Text		= "" ;



    hold.Visible				= true;
    unhold.Visible				= true;
    short_close.Visible			= true;
	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Database_Connection" Type="JScriptNet">
              <x:XData><![CDATA[//[Windows Based Authentication] User is authenticated to the SQL Server based on Windows IAM
const DB_SERVER               : String = "DESKTOP-BI1L6JI\\SQLEXPRESS2017";
const DB_NAME                 : String = "BajajMEA";
const DB_USERID               : String = "sa";
const DB_PASSWORD             : String = "sql_1234";
var DB_CONNECT_AUTHENTICATION : String = ";User ID="+DB_USERID+";Password="+DB_PASSWORD+";";
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="DELETE" Type="JScriptNet">
              <x:XData><![CDATA[function Delete(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]	
		
			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Delete';
			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
			var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
		    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
			var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
			var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
			var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
		    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
			var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
			var planned_quantity    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();	
			var sg1_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_started").ToDependencyObject();
			var sg1_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_rejected").ToDependencyObject();
			var sg1_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_repaired").ToDependencyObject();
			var sg1_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_completed").ToDependencyObject();
		    var sg2_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_started").ToDependencyObject();
			var sg2_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_rejected").ToDependencyObject();
			var sg2_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_repaired").ToDependencyObject();
			var sg2_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_completed").ToDependencyObject();
			var sg3_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_started").ToDependencyObject();
			var sg3_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_rejected").ToDependencyObject();
			var sg3_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_repaired").ToDependencyObject();
			var sg3_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_completed").ToDependencyObject();
			var manual_started		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_started").ToDependencyObject();
			var manual_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_rejected").ToDependencyObject();
			var manual_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_repaired").ToDependencyObject();
			var manual_completed	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_completed").ToDependencyObject();
		  
			var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
			var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
			var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
		    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
		    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
		    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
			var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
			var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
							// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= "dalisoft_test_user";	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			var query_string : String = "Exec [dbo].[SP_OrderManagement_Production_Plan_modify_delete] ";
			query_string += "@work_order				        = '"+work_order.Text+"',";
			query_string += "@production_date			        = '"+production_date.Text+"',";
			query_string += "@production_shift				   	= '"+production_shift.Text+"',";
			query_string += "@plc_order_id						= '"+plc_order_id.Text+"',";
			query_string += "@order_status				    	= '"+order_status.Text+"',";
			query_string += "@model_family				    	= '"+model_family.Text+"',";
			query_string += "@model				   				= '"+model.Text+"',";
			query_string += "@sku				    			= '"+sku.Text+"',";
			query_string += "@planned_quantity				    = '"+planned_quantity.Text+"',";
			query_string += "@sg1_started 				    	= '"+sg1_started.Text+"',";
			query_string += "@sg1_rejected				    	= '"+sg1_rejected.Text+"',";
			query_string += "@sg1_repaired				    	= '"+sg1_repaired.Text+"',";
			query_string += "@sg1_completed				        = '"+sg1_completed.Text+"',";
			query_string += "@sg2_started 				    	= '"+sg2_started.Text+"',";
			query_string += "@sg2_rejected				    	= '"+sg2_rejected.Text+"',";
			query_string += "@sg2_repaired				    	= '"+sg2_repaired.Text+"',";
			query_string += "@sg2_completed				        = '"+sg2_completed.Text+"',";
			query_string += "@sg3_started 				    	= '"+sg3_started.Text+"',";
			query_string += "@sg3_rejected				    	= '"+sg3_rejected.Text+"',";
			query_string += "@sg3_repaired				    	= '"+sg3_repaired.Text+"',";
			query_string += "@sg3_completed				        = '"+sg3_completed.Text+"',";
			query_string += "@manual_started 				    = '"+manual_started.Text+"',";
			query_string += "@manual_rejected				    = '"+manual_rejected.Text+"',";
			query_string += "@manual_repaired				    = '"+manual_repaired.Text+"',";
			query_string += "@manual_completed				    = '"+manual_completed.Text+"',";
			query_string += "@ActionOp 							= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( work_order.Text==""|| production_date.Text==""||production_shift.Text ==""|| plc_order_id.Text ==""||order_status.Text ==""||model_family.Text ==""||model.Text ==""||sku.Text ==""||planned_quantity.Text=="" ){
					//MessageBox.Show("Please fill in all the required values!")
					
				if(production_date.Text == "")
				{production_date_empty_label.Visible = true}
				else
				{production_date_empty_label.Visible = false}
				
				if(plc_order_id.Text == "")
				{plc_order_id_empty_label.Visible = true}
				else
				{plc_order_id_empty_label.Visible = false}
				
				if(model_family.Text == "")
				{model_family_empty_label.Visible = true}
				else
				{model_family_empty_label.Visible = false}
			        		
				if(production_shift.Text == "")
				{production_shift_empty_label.Visible = true}
				else
				{production_shift_empty_label.Visible = false}
				
				if(order_status.Text == "")
				{order_status_empty_label.Visible = true}
				else
				{order_status_empty_label.Visible = false}
				
				if(model.Text == "")
				{model_empty_label.Visible = true}
				else
				{model_empty_label.Visible = false}
								
				if(sku.Text == "")
				{sku_empty_label.Visible = true}
				else
				{sku_empty_label.Visible = false}
								
				
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
	
		connection.Close();
		
	}
	
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Delete_Data_to_PLC" Type="JScriptNet">
              <x:XData><![CDATA[
function Delete_Data_to_PLC(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	// [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();


	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic 			= 	ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_status_tag");

    // [Inline Test Statement] 
    //MessageBox.Show('1');
    // [Write the Values to PLC Tags. Else return error.]
    //
	if ( plc_order_id.Text == ""||order_status.Text == "") {
		MessageBox.Show("Blank Fields")
		
	}else{
		    try {
			        //MessageBox.Show('a');
			        process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
			        //MessageBox.Show('b');
			        process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
			        //MessageBox.Show('c');
			        process_point_order_status.WriteValueToPrimaryDataSource(11);
			        MessageBox.Show("\n ----------------------------------------------- \n DELETE ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
			    } catch(ex:Exception){
				        MessageBox.Show(ex);
				        MessageBox.Show("Unable to Save.");
			    }
		}
	Clear();
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ExecutionCode" Type="JScriptNet">
              <x:XData><![CDATA[function Execution_Priority_Increase(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();

	
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
			//var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
		    //var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
			//var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
			//var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
			var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
		    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
			var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
			var planned_quantity    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();	
			var sg1_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_started").ToDependencyObject();
			var sg1_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_rejected").ToDependencyObject();
			var sg1_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_repaired").ToDependencyObject();
			var sg1_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_completed").ToDependencyObject();
		    var sg2_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_started").ToDependencyObject();
			var sg2_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_rejected").ToDependencyObject();
			var sg2_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_repaired").ToDependencyObject();
			var sg2_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_completed").ToDependencyObject();
			var sg3_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_started").ToDependencyObject();
			var sg3_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_rejected").ToDependencyObject();
			var sg3_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_repaired").ToDependencyObject();
			var sg3_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_completed").ToDependencyObject();
			var manual_started		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_started").ToDependencyObject();
			var manual_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_rejected").ToDependencyObject();
			var manual_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_repaired").ToDependencyObject();
			var manual_completed	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_completed").ToDependencyObject();
		  
			var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
			var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
			var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
		    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
		    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
		    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
			var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
			var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
		
	
	// [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();

	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_status_tag");
	var status_int						 =	 4 ;

	if ( plc_order_id.Text == ""||order_status.Text == "") {
		MessageBox.Show("Blank Fields")
		
	} else {
        try {
			
			process_point_production_shift.WriteValueToPrimaryDataSource(0);
            process_point_work_order.WriteValueToPrimaryDataSource(0);
            process_point_order_status.WriteValueToPrimaryDataSource(0);
			MessageBox.Show("[Notification] - Process points are refreshed. Order Plan change can now proceed.");

            //MessageBox.Show('a');
            process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
            //MessageBox.Show('b');
            process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
            //MessageBox.Show('c');
            process_point_order_status.WriteValueToPrimaryDataSource(status_int);
            MessageBox.Show("\n ----------------------------------------------- \n MODIFY ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" with 'PLC Order Status ' :- "+status_int+" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
        } catch(ex:Exception){
            MessageBox.Show(ex);
            MessageBox.Show("Unable to Save.");
        }
	}
	Clear();
}

function Execution_Priority_Decrease(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
			//var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
		    //var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
			//var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
			//var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
			var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
		    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
			var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
			var planned_quantity    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();	
			var sg1_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_started").ToDependencyObject();
			var sg1_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_rejected").ToDependencyObject();
			var sg1_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_repaired").ToDependencyObject();
			var sg1_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_completed").ToDependencyObject();
		    var sg2_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_started").ToDependencyObject();
			var sg2_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_rejected").ToDependencyObject();
			var sg2_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_repaired").ToDependencyObject();
			var sg2_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_completed").ToDependencyObject();
			var sg3_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_started").ToDependencyObject();
			var sg3_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_rejected").ToDependencyObject();
			var sg3_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_repaired").ToDependencyObject();
			var sg3_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_completed").ToDependencyObject();
			var manual_started		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_started").ToDependencyObject();
			var manual_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_rejected").ToDependencyObject();
			var manual_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_repaired").ToDependencyObject();
			var manual_completed	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_completed").ToDependencyObject();
		  
			var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
			var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
			var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
		    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
		    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
		    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
			var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
			var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
		
	// [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();

	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_status_tag");
	var status_int						 =	 5 ;

	if ( plc_order_id.Text == ""||order_status.Text == "") {
		MessageBox.Show("Blank Fields")
		
	} else {
        try {
	
			process_point_production_shift.WriteValueToPrimaryDataSource(0);
            process_point_work_order.WriteValueToPrimaryDataSource(0);
            process_point_order_status.WriteValueToPrimaryDataSource(0);
			MessageBox.Show("[Notification] - Process points are refreshed. Order Plan change can now proceed.");
			
            //MessageBox.Show('a');
            process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
            //MessageBox.Show('b');
            process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
            //MessageBox.Show('c');
            process_point_order_status.WriteValueToPrimaryDataSource(status_int);
            MessageBox.Show("\n ----------------------------------------------- \n MODIFY ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" with 'PLC Order Status ' :- "+status_int+" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
        } catch(ex:Exception){
            MessageBox.Show(ex);
            MessageBox.Show("Unable to Save.");
        }
	}
	Clear();
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="GridCode" Type="JScriptNet">
              <x:XData><![CDATA[// [Function] Selecting Values from GridView
function Grid(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	// [Variable Declaration] Creating holder variables that will hold the user input values in the script
	var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
	var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status    	: System.Windows.Controls.ComboBox= ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
	var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
	var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
	var planned_quantity    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();	
	var sg1_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_started").ToDependencyObject();
	var sg1_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_rejected").ToDependencyObject();
	var sg1_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_repaired").ToDependencyObject();
	var sg1_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_completed").ToDependencyObject();
    var sg2_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_started").ToDependencyObject();
	var sg2_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_rejected").ToDependencyObject();
	var sg2_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_repaired").ToDependencyObject();
	var sg2_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_completed").ToDependencyObject();
	var sg3_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_started").ToDependencyObject();
	var sg3_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_rejected").ToDependencyObject();
	var sg3_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_repaired").ToDependencyObject();
	var sg3_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_completed").ToDependencyObject();
	var manual_started		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_started").ToDependencyObject();
	var manual_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_rejected").ToDependencyObject();
	var manual_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_repaired").ToDependencyObject();
	var manual_completed	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_completed").ToDependencyObject();
  
	var sg1_total			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_total").ToDependencyObject();
	var sg2_total			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_total").ToDependencyObject();
	var sg3_total			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_total").ToDependencyObject();
	var manual_total		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_total").ToDependencyObject();

	var sg1_total_comp		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_total_comp").ToDependencyObject();
	var sg2_total_comp		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_total_comp").ToDependencyObject();
	var sg3_total_comp		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_total_comp").ToDependencyObject();
	var manual_total_comp	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_total_comp").ToDependencyObject();


	//[Grid Selection Code]
	
	var gdxViewer : Ico.Gdx.GdxViewControl = Ico.Gdx.GdxViewControl(ThisConfiguration.GetObjectByName("default_grid").ToDependencyObject());
	var tab_list : ItemsControl = ItemsControl(gdxViewer.Items[0]);
	var grid_list : Ico.Gdx.GdxGridView = Ico.Gdx.GdxGridView(tab_list.Items[0]);
	var Row_Selected : DataRow;  
	
	    if(grid_list.GetHighlightedRow() != null){         
		Row_Selected = grid_list.GetHighlightedRow();
		
		// Specifying grid index values for selection
		work_order.Text        		= Row_Selected.Item[1].ToString();
		plc_order_id.Text     		= Row_Selected.Item[2].ToString();
		production_date.Text        = Row_Selected.Item[3].ToString();
		production_shift.Text       = Row_Selected.Item[4].ToString();
		model_family.Text     	 	= Row_Selected.Item[32].ToString();
		model.Text          		= Row_Selected.Item[30].ToString();
		sku.Text          			= Row_Selected.Item[28].ToString();
		planned_quantity.Text       = Row_Selected.Item[8].ToString();
		
		
		if(Row_Selected.Item[25].ToString() == '0') { 
			order_status.SelectedIndex = 0;	
		} else if(Row_Selected.Item[25].ToString() == '1') {
			order_status.SelectedIndex = 1;
		} else if(Row_Selected.Item[25].ToString() == '2') {
			order_status.SelectedIndex = 2;
		} else if(Row_Selected.Item[25].ToString() == '3') {
			order_status.SelectedIndex = 3;
		} 
					
		if(order_status.SelectedIndex == 1)
		{ New_Plan();}
		else if(order_status.SelectedIndex == 2)
		{ Running();}
		else if(order_status.SelectedIndex == 3)
		{ Complete();}

		
		sg1_started.Text 			= Row_Selected.Item[9].ToString();
		sg1_rejected.Text 			= Row_Selected.Item[10].ToString();
		sg1_repaired.Text 			= Row_Selected.Item[11].ToString();
		sg1_completed.Text 			= Row_Selected.Item[12].ToString();
		
		sg2_started.Text 			= Row_Selected.Item[13].ToString();
		sg2_rejected.Text 			= Row_Selected.Item[14].ToString();
		sg2_repaired.Text 			= Row_Selected.Item[15].ToString();
		sg2_completed.Text 			= Row_Selected.Item[16].ToString();
		
		sg3_started.Text 			= Row_Selected.Item[17].ToString();
		sg3_rejected.Text 			= Row_Selected.Item[18].ToString();
		sg3_repaired.Text 			= Row_Selected.Item[19].ToString();
		sg3_completed.Text 			= Row_Selected.Item[20].ToString();
		
		manual_started.Text 		= Row_Selected.Item[21].ToString();
		manual_rejected.Text 		= Row_Selected.Item[22].ToString();
		manual_repaired.Text 		= Row_Selected.Item[23].ToString();
		manual_completed.Text 	    = Row_Selected.Item[24].ToString();
		
		sg1_total.Text              = (parseInt(sg1_started.Text)	+ parseInt(sg1_rejected.Text) 	+ 
			                           parseInt(sg1_repaired.Text)	+ parseInt(sg1_completed.Text) 	+
			                   		   parseInt(sg2_started.Text) 	+ parseInt(sg2_rejected.Text) 	+ 
									   parseInt(sg2_repaired.Text) 	+ parseInt(sg2_completed.Text) 	+
 								       parseInt(sg3_started.Text) 	+ parseInt(sg3_rejected.Text) 	+ 
									   parseInt(sg3_repaired.Text) 	+ parseInt(sg3_completed.Text) 	+
 									   parseInt(manual_started.Text)+ parseInt(manual_rejected.Text)+ 
									   parseInt(manual_repaired.Text)+ parseInt(manual_completed.Text));

		sg2_total.Text              = parseInt(sg2_started.Text) + parseInt(sg2_rejected.Text) + parseInt(sg2_repaired.Text) + parseInt(sg2_completed.Text) +
 		parseInt(sg3_started.Text) + parseInt(sg3_rejected.Text) + parseInt(sg3_repaired.Text) + parseInt(sg3_completed.Text) +
 		parseInt(manual_started.Text) + parseInt(manual_rejected.Text) + parseInt(manual_repaired.Text) + parseInt(manual_completed.Text) ;

		sg3_total.Text              = parseInt(sg3_started.Text) + parseInt(sg3_rejected.Text) + parseInt(sg3_repaired.Text) + parseInt(sg3_completed.Text) +
 		parseInt(manual_started.Text) + parseInt(manual_rejected.Text) + parseInt(manual_repaired.Text) + parseInt(manual_completed.Text) ;

		manual_total.Text           = parseInt(manual_started.Text) + parseInt(manual_rejected.Text) + parseInt(manual_repaired.Text) + parseInt(manual_completed.Text) ;
		
		
		sg1_total_comp.Text         = (parseInt(sg1_completed.Text) +
			                   		   parseInt(sg2_started.Text) 	+ parseInt(sg2_rejected.Text) 	+ 
									   parseInt(sg2_repaired.Text) 	+ parseInt(sg2_completed.Text) 	+
 								       parseInt(sg3_started.Text) 	+ parseInt(sg3_rejected.Text) 	+ 
									   parseInt(sg3_repaired.Text) 	+ parseInt(sg3_completed.Text) 	+
 									   parseInt(manual_started.Text)+ parseInt(manual_rejected.Text)+ 
									   parseInt(manual_repaired.Text)+ parseInt(manual_completed.Text));


		sg2_total_comp.Text         = parseInt(sg2_completed.Text) +
 									  parseInt(sg3_started.Text) + parseInt(sg3_rejected.Text) + parseInt(sg3_repaired.Text) + parseInt(sg3_completed.Text) +
 									  parseInt(manual_started.Text) + parseInt(manual_rejected.Text)+ 
  									  parseInt(manual_repaired.Text)+ parseInt(manual_completed.Text) ;

		sg3_total_comp.Text         = parseInt(sg3_completed.Text) +
 									  parseInt(manual_started.Text) + parseInt(manual_rejected.Text)+ 
								  	  parseInt(manual_repaired.Text) + parseInt(manual_completed.Text) ;

		manual_total_comp.Text      = parseInt(manual_completed.Text) ;

		}
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Hold_data_to_PLC" Type="JScriptNet">
              <x:XData><![CDATA[// [Declaring Function] Creating a function to download the configuration to the PLC
function Hold_data_to_PLC(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){

    // [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();

	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic 			= 	ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_status_tag");
		
    // [Inline Test Statement] 
    //MessageBox.Show('1');
    // [Write the Values to PLC Tags. Else return error.]
    //
	if ( work_order.Text == ""||order_status.Text == "") {
		MessageBox.Show("Blank Fields")
	} else {
		    try {
			        //MessageBox.Show('a');
			        process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
			        //MessageBox.Show('b');
			        process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
			        //MessageBox.Show('c');
			        process_point_order_status.WriteValueToPrimaryDataSource(3);
			        MessageBox.Show("\n ----------------------------------------------- \n HOLD ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
			    } catch(ex:Exception){
				    MessageBox.Show(ex);
				    MessageBox.Show("Unable to Save.");
			    }
		}
		
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Hold_Order" Type="JScriptNet">
              <x:XData><![CDATA[
	function Hold_Order(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
	connection.Open();
		
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Hold';
        
    // [Variable Declaration] Creating holder variables that will hold the user input values in the script
    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
	var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
	var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
	var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
	var planned_quantity  	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();
	
	var hold  				= ThisConfiguration.GetObjectByName("hold");
    var unhold				= ThisConfiguration.GetObjectByName("unhold");
	var short_close			= ThisConfiguration.GetObjectByName("short_close");
	
	var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
	var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
	var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
	var planned_quantity_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("planned_quantity_empty_label");
    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
	var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
	var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
	

     
	
    // [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
    var created_by 		= 'logged_in_user';
    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
    
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "Exec [dbo].[SP_OrderManagement_ProductionPlan] ";		
    query_string += "@work_order       			= '"+work_order.Text+"',";
    query_string += "@order_status       		= '"+order_status.Text+"',";
    query_string += "@ActionOp 					= '"+ActionOp+"'";

    //[Inline Test Statement] MessageBox.Show(query_string);
					
	// [Validation Statement] This if-else statement checks if any of the fields have been left empty
	if ( work_order.Text == ""||order_status.Text == "") {
		//
        //MessageBox.Show("Please fill in all the required values!")
				if(production_date.Text == "")
				{production_date_empty_label.Visible = true}
				else
				{production_date_empty_label.Visible = false}
				
				if(plc_order_id.Text == "")
				{plc_order_id_empty_label.Visible = true}
				else
				{plc_order_id_empty_label.Visible = false}
				
				if(model_family.Text == "")
				{model_family_empty_label.Visible = true}
				else
				{model_family_empty_label.Visible = false}
				
				if(planned_quantity.Text == "")
				{planned_quantity_empty_label.Visible = true}
				else
				{planned_quantity_empty_label.Visible = false}
		        		
				if(production_shift.Text == "")
				{production_shift_empty_label.Visible = true}
				else
				{production_shift_empty_label.Visible = false}
				
				if(order_status.Text == "")
				{order_status_empty_label.Visible = true}
				else
				{order_status_empty_label.Visible = false}
				
				if(model.Text == "")
				{model_empty_label.Visible = true}
				else
				{model_empty_label.Visible = false}
				
						
				if(work_order.Text == "")
				{work_order_empty_label.Visible = true}
				else
				{work_order_empty_label.Visible = false}
				
				if(sku.Text == "")
				{sku_empty_label.Visible = true}
				else
				{sku_empty_label.Visible = false}
			
			
    } else {
        try {
            var reader : System.Data.SqlClient.SqlDataReader;	
            var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
            reader = stored_procedure_query.ExecuteReader();
            while(reader.Read())
            {
                response = reader["Response"];
                MessageBox.Show(response);
            }
            reader.Close();
            //Clear();			
		} catch (ex : Exception) {
			MessageBox.Show (ex.Message);	
		}	
	}			
								
	// [Closing connection with the database]
	connection.Close();
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="JScriptDotNetGlobalVariablesCode" Type="JScriptNet" EditorBrowsable="Never">
              <x:XData><![CDATA[
var ThisWindow : Ico.Gwx.GwxRuntimeViewControl;
var ThisDocument : Ico.Gwx.GwxDocument;
var ThisConfiguration : Ico.Gwx.GwxConfiguration;
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Modify_Data_to_PLC" Type="JScriptNet">
              <x:XData><![CDATA[function Modify_Data_to_PLC(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
 	// [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();

	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic = ThisConfiguration.GetDynamicObjectByName("pp_status_tag");
	var status_int						 =	 0 ;
	
	if ( order_status.Text == "New Plan"){
			status_int=1;
			// MessageBox.Show(status_int);
	}
	else if(order_status.Text == "Running"){
			status_int=2;
			// MessageBox.Show(status_int);
            if ( plc_order_id.Text == ""||order_status.Text == "") {
                MessageBox.Show("Blank Fields")
            } else {
                try {
                    process_point_production_shift.WriteValueToPrimaryDataSource(0);
                    process_point_work_order.WriteValueToPrimaryDataSource(0);
                    process_point_order_status.WriteValueToPrimaryDataSource(0);
					MessageBox.Show("[Notification] - Process points are refreshed. Order Plan change can now proceed.");
					
                    //MessageBox.Show('a');
                    process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
                    //MessageBox.Show('b');
                    process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
                    //MessageBox.Show('c');
                    process_point_order_status.WriteValueToPrimaryDataSource(status_int);
                    MessageBox.Show("\n ----------------------------------------------- \n MODIFY ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" with 'PLC Order Status ' :- "+status_int+" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
                } catch(ex:Exception){
                    MessageBox.Show(ex);
                    MessageBox.Show("Unable to Save.");
                }
            }
	}
	else if(order_status.Text == "Completed"){
			status_int=3;
			// MessageBox.Show(status_int);
            if ( plc_order_id.Text == ""||order_status.Text == "") {
                MessageBox.Show("Blank Fields")
            } else {
                try {
	
					process_point_production_shift.WriteValueToPrimaryDataSource(0);
                    process_point_work_order.WriteValueToPrimaryDataSource(0);
                    process_point_order_status.WriteValueToPrimaryDataSource(0);
					MessageBox.Show("[Notification] - Process points are refreshed. Order Plan change can now proceed.");
					
					
                    //MessageBox.Show('a');
                    process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
                    //MessageBox.Show('b');
                    process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
                    //MessageBox.Show('c');
                    process_point_order_status.WriteValueToPrimaryDataSource(status_int);
                    MessageBox.Show("\n ----------------------------------------------- \n MODIFY ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" with 'PLC Order Status ' :- "+status_int+" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
                } catch(ex:Exception){
                    MessageBox.Show(ex);
                    MessageBox.Show("Unable to Save.");
                }
            }
	}

	
	Clear();
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="orderCode" Type="JScriptNet">
              <x:XData><![CDATA[
function order_status_dropdown(sender : System.Object, e : System.EventArgs)
{
	var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
    order_status_empty_label.Visible        = false
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="PLC_Download_Confirm" Type="JScriptNet">
              <x:XData><![CDATA[ 
function PLC_Download_Confirm(sender : System.Object, e : System.EventArgs)
{
	//declare variables

    var plc_confirm : GwxDynamic = ThisConfiguration.GetDynamicObjectByName("plc_confirmation_pp"); 
    //read values and output into a message box

    //MessageBox.Show(plc_confirm.GetValueOfPrimaryDataSource());
    if (plc_confirm.GetValueOfPrimaryDataSource() == 1){
        MessageBox.Show("[Notification] : Configuration download has been confirmed by the PLC");
        plc_confirm.WriteValueToPrimaryDataSource(0);
    }
		
}

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Short_Close_Order" Type="JScriptNet">
              <x:XData><![CDATA[function Short_Close_Order(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
	connection.Open();
		
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Short Close';
        
    // [Variable Declaration] Creating holder variables that will hold the user input values in the script
    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
	var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
	var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
	var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
	var planned_quantity  	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();
	
	var hold  				= ThisConfiguration.GetObjectByName("hold");
    var unhold				= ThisConfiguration.GetObjectByName("unhold");
	var short_close			= ThisConfiguration.GetObjectByName("short_close");
	
	var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
	var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
	var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
	var planned_quantity_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("planned_quantity_empty_label");
    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
	var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
	var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
	
     
	
    // [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
    var created_by 		= 'logged_in_user';
    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
    
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "Exec [dbo].[SP_OrderManagement_ProductionPlan] ";		
    query_string += "@work_order       			= '"+work_order.Text+"',";
    query_string += "@order_status       		= '"+order_status.Text+"',";
    query_string += "@ActionOp 					= '"+ActionOp+"'";

    //[Inline Test Statement] 
    MessageBox.Show(query_string);
					
	// [Validation Statement] This if-else statement checks if any of the fields have been left empty
	if ( work_order.Text == ""||order_status.Text == "") {
		//
        //MessageBox.Show("Please fill in all the required values!")
			if(production_date.Text == "")
					
				{production_date_empty_label.Visible = true}
				else
				{production_date_empty_label.Visible = false}
				
				if(plc_order_id.Text == "")
				{plc_order_id_empty_label.Visible = true}
				else
				{plc_order_id_empty_label.Visible = false}
				
				if(model_family.Text == "")
				{model_family_empty_label.Visible = true}
				else
				{model_family_empty_label.Visible = false}
				
				if(planned_quantity.Text == "")
				{planned_quantity_empty_label.Visible = true}
				else
				{planned_quantity_empty_label.Visible = false}
		        		
				if(production_shift.Text == "")
				{production_shift_empty_label.Visible = true}
				else
				{production_shift_empty_label.Visible = false}
				
				if(order_status.Text == "")
				{order_status_empty_label.Visible = true}
				else
				{order_status_empty_label.Visible = false}
				
				if(model.Text == "")
				{model_empty_label.Visible = true}
				else
				{model_empty_label.Visible = false}
				
						
				if(work_order.Text == "")
				{work_order_empty_label.Visible = true}
				else
				{work_order_empty_label.Visible = false}
				
				if(sku.Text == "")
				{sku_empty_label.Visible = true}
				else
				{sku_empty_label.Visible = false}
				
							
    } else {
        try {
            var reader : System.Data.SqlClient.SqlDataReader;	
            var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
            reader = stored_procedure_query.ExecuteReader();
            while(reader.Read())
            {
                response = reader["Response"];
                MessageBox.Show(response);
            }
            reader.Close();
           // Clear();			
		} catch (ex : Exception) {
			MessageBox.Show (ex.Message);	
		}	
	}			
								
	// [Closing connection with the database]
	connection.Close();
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="ShortClose_data_to_PLC" Type="JScriptNet">
              <x:XData><![CDATA[
function ShortClose_data_to_PLC(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
	
    // [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();


	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic 			= 	ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_status_tag");

    // [Inline Test Statement] 
    //MessageBox.Show('1');
    // [Write the Values to PLC Tags. Else return error.]
    //
	if ( work_order.Text == ""||order_status.Text == "") {
		MessageBox.Show("Blank Fields")
		
	}else{
		    try {
			        //MessageBox.Show('a');
			        process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
			        //MessageBox.Show('b');
			        process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
			        //MessageBox.Show('c');
			        process_point_order_status.WriteValueToPrimaryDataSource(4);
			        MessageBox.Show("\n ----------------------------------------------- \n HOLD ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
			    } catch(ex:Exception){
				        MessageBox.Show(ex);
				        MessageBox.Show("Unable to Save.");
			    }
		}

}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="UI_Function" Type="JScriptNet">
              <x:XData><![CDATA[function New_Plan()  
{
	
	var hold= ThisConfiguration.GetObjectByName("hold");
	    	hold.Visible= false;
	var unhold= ThisConfiguration.GetObjectByName("unhold");
	    	unhold.Visible= false;
	var short_close= ThisConfiguration.GetObjectByName("short_close");
	    	short_close.Visible= false;
}
function Running() 
{

	var hold= ThisConfiguration.GetObjectByName("hold");
    	hold.Visible= true;
	var unhold= ThisConfiguration.GetObjectByName("unhold");
    	unhold.Visible= false;
	var short_close= ThisConfiguration.GetObjectByName("short_close");
    	short_close.Visible= true;
}

function On_Hold() 

{
	var hold= ThisConfiguration.GetObjectByName("hold");
	    hold.Visible= false;
	var unhold= ThisConfiguration.GetObjectByName("unhold");
	    unhold.Visible= true;
	var short_close= ThisConfiguration.GetObjectByName("short_close");
	    short_close.Visible= false;
	
}

function Short_Close() 
{
	var hold= ThisConfiguration.GetObjectByName("hold");
	    hold.Visible= false;
	var unhold= ThisConfiguration.GetObjectByName("unhold");
	    unhold.Visible= false;
	var short_close= ThisConfiguration.GetObjectByName("short_close");
	    short_close.Visible= false;
	
}

function Complete() 
{
	
	var hold= ThisConfiguration.GetObjectByName("hold");
	    	hold.Visible= false;
	var unhold= ThisConfiguration.GetObjectByName("unhold");
	    	unhold.Visible= false;
	var short_close= ThisConfiguration.GetObjectByName("short_close");
	    	short_close.Visible= false;
	
}]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Unhold_data_to_PLC" Type="JScriptNet">
              <x:XData><![CDATA[
function UnHold_data_to_PLC(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs)
{
// [Declaring Variables]
	var production_shift    	: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var work_order     			: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var plc_order_id     		: System.Windows.Controls.TextBox  = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status     		: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();


	// [Adding GWX Dynamic Property Variables] Process Points are Created and GwxDynamic properties are added to the process points alongside primary data source / tags
	var process_point_production_shift   :   GwxDynamic 			= 	ThisConfiguration.GetDynamicObjectByName("pp_shift_tag");
	var process_point_work_order  		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_workorder_tag");
	var process_point_order_status		 :   GwxDynamic  			= 	ThisConfiguration.GetDynamicObjectByName("pp_status_tag");

    // [Inline Test Statement] 
    //MessageBox.Show('1');
    // [Write the Values to PLC Tags. Else return error.]
    //
	if ( work_order.Text == ""||order_status.Text == "") {
		MessageBox.Show("Blank Fields")
		
	}else{
		    try {
			        //MessageBox.Show('a');
			        process_point_production_shift.WriteValueToPrimaryDataSource(production_shift.Text);
			        //MessageBox.Show('b');
			        process_point_work_order.WriteValueToPrimaryDataSource(plc_order_id.Text);
			        //MessageBox.Show('c');
			        process_point_order_status.WriteValueToPrimaryDataSource(6);
			        MessageBox.Show("\n ----------------------------------------------- \n UNHOLD ORDER  \n 'Production Shift ' :- "+ production_shift.Text +" \n ----------------------------------------------- \n'PLC Order ID ' :- "+ plc_order_id.Text +" \n ----------------------------------------------- \n will be updated in some time. \n ----------------------------------------------- \n Thank You  \n ----------------------------------------------- ");   
			    } catch(ex:Exception){
				        MessageBox.Show(ex);
				        MessageBox.Show("Unable to Save.");
			    }
		}
	
}

]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Unhold_Order" Type="JScriptNet">
              <x:XData><![CDATA[function Unhold_Order(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
	var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		
	// [Opening connection with the database]
	var connection : System.Data.SqlClient.SqlConnection;
	connection = new System.Data.SqlClient.SqlConnection(connection_string);
	connection.Open();
		
    // [Operation Specification] Specifying the kind of operation that happens on pressing the button 
    var ActionOp = 'Unhold';
        
    // [Variable Declaration] Creating holder variables that will hold the user input values in the script
    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
	var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
	var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
	var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
	var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
	var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
	var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
	var planned_quantity  	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();
	
	var hold  				= ThisConfiguration.GetObjectByName("hold");
    var unhold				= ThisConfiguration.GetObjectByName("unhold");
	var short_close			= ThisConfiguration.GetObjectByName("short_close");
	
	var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
	var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
	var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
	var planned_quantity_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("planned_quantity_empty_label");
    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
	var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
	var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
	
  
	
    // [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
    var created_by 		= 'logged_in_user';
    
    //[Error & Exception Handling] Creating a variable for error and exception handling
    var response		: String;
    response="";
    
    // [Query String] Building Query for calling stored procedure
    var query_string : String = "Exec [dbo].[SP_OrderManagement_ProductionPlan] ";		
    query_string += "@work_order       			= '"+work_order.Text+"',";
    query_string += "@order_status       		= '"+order_status.Text+"',";
    query_string += "@ActionOp 					= '"+ActionOp+"'";

    //[Inline Test Statement]  MessageBox.Show(query_string);
					
	// [Validation Statement] This if-else statement checks if any of the fields have been left empty
	if ( work_order.Text == ""||order_status.Text == "") {
		//
        //MessageBox.Show("Please fill in all the required values!")
			if(production_date.Text == "")
					
				{production_date_empty_label.Visible = true}
				else
				{production_date_empty_label.Visible = false}
				
				if(plc_order_id.Text == "")
				{plc_order_id_empty_label.Visible = true}
				else
				{plc_order_id_empty_label.Visible = false}
				
				if(model_family.Text == "")
				{model_family_empty_label.Visible = true}
				else
				{model_family_empty_label.Visible = false}
				
				if(planned_quantity.Text == "")
				{planned_quantity_empty_label.Visible = true}
				else
				{planned_quantity_empty_label.Visible = false}
		        		
				if(production_shift.Text == "")
				{production_shift_empty_label.Visible = true}
				else
				{production_shift_empty_label.Visible = false}
				
				if(order_status.Text == "")
				{order_status_empty_label.Visible = true}
				else
				{order_status_empty_label.Visible = false}
				
				if(model.Text == "")
				{model_empty_label.Visible = true}
				else
				{model_empty_label.Visible = false}
								
				if(work_order.Text == "")
				{work_order_empty_label.Visible = true}
				else
				{work_order_empty_label.Visible = false}
				
				if(sku.Text == "")
				{sku_empty_label.Visible = true}
				else
				{sku_empty_label.Visible = false}
			
    } else {
        try {
            var reader : System.Data.SqlClient.SqlDataReader;	
            var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
            reader = stored_procedure_query.ExecuteReader();
            while(reader.Read())
            {
                response = reader["Response"];
                MessageBox.Show(response);
            }
            reader.Close();
            //Clear();			
		} catch (ex : Exception) {
			MessageBox.Show (ex.Message);	
		}	
	}			
								
	// [Closing connection with the database]
	connection.Close();
}
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="UPDATE" Type="JScriptNet">
              <x:XData><![CDATA[function Update(sender : System.Object, cmdArgs : Ico.Gwx.CommandExecutionEventArgs){
		
		var connection_string : String = "Data Source="+DB_SERVER+"; Initial Catalog="+DB_NAME+"; Password="+DB_PASSWORD+"; User ID="+DB_USERID+";";
		// [Inline Test Statement] : Prints out connection_string : MessageBox.Show(connection_string);
		
		// [Opening connection with the database]
		var connection : System.Data.SqlClient.SqlConnection;
		connection = new System.Data.SqlClient.SqlConnection(connection_string);
		
		connection.Open();
		
		// [Opening SQL Data Reader]	
		
			// [Operation Specification] Specifying the kind of operation that happens on pressing the button 
			var ActionOp = 'Update';
			
			// [Variable Declaration] Creating holder variables that will hold the user input values in the script
			var production_date     : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_date").ToDependencyObject();
			var production_shift    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("production_shift").ToDependencyObject();
		    var work_order     		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("work_order").ToDependencyObject();
			var plc_order_id        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("plc_order_id").ToDependencyObject();
			var order_status    	: System.Windows.Controls.ComboBox = ThisConfiguration.GetObjectByName("order_status").ToDependencyObject();
			var model_family        : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model_family").ToDependencyObject();
		    var model            	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("model").ToDependencyObject();
			var sku    				: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sku").ToDependencyObject();
			var planned_quantity    : System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("planned_quantity").ToDependencyObject();	
			var sg1_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_started").ToDependencyObject();
			var sg1_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_rejected").ToDependencyObject();
			var sg1_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_repaired").ToDependencyObject();
			var sg1_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg1_completed").ToDependencyObject();
		    var sg2_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_started").ToDependencyObject();
			var sg2_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_rejected").ToDependencyObject();
			var sg2_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_repaired").ToDependencyObject();
			var sg2_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg2_completed").ToDependencyObject();
			var sg3_started			: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_started").ToDependencyObject();
			var sg3_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_rejected").ToDependencyObject();
			var sg3_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_repaired").ToDependencyObject();
			var sg3_completed		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("sg3_completed").ToDependencyObject();
			var manual_started		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_started").ToDependencyObject();
			var manual_rejected		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_rejected").ToDependencyObject();
			var manual_repaired		: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_repaired").ToDependencyObject();
			var manual_completed	: System.Windows.Controls.TextBox = ThisConfiguration.GetObjectByName("manual_completed").ToDependencyObject();
		  
			var production_date_empty_label       	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_date_empty_label");
			var plc_order_id_empty_label       		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("plc_order_id_empty_label");
			var model_family_empty_label      		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_family_empty_label");
		    var production_shift_empty_label  		: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("production_shift_empty_label");
		    var order_status_empty_label           	: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("order_status_empty_label");
		    var model_empty_label    			    : Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("model_empty_label");    
			var work_order_empty_label    			: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("work_order_empty_label");	
			var sku_empty_label    					: Ico.Gwx.GwxLabel                  = ThisConfiguration.GetObjectByName("sku_empty_label");
							// [Hardcoded Variable] These variables have to be replaced after taking inputs from Aditya Sharma
			var created_by 		= "dalisoft_test_user";	
			
			//[Error & Exception Handling] Creating a variable for error and exception handling
			var response		: String;
			response="";
			
			// [Query String] Building Query for calling stored procedure
			var query_string : String = "Exec [dbo].[SP_OrderManagement_Production_Plan_modify_delete] ";
			query_string += "@work_order				        = '"+work_order.Text+"',";
			query_string += "@production_date			        = '"+production_date.Text+"',";
			query_string += "@production_shift				   	= '"+production_shift.Text+"',";
			query_string += "@plc_order_id						= '"+plc_order_id.Text+"',";
			query_string += "@order_status				    	= '"+order_status.Text+"',";
			query_string += "@model_family				    	= '"+model_family.Text+"',";
			query_string += "@model				   				= '"+model.Text+"',";
			query_string += "@sku				    			= '"+sku.Text+"',";
			query_string += "@planned_quantity				    = '"+planned_quantity.Text+"',";
			query_string += "@sg1_started 				    	= '"+sg1_started.Text+"',";
			query_string += "@sg1_rejected				    	= '"+sg1_rejected.Text+"',";
			query_string += "@sg1_repaired				    	= '"+sg1_repaired.Text+"',";
			query_string += "@sg1_completed				        = '"+sg1_completed.Text+"',";
			query_string += "@sg2_started 				    	= '"+sg2_started.Text+"',";
			query_string += "@sg2_rejected				    	= '"+sg2_rejected.Text+"',";
			query_string += "@sg2_repaired				    	= '"+sg2_repaired.Text+"',";
			query_string += "@sg2_completed				        = '"+sg2_completed.Text+"',";
			query_string += "@sg3_started 				    	= '"+sg3_started.Text+"',";
			query_string += "@sg3_rejected				    	= '"+sg3_rejected.Text+"',";
			query_string += "@sg3_repaired				    	= '"+sg3_repaired.Text+"',";
			query_string += "@sg3_completed				        = '"+sg3_completed.Text+"',";
			query_string += "@manual_started 				    = '"+manual_started.Text+"',";
			query_string += "@manual_rejected				    = '"+manual_rejected.Text+"',";
			query_string += "@manual_repaired				    = '"+manual_repaired.Text+"',";
			query_string += "@manual_completed				    = '"+manual_completed.Text+"',";
			query_string += "@ActionOp 							= '"+ActionOp+"'";
			//[Inline Test Statement] MessageBox.Show(query_string);
					
			// [Validation Statement] This if-else statement checks if any of the fields have been left empty
			if ( work_order.Text==""|| production_date.Text==""||production_shift.Text ==""|| plc_order_id.Text ==""||order_status.Text ==""||model_family.Text ==""||model.Text ==""||sku.Text ==""||planned_quantity.Text=="" ){
					//MessageBox.Show("Please fill in all the required values!")
					
				if(production_date.Text == "")
				{production_date_empty_label.Visible = true}
				else
				{production_date_empty_label.Visible = false}
				
				if(plc_order_id.Text == "")
				{plc_order_id_empty_label.Visible = true}
				else
				{plc_order_id_empty_label.Visible = false}
				
				if(model_family.Text == "")
				{model_family_empty_label.Visible = true}
				else
				{model_family_empty_label.Visible = false}
			        		
				if(production_shift.Text == "")
				{production_shift_empty_label.Visible = true}
				else
				{production_shift_empty_label.Visible = false}
				
				if(order_status.Text == "")
				{order_status_empty_label.Visible = true}
				else
				{order_status_empty_label.Visible = false}
				
				if(model.Text == "")
				{model_empty_label.Visible = true}
				else
				{model_empty_label.Visible = false}
								
				if(sku.Text == "")
				{sku_empty_label.Visible = true}
				else
				{sku_empty_label.Visible = false}
								
				
				} else {
					// [Inline Test Statement] MessageBox.Show("Thank you for filling all the required values");
					try {
						var reader : System.Data.SqlClient.SqlDataReader;	
						//[Inline Test Statement] MessageBox.Show(query_string);
						var stored_procedure_query : System.Data.SqlClient.SqlCommand = new System.Data.SqlClient.SqlCommand(query_string, connection);					
						reader = stored_procedure_query.ExecuteReader();
						
						while(reader.Read())
						{
							response = reader["Response"];
							MessageBox.Show(response);
						}
						reader.Close();
						
						
						
					}
				catch(ex : Exception){
						MessageBox.Show (ex.Message);	
					}	
				}			
								
		// [Closing connection with the database]
		
	
		connection.Close();
		
	}
	
]]></x:XData>
            </script:ScriptCode>
            <script:ScriptCode Name="Update_Data_to_PLC" Type="JScriptNet" />
          </script:ScriptCodeManager.Scripts>
          <script:ScriptCodeManager.AssemblyReferences>
            <ic:AssemblyReference AssemblyName="mscorlib" />
            <ic:AssemblyReference AssemblyName="System" />
            <ic:AssemblyReference AssemblyName="System.Core" />
            <ic:AssemblyReference AssemblyName="System.Data" />
            <ic:AssemblyReference AssemblyName="System.Xml" />
            <ic:AssemblyReference AssemblyName="System.Drawing" />
            <ic:AssemblyReference AssemblyName="System.Windows.Forms" />
            <ic:AssemblyReference AssemblyName="WindowsBase" />
            <ic:AssemblyReference AssemblyName="PresentationCore" />
            <ic:AssemblyReference AssemblyName="PresentationFramework" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCore" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeCoreCommands" />
            <ic:AssemblyReference AssemblyName="GwxRuntimeViewControl" />
            <ic:AssemblyReference AssemblyName="GwxConfigCore" />
            <ic:AssemblyReference AssemblyName="IcoComponentModel" />
            <ic:AssemblyReference AssemblyName="IcoFwxClientWrapper" />
            <ic:AssemblyReference AssemblyName="GdxViewControl" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/GdxViewControl.DLL" />
            <ic:AssemblyReference AssemblyName="IcoWPFSpecialized" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/IcoWPFSpecialized.DLL" />
            <ic:AssemblyReference AssemblyName="AwxViewControl" AssemblyCodebase="file:///C:/Program Files/MELSOFT/MC Works64/Components/AwxViewControl.DLL" />
            <ic:AssemblyReference AssemblyName="IcoCommonCore.Net" />
          </script:ScriptCodeManager.AssemblyReferences>
        </script:ScriptCodeManager>
      </gwx:GwxDocument.ScriptCodeManager>
      <gwx:GwxDocument.EventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="AnimationStopping" MethodName="ThisDisplay_AnimationStopping" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarting" MethodName="ThisDisplay_AnimationStarting" ScriptType="JScriptNet" />
              <script:ScriptEventBinding EventName="AnimationStarted" MethodName="ThisDisplay_AnimationStarted" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxDocument.EventBindings>
      <gwx:GwxDocument.RuntimeWindowProperties>
        <gwx:GwxWindowProperties LeftString="0%" TopString="0%" WidthString="100%" HeightString="100%" MaximizeBox="False" MinimizeBox="False" MenuVisible="False" ShowContextMenu="False" NavigationBarVisible="False" StatusBarVisible="False" OuterBorder="False" Resizable="False" ToolWindow="True" />
      </gwx:GwxDocument.RuntimeWindowProperties>
    </gwx:GwxDocument>
  </gwx:GwxDocument.GwxDocument>
  <Label Foreground="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" Width="604.580675" Height="87.579718" Canvas.Left="21.5" Canvas.Top="180.064103" gwx:GwxProperties.Locked="True">
    <TextBlock Text="Note:- &#xD;&#xA;1. Total Started Section Displays the total engines started on a line.&#xD;&#xA;2. The engine locations section is showing the total number of engines at each location. &#xD;&#xA;3. Total Completed Section Displays the total engines completed on a line.&#xD;&#xA; " />
  </Label>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="short_close2" Width="110" Height="25.00003" Opacity="0.5" Visibility="Hidden" Focusable="False" Canvas.Left="982.5" Canvas.Top="254.99997" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="SHORT CLOSE" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="unhold2" Width="110" Height="25.00003" Opacity="0.5" Visibility="Hidden" Focusable="False" Canvas.Left="862.026954" Canvas.Top="254.99997" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="UN-HOLD" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="hold2" Width="110" Height="25.00003" Opacity="0.5" Visibility="Hidden" Focusable="False" Canvas.Left="740" Canvas.Top="254.99997" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <TextBlock Text="HOLD" />
  </Button>
  <Canvas>
    <Rectangle Stroke="#FF000000" Name="Rectangle1" Width="1100" Height="30" Canvas.Left="0.402297" Canvas.Top="296.111111">
      <Rectangle.Fill>
        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
          <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF5F5F5" Offset="0" />
            <GradientStop Color="#FFEBEBEB" Offset="0.49" />
            <GradientStop Color="#FFE1E1E1" Offset="0.51" />
            <GradientStop Color="#FFCDCDCD" Offset="1" />
          </LinearGradientBrush.GradientStops>
          <LinearGradientBrush.RelativeTransform>
            <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
          </LinearGradientBrush.RelativeTransform>
        </LinearGradientBrush>
      </Rectangle.Fill>
    </Rectangle>
  </Canvas>
  <ig:GdxViewControl FileVersion="10.97.020.00" Background="#FFBFBFBF" FontFamily="Segoe UI" FontSize="12" IsTabStop="True" Name="default_grid" Width="1100" Height="400" Canvas.Left="0" Canvas.Top="300" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <ig:GdxViewControl.DataStyleRepository>
      <ig12:DataStyleSelector Name="New Condition" Key="65628079">
        <ig12:DataStyle Background="#FFF79646" FilterKey="55114983" Name="New Style" />
        <ig12:DataStyle Background="#FFFFFF66" FilterKey="47690252" Name="New Style" />
        <ig12:DataStyle Background="#FF7CCA62" FilterKey="53038396" Name="New Style" />
      </ig12:DataStyleSelector>
    </ig:GdxViewControl.DataStyleRepository>
    <ig:GdxViewControl.DataDictionaryRepository>
      <ig12:DataDictionary Name="DailyStatus" Key="47993581">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="15056362" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="49320909" />
      </ig12:DataDictionary>
      <ig12:DataDictionary Name="WeeklyStatus" Key="53237738">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="61233639" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="49445506" />
      </ig12:DataDictionary>
      <ig12:DataDictionary Name="MonthlyStatus" Key="27952209">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="1264671" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="35726287" />
      </ig12:DataDictionary>
      <ig12:DataDictionary Name="AnnualStatus" Key="63571381">
        <ig12:TextDataTranslation Text="Applicable" FilterKey="54214786" />
        <ig12:TextDataTranslation Text="Not Applicable" FilterKey="47842506" />
      </ig12:DataDictionary>
    </ig:GdxViewControl.DataDictionaryRepository>
    <ig:GdxViewControl.FiltersRepository>
      <igd:GdxFilter Key="49320909" Expression="x={{Daily}}==0" Name="Daily_Not Applicable" />
      <igd:GdxFilter Key="15056362" Expression="x={{Daily}}==1" Name="Daily_Applicable" />
      <igd:GdxFilter Key="61233639" Expression="x={{Weekly}}==1" Name="Weekly_Applicable" />
      <igd:GdxFilter Key="49445506" Expression="x={{Weekly}}==0" Name="Weekly_Not Applicable" />
      <igd:GdxFilter Key="1264671" Expression="x={{Monthly}}==1" Name="Monthly_Applicable" />
      <igd:GdxFilter Key="35726287" Expression="x={{Monthly}}==0" Name="Monthly_Not Applicable" />
      <igd:GdxFilter Key="54214786" Expression="x={{Annual}}==1" Name="Annual_Applicable" />
      <igd:GdxFilter Key="47842506" Expression="x={{Annual}}==0" Name="Annual_Not Applicable" />
      <igd:GdxFilter Key="55114983" Expression="x={{Status}} == 1" Name="Status is New Plan" />
      <igd:GdxFilter Key="47690252" Expression="x={{Status}} == 2" Name="Status is Running" />
      <igd:GdxFilter Key="53038396" Expression="x={{Status}} == 3" Name="Status is Complete" />
    </ig:GdxViewControl.FiltersRepository>
    <ig:GdxViewControl.SubscriptionsRepository>
      <igd:GdxSubscription Key="11348180" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="AssemblyID" />
          <igd:GdxDataField Key="AssemblyName" />
          <igd:GdxDataField Key="SubAssemblyID" />
          <igd:GdxDataField Key="SubAssemblyName" />
          <igd:GdxDataField Key="ComponentID" />
          <igd:GdxDataField Key="ComponentName" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz. GridAssetComponentInfo</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="3170613" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="706558" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="RowID" BuiltInType="Int64" />
          <igd:GdxDataField Key="TimeStamp" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AssetID" />
          <igd:GdxDataField Key="AssetName" />
          <igd:GdxDataField Key="StartDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Daily" BuiltInType="Int32" />
          <igd:GdxDataField Key="Weekly" BuiltInType="Int32" />
          <igd:GdxDataField Key="WLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="WWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Monthly" BuiltInType="Int32" />
          <igd:GdxDataField Key="MLastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MNextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="MWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Annual" BuiltInType="Int32" />
          <igd:GdxDataField Key="ALastDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="ANextDate" BuiltInType="DateTime" />
          <igd:GdxDataField Key="AWarning" BuiltInType="Int32" />
          <igd:GdxDataField Key="Maintenancetype" BuiltInType="Int32" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:CumiMetz.GridPreventive</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
      <igd:GdxSubscription Key="28402735" Name="New Subscription">
        <igd:GdxSubscription.Fields>
          <igd:GdxDataField Key="uid" BuiltInType="Int32" />
          <igd:GdxDataField IsPrimaryKey="True" Key="WorkOrder" />
          <igd:GdxDataField Key="PLC_WO" BuiltInType="Int32" />
          <igd:GdxDataField Key="Prod_Date" BuiltInType="DateTime" />
          <igd:GdxDataField Key="Shift_ID" BuiltInType="Int32" />
          <igd:GdxDataField Key="Line_No" BuiltInType="Int32" />
          <igd:GdxDataField Key="SEQ_No" BuiltInType="Int32" />
          <igd:GdxDataField Key="Execution_Priority" BuiltInType="Int32" />
          <igd:GdxDataField Key="Plan_Qyt" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG1_WIP" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG1_Reject" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG1_Repair" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG1_Complete" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG2_WIP" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG2_Reject" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG2_Repair" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG2_Complete" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG3_WIP" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG3_Reject" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG3_Repair" BuiltInType="Int32" />
          <igd:GdxDataField Key="SG3_Complete" BuiltInType="Int32" />
          <igd:GdxDataField Key="Manual_Line_WIP" BuiltInType="Int32" />
          <igd:GdxDataField Key="Manual_Line_Reject" BuiltInType="Int32" />
          <igd:GdxDataField Key="Manual_Line_Repair" BuiltInType="Int32" />
          <igd:GdxDataField Key="Manual_Line_Complete" BuiltInType="Int32" />
          <igd:GdxDataField Key="Status" BuiltInType="Int32" />
          <igd:GdxDataField Key="Transfer_Status" BuiltInType="Boolean" />
          <igd:GdxDataField IsPrimaryKey="True" Key="sku_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="sku_code" />
          <igd:GdxDataField IsPrimaryKey="True" Key="model_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="model_description" />
          <igd:GdxDataField IsPrimaryKey="True" Key="model_family_id" BuiltInType="Int32" />
          <igd:GdxDataField Key="model_family_code" />
        </igd:GdxSubscription.Fields>
        <igd:GdxSubscription.Tags>
          <s:String>db:BajajMEA.OrderManagement_Production_Plan</s:String>
        </igd:GdxSubscription.Tags>
      </igd:GdxSubscription>
    </ig:GdxViewControl.SubscriptionsRepository>
    <ig:GdxViewControl.Header>
      <TextBlock Text="Production - Engine Locations" FontFamily="Calibri" FontStyle="Normal" FontWeight="Bold" FontSize="19" Foreground="#FF001848" Padding="0,0,0,0" TextAlignment="Center" Visibility="Visible" />
    </ig:GdxViewControl.Header>
    <ig:GdxViewControl.Items>
      <iwc:MultipleTabItem IsSelected="True" Header="Tab" FontFamily="Calibri" FontSize="16">
        <ig:GdxGridView HeaderBackground="#FF001848" HeaderBorderBrush="#FFC6C7B5" HeaderCellBorderThickness="0,0,0,0" HeaderFontFamily="Calibri" HeaderFontSize="17" HeaderMouseOverForeground="#FFFFFFFF" HeaderMouseOverBorderBrush="#FF000000" HeaderSelectedForeground="#FFFFFFFF" HeaderSelectedBorderBrush="#FF000000" GroupHeaderBorderBrush="#FFD8D8D8" GroupHeaderBackground="#FFD8D8D8" GroupHeaderForeground="#FFFFFFFF" RowHeaderBackground="#FFD8D8D8" RowHeaderBorderBrush="#FFD8D8D8" RowHeaderCellBorderBrush="#FF626262" RowHeaderBorderThickness="0,0,1,2" RowHeight="25" ScrollBarBackground="#FFD8D8D8" ScrollBarForeground="#FF001848" ScrollBarMouseOverForeground="#FF171F31" ScrollBarMousePressedForeground="#FF171F31" ScrollBarBorderBrush="#FF373D54" ScrollBarMouseOverBorderBrush="#FF229EC8" DateTimeFormat="d" DoubleFormat="N0" ConditionKey="65628079" SubscriptionID="28402735" AllowPaging="False" BorderBrush="#FFA5B6CB" BorderThickness="0,0,0,0" Background="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Uid="local:GdxView_1">
          <ig:GdxGridView.HeaderMouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF8993A2" Offset="0" />
                <GradientStop Color="#FF545F6D" Offset="0.5" />
                <GradientStop Color="#FF0C1C32" Offset="0.51" />
                <GradientStop Color="#FF132F54" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderMouseOverBackground>
          <ig:GdxGridView.HeaderSelectedBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.HeaderSelectedBackground>
          <ig:GdxGridView.MouseOverBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.3">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.MouseOverBackground>
          <ig:GdxGridView.SelectionBackground>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5" Opacity="0.9">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FF6078C8" Offset="0" />
                <GradientStop Color="#FF4961B2" Offset="0.4" />
                <GradientStop Color="#FF16399C" Offset="0.41" />
                <GradientStop Color="#FF16399C" Offset="0.74" />
                <GradientStop Color="#FF173C9F" Offset="0.75" />
                <GradientStop Color="#FF39C0DC" Offset="1" />
              </LinearGradientBrush.GradientStops>
              <LinearGradientBrush.RelativeTransform>
                <RotateTransform Angle="90" CenterX="0.5" CenterY="0.5" />
              </LinearGradientBrush.RelativeTransform>
            </LinearGradientBrush>
          </ig:GdxGridView.SelectionBackground>
          <ig:GdxGridView.Columns>
            <ig:GdxColumn Key="uid" Index="14" IsVisible="False" Format="{x:Null}" Text="uid" />
            <ig:GdxColumn Key="WorkOrder" Format="{x:Null}" Text="W.O." TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="PLC_WO" Index="1" Format="{x:Null}" Text="PLC W.O." TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Prod_Date" Index="2" Format="{x:Null}" Text="Date" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Shift_ID" Index="3" Format="{x:Null}" Text="Shift" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Line_No" Index="4" IsVisible="False" Format="{x:Null}" Text="Line No." TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="SEQ_No" Index="5" IsVisible="False" Format="{x:Null}" Text="SEQ. No." TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Execution_Priority" Index="6" Format="{x:Null}" Text="Priority" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Plan_Qyt" Index="7" Format="{x:Null}" Text="Quantity" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="SG1_WIP" Index="8" Format="{x:Null}" Text="L.SG1 WIP" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="SG1_Reject" Index="21" Format="{x:Null}" Text="L.SG1 Reject" IsAuto="True" />
            <ig:GdxColumn Key="SG1_Repair" Index="22" Format="{x:Null}" Text="L.SG1 Repair" IsAuto="True" />
            <ig:GdxColumn Key="SG1_Complete" Index="23" Format="{x:Null}" Text="L.SG1 Buffer" IsAuto="True" />
            <ig:GdxColumn Key="SG2_WIP" Index="9" Format="{x:Null}" Text="L.SG2 WIP" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="SG2_Reject" Index="24" Format="{x:Null}" Text="L.SG2 Reject" IsAuto="True" />
            <ig:GdxColumn Key="SG2_Repair" Index="25" Format="{x:Null}" Text="L.SG2 Repair" IsAuto="True" />
            <ig:GdxColumn Key="SG2_Complete" Index="26" Format="{x:Null}" Text="L.SG2 Buffer" IsAuto="True" />
            <ig:GdxColumn Key="SG3_WIP" Index="10" Format="{x:Null}" Text="L.SG3 WIP" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="SG3_Reject" Index="27" Format="{x:Null}" Text="L.SG3 Reject" IsAuto="True" />
            <ig:GdxColumn Key="SG3_Repair" Index="28" Format="{x:Null}" Text="L.SG3 Repair" IsAuto="True" />
            <ig:GdxColumn Key="SG3_Complete" Index="29" Format="{x:Null}" Text="L.SG3 Complete" IsAuto="True" />
            <ig:GdxColumn Key="Manual_Line_WIP" Index="11" Format="{x:Null}" Text="L.Manual WIP" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Manual_Line_Reject" Index="30" Format="{x:Null}" Text="L.Manual Reject" IsAuto="True" />
            <ig:GdxColumn Key="Manual_Line_Repair" Index="31" Format="{x:Null}" Text="L.Manual Repair" IsAuto="True" />
            <ig:GdxColumn Key="Manual_Line_Complete" Index="32" Format="{x:Null}" Text="L.Manual Complete" IsAuto="True" />
            <ig:GdxColumn Key="Status" Index="12" Format="{x:Null}" Text="Status" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="Transfer_Status" Index="13" Format="{x:Null}" Text="Tr. Status" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="sku_id" Index="15" IsVisible="False" Format="{x:Null}" Text="sku_id" TextWrapping="Wrap" />
            <ig:GdxColumn Key="sku_code" Index="16" Format="{x:Null}" Text="SKU" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="model_id" Index="20" IsVisible="False" Format="{x:Null}" Text="model_id" />
            <ig:GdxColumn Key="model_description" Index="17" Format="{x:Null}" Text="Model" TextWrapping="Wrap" IsAuto="True" />
            <ig:GdxColumn Key="model_family_id" Index="19" IsVisible="False" Format="{x:Null}" Text="model_family_id" />
            <ig:GdxColumn Key="model_family_code" Index="18" Format="{x:Null}" Text="Model Family" TextWrapping="Wrap" IsAuto="True" />
          </ig:GdxGridView.Columns>
          <ig:GdxGridView.Sorts>
            <ig:GdxSort PropertyName="Prod_Date" Direction="Ascending" />
            <ig:GdxSort PropertyName="Shift_ID" Direction="Ascending" />
            <ig:GdxSort PropertyName="Execution_Priority" Direction="Ascending" />
          </ig:GdxGridView.Sorts>
        </ig:GdxGridView>
      </iwc:MultipleTabItem>
    </ig:GdxViewControl.Items>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Grid" ShowToolTip="False" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Grid" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </ig:GdxViewControl>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="production_date_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="332.920426" Canvas.Top="110">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="plc_order_id_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="692.920426" Canvas.Top="70">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="model_family_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="332.920426" Canvas.Top="150">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="production_shift_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="692" Canvas.Top="110">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="order_status_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="692.424734" Canvas.Top="190">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="model_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="692.097313" Canvas.Top="150">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="work_order_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="332.920426" Canvas.Top="70">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Label Foreground="#FFC00000" FontFamily="Calibri" FontSize="24" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="sku_empty_label" Width="24.971297" Height="15" Visibility="Hidden" Canvas.Left="332.920426" Canvas.Top="190">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextInput" MethodName="speed_empty_label_TextInput" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <TextBlock Text="*" />
  </Label>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="unhold" Width="110" Height="25.00003" Canvas.Left="862.026954" Canvas.Top="254.99997" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="unhold1" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Unhold_Order" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshUnhold" DataSource="db:Bajaj_MEA_ProdData.LineProductionPlan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshUnhold" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="UnHold_data_to_PLC" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="UnHold_data_to_PLC" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="UN-HOLD" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="hold" Width="110" Height="25.00003" Canvas.Left="740" Canvas.Top="254.99997" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="hold1" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Hold_Order" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshHold" DataSource="db:Bajaj_MEA_ProdData.LineProductionPlan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshHold" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Hold_data_to_PLC1" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Hold_data_to_PLC" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="HOLD" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Modify" Width="110" Height="25" Visibility="Hidden" Canvas.Left="141.004397" Canvas.Top="255" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ModifyScript" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Update" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshMod" DataSource="db:BajajMEA.OrderManagement_Production_Plan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshMod" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Modify_data_to_PLC" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Modify_Data_to_PLC" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.OrderManagement_Production_Plan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="MODIFY" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="short_close" Width="110" Height="25.00003" Canvas.Left="982.5" Canvas.Top="254.99997" gwx:GwxProperties.ShowDescriptionInToolTip="False" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="short_close1" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Short_Close_Order" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshShortClose" DataSource="db:Bajaj_MEA_ProdData.LineProductionPlan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshShortClose" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Shortclose_to_plc" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="ShortClose_data_to_PLC" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="SHORT CLOSE" />
  </Button>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="Delete" Width="110" Height="25" Visibility="Hidden" Canvas.Left="259" Canvas.Top="254.999985" gwx:GwxProperties.Description="Size=H:25,W:125&#xD;&#xA;Background color=R :255,G : 255,B :255&#xD;&#xA;Text color=White&#xD;&#xA;Text Font= Style :Calibri,Size :12&#xD;&#xA;Position= X:790  Y:233" gwx:GwxProperties.ShowDescriptionInToolTip="False">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="ModifyScript1" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Delete" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshMod1" DataSource="db:CumiMetz.GridPreventive.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshMod1" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Delete_data_to_PLC" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Delete_Data_to_PLC" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnDown="True" ExecuteOnUp="True" DataSource="db:BajajMEA.OrderManagement_Production_Plan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:WriteValueCommand OnDownValue="1" OnUpValue="0" />
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="DELETE" />
  </Button>
  <Rectangle Fill="#FF243782" Stroke="#FF243782" Name="forhidingbuttons" Width="380" Height="40" Visibility="Hidden" Canvas.Left="720" Canvas.Top="250" />
  <Image Stretch="Fill" Name="Image1" Width="23.577906" Height="34.666666" RenderTransform="0,-1,1,0,-5.54438000000005,29.122286" Visibility="Hidden" Canvas.Left="410.877714" Canvas.Top="241.483364">
    <Image.Source>
      <BitmapImage>
        <iwm:BitmapImageInfo.StreamSource>
          <iwm:Base64Stream Data="" />
        </iwm:BitmapImageInfo.StreamSource>
      </BitmapImage>
    </Image.Source>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Execution_Priority_Increase" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </Image>
  <Image Stretch="Fill" Name="Image2" Width="23.577906" Height="34.666666" RenderTransform="0,1,1,0,-5.54438000000005,5.54438000000001" Visibility="Hidden" Canvas.Left="441.631767" Canvas.Top="251.483364">
    <Image.Source>
      <BitmapImage>
        <iwm:BitmapImageInfo.StreamSource>
          <iwm:Base64Stream Data="" />
        </iwm:BitmapImageInfo.StreamSource>
      </BitmapImage>
    </Image.Source>
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Execution_Priority_Decrease" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
  </Image>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point__orderstatus_label4" Width="166.982687" Height="17.9025" Visibility="Hidden" Canvas.Left="481.794724" Canvas.Top="257.405308">
    <TextBlock Text="Change Execution Priority" />
  </Label>
  <Rectangle Fill="#FF243782" Stroke="#FF243782" Width="510" Height="50" Visibility="Hidden" Canvas.Left="130" Canvas.Top="240" />
  <Rectangle Fill="#FF243782" Stroke="#FF243782" Width="400" Height="296" Visibility="Hidden" Canvas.Left="710" Canvas.Top="0" />
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="18" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="in_progress_quantity_label1" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="1" gwx:GwxProperties.Locked="True">
    <TextBlock Text="Process &#xD;&#xA;Points" />
  </Label>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="process_point_work_order" Width="60" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="143.661" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="pp_workorder_tag" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.OrderManagement.PLCWorkOrder.Value" />
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point__workorder_label" Width="80" Height="17.9025" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="120" gwx:GwxProperties.Locked="True">
    <TextBlock Text="PLC Workorder" />
  </Label>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="process_point_order_status" Width="60" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="193.661" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="pp_status_tag" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.OrderManagement.PlanChangeTrigger.Value" />
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point__orderstatus_label" Width="50" Height="17.9025" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="170" gwx:GwxProperties.Locked="True">
    <TextBlock Text="Status" />
  </Label>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="process_point_production_shift" Width="60" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="93.661" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="pp_shift_tag" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.OrderManagement.Shift.Value" />
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point_shift_label" Width="50" Height="17.9025" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="70" gwx:GwxProperties.Locked="True">
    <TextBlock Text="Shift" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point__orderstatus_label1" Width="82.646331" Height="17.9025" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="235.611111" gwx:GwxProperties.Locked="True">
    <TextBlock Text="PLC Confirm" />
  </Label>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="plc_confirm_process_point" Visibility="Hidden" Canvas.Left="1000" Canvas.Top="256.722222" gwx:GwxProperties.Locked="True" gwx:GwxProperties.Stretch="Uniform">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="plc_confirmation_pp" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.01_Sub Group1.Config_Return_Values.Order_Download.Value">
            <gwx:GwxProcessPoint.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="DataUpdated" MethodName="PLC_Download_Confirm" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxProcessPoint.EventBindings>
          </gwx:GwxProcessPoint>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" LayoutTransform="3.15846796151752,0,0,1,0,0" />
  </Label>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="process_point_order_rollover" Width="60" Visibility="Hidden" Canvas.Left="727.540894" Canvas.Top="256.722222" gwx:GwxProperties.Locked="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" Name="pp_order_rollover" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.01_Sub Group1.Config_Return_Values.Order_Rollover.Value" DragDropDataSource="True" LowLimitSource="0" HighLimitSource="1" DataComparison="BetweenOrEqualLimits" Control="True" Confirm="True" />
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point__orderstatus_label2" Width="82.646331" Height="17.9025" Visibility="Hidden" Canvas.Left="727.540894" Canvas.Top="235.611111" gwx:GwxProperties.Locked="True">
    <TextBlock Text="Order Rollover" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="process_point__orderstatus_label3" Width="131.615828" Height="17.9025" Visibility="Hidden" Canvas.Left="803.715667" Canvas.Top="235.451146" gwx:GwxProperties.Locked="True">
    <TextBlock Text="(False if 0 / True if 1)" HorizontalAlignment="Left" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="production_date_label" Canvas.Left="21.5" Canvas.Top="60">
    <TextBlock Text="Production Date" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="sku_label" Canvas.Left="21.5" Canvas.Top="140">
    <TextBlock Text="SKU" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="plc_order_id_label" Canvas.Left="341.5" Canvas.Top="20">
    <TextBlock Text="PLC Order ID" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="3" Name="production_date" Width="180" Height="23.098526" IsEnabled="True" Canvas.Left="143" Canvas.Top="60">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="production_date_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="3" Name="plc_order_id" Width="180" Height="23.098526" IsEnabled="True" Canvas.Left="459" Canvas.Top="20">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="plc_order_id_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sku" Width="180" Height="23.098526" Canvas.Left="143" Canvas.Top="140">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="sku_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="model_family_label" Canvas.Left="21.5" Canvas.Top="100">
    <TextBlock Text="Model Family" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="model_family" Width="180" Height="23.098526" Canvas.Left="143" Canvas.Top="100">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="model_family_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="order_status_label" Canvas.Left="338.5" Canvas.Top="143.098526">
    <TextBlock Text="Order Status" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="production_shift_label" Canvas.Left="340" Canvas.Top="60">
    <TextBlock Text="Production Shift" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="production_shift" Width="180" Height="23.098526" Canvas.Left="459" Canvas.Top="60">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="production_shift_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" Padding="0,0,0,0" Name="work_order_label" Canvas.Left="21.5" Canvas.Top="20">
    <TextBlock Text="Work Order" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="work_order" Width="180" Height="23.098526" Canvas.Left="143" Canvas.Top="23.098526">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="work_order_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <ComboBox IsDropDownOpen="False" Text="" FontFamily="Calibri" FontSize="16" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" TabIndex="6" Padding="0,0,0,0" Name="order_status" Width="180" Height="23.098526" Focusable="False" Canvas.Left="457.5" Canvas.Top="143.098526">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="DropDownOpened" MethodName="order_status_dropdown" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
    <s:String>Material Check</s:String>
    <s:String>New Plan</s:String>
    <s:String>Running</s:String>
    <s:String>Completed</s:String>
  </ComboBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="model" Width="180" Height="23.098526" Canvas.Left="459" Canvas.Top="100">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="model_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" Padding="0,0,0,0" Name="model_label" Canvas.Left="341" Canvas.Top="100">
    <TextBlock Text="Model " />
  </Label>
  <Rectangle Fill="#FF243782" Stroke="#FF243782" Width="380" Height="70" Canvas.Left="720" Canvas.Top="220" />
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="sg1_label" Canvas.Left="653.541327" Canvas.Top="67">
    <TextBlock Text="SG1" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="manual_label" Canvas.Left="654.324091" Canvas.Top="187">
    <TextBlock Text="Manual" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="sg3_label" Canvas.Left="655.871951" Canvas.Top="147">
    <TextBlock Text="SG3" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="sg2_label" Canvas.Left="654.408536" Canvas.Top="107">
    <TextBlock Text="SG2" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="20" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="in_progress_quantity_label2" Height="39.06" Canvas.Left="674" Canvas.Top="0">
    <TextBlock Text="Engine Tracking" />
  </Label>
  <Canvas>
    <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="planned_quantity_label" Canvas.Left="980.838623" Canvas.Top="14.583333">
      <TextBlock Text="Planned" />
    </Label>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="3" Name="planned_quantity" Width="40" Height="23.098529" IsEnabled="True" Canvas.Left="1033.484287" Canvas.Top="8.392158">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="planned_quantity_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
  </Canvas>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="completed_label" Canvas.Left="964.64092" Canvas.Top="47.47549">
    <TextBlock Text="Buffer" />
  </Label>
  <Canvas>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg1_completed" Width="40" Height="23.098529" Canvas.Left="959.484223" Canvas.Top="67.000001">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg2_completed" Width="40" Height="23.098529" Canvas.Left="959.484267" Canvas.Top="106.999998">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg3_completed" Width="40" Height="23.098529" Canvas.Left="959.484271" Canvas.Top="147.000002">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="manual_completed" Width="40" Height="23.098529" Canvas.Left="959.484271" Canvas.Top="186.999996">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
  </Canvas>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="repaired_label" Canvas.Left="903.924856" Canvas.Top="47.47549">
    <TextBlock Text="Repaired" />
  </Label>
  <Canvas>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg1_repaired" Width="40" Height="23.098529" Canvas.Left="905.613176" Canvas.Top="67.000001">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg3_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg2_repaired" Width="40" Height="23.098529" Canvas.Left="905.61322" Canvas.Top="106.999998">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg3_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg3_repaired" Width="40" Height="23.098529" Canvas.Left="905.613224" Canvas.Top="147.000002">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg3_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="manual_repaired" Width="40" Height="23.098529" Canvas.Left="905.613224" Canvas.Top="186.999996">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg3_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
  </Canvas>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="rejected_label" Canvas.Left="850.567157" Canvas.Top="47.47549">
    <TextBlock Text="Rejected" />
  </Label>
  <Canvas>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg1_rejected" Width="40" Height="23.098529" Canvas.Left="851.742128" Canvas.Top="67.000001">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg2_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg2_rejected" Width="40" Height="23.098529" Canvas.Left="851.742172" Canvas.Top="106.999998">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg2_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg3_rejected" Width="40" Height="23.098529" Canvas.Left="851.742176" Canvas.Top="147.000002">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg2_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="manual_rejected" Width="40" Height="23.098529" Canvas.Left="851.742176" Canvas.Top="186.999996">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg2_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
  </Canvas>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="started_label" Canvas.Left="716.163381" Canvas.Top="47.47549">
    <TextBlock Text="Total Started" />
  </Label>
  <Canvas>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg1_started" Width="40" Height="23.098529" Canvas.Left="797.87108" Canvas.Top="67.000001">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg1_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg2_started" Width="40" Height="23.098529" Canvas.Left="797.871124" Canvas.Top="106.999998">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg1_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg3_started" Width="40" Height="23.098529" Canvas.Left="797.871128" Canvas.Top="147.000002">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg1_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
    <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="manual_started" Width="40" Height="23.098529" Canvas.Left="797.871128" Canvas.Top="186.999996">
      <gwx:GwxEvents.ScriptEventBindings>
        <script:ScriptEventBindings>
          <script:ScriptEventBindings.EventBindings>
            <x:Array Type="script:ScriptEventBinding">
              <script:ScriptEventBinding EventName="TextChanged" MethodName="sg1_TextChanged" ScriptType="JScriptNet" />
            </x:Array>
          </script:ScriptEventBindings.EventBindings>
        </script:ScriptEventBindings>
      </gwx:GwxEvents.ScriptEventBindings>
    </TextBox>
  </Canvas>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="started_label1" Canvas.Left="807.921124" Canvas.Top="47.47549">
    <TextBlock Text="WIP" />
  </Label>
  <Rectangle Fill="#FFD8D8D8" Stroke="#FF000000" Width="73.053797" Height="190" Opacity="0.2" Canvas.Left="709.050633" Canvas.Top="40" />
  <Rectangle Fill="#FFD8D8D8" Stroke="#FF000000" Width="230" Height="190" Opacity="0.2" Canvas.Left="784" Canvas.Top="40" />
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg1_total" Width="40" Height="23.098529" Canvas.Left="727.000048" Canvas.Top="67.000001">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg2_total" Width="40" Height="23.098529" Canvas.Left="727.000048" Canvas.Top="106.999998">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg3_total" Width="40" Height="23.098529" Canvas.Left="727.000048" Canvas.Top="147.000002">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="manual_total" Width="40" Height="23.098529" Canvas.Left="727.000048" Canvas.Top="186.999996">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <GroupBox Background="#00FFFFFF" Foreground="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" FontWeight="Bold" Width="396.969431" Height="60" Canvas.Left="684" Canvas.Top="230">
    <GroupBox.Header>
      <TextBlock Text="  Enable or Disable Order Transfer to PLC" />
    </GroupBox.Header>
  </GroupBox>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="Label1" Width="70" Height="15.399017" Canvas.Left="825" Canvas.Top="262.967158" gwx:GwxProperties.Stretch="Uniform">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.OrderManagement.OrderAvailable.Value" Control="True" Confirm="True">
            <gwx:GwxProcessPoint.CustomConfirmMessage>
              <gwx:GwxCustomConfirmMessage Buttons="YesNo" Icon="Question" Caption="Confirm" Text="Are you sure to change the value of Available Untransferred Orders?" />
            </gwx:GwxProcessPoint.CustomConfirmMessage>
          </gwx:GwxProcessPoint>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" LayoutTransform="0.839537406015038,0,0,0.839537406015038,0,0" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Padding="0,0,0,0" Name="sku_label1" Height="13.02" Canvas.Left="704" Canvas.Top="264.156667">
    <TextBlock Text="Order Transfer" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="10" Padding="0,0,0,0" Name="sku_label2" Height="13.02" Canvas.Left="826.826667" Canvas.Top="247.333333">
    <TextBlock Text="Available Orders" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="10" Padding="0,0,0,0" Name="sku_label3" Height="13.02" Canvas.Left="950.813333" Canvas.Top="247.646667">
    <TextBlock Text="Enable Transfer" />
  </Label>
  <Label Background="#FFFFFFFF" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="1,1,1,1" Name="Label3" Width="70" Height="15.399017" Canvas.Left="947" Canvas.Top="262.967158" gwx:GwxProperties.Stretch="Uniform">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxProcessPoint AnimationMode="Analog" DataSource="@Kepware.KEPServerEX.V6\SB1_PLC.RJ71EN71.OrderManagement.OrderTransfer.Value" Control="True" Confirm="True">
            <gwx:GwxProcessPoint.CustomConfirmMessage>
              <gwx:GwxCustomConfirmMessage Buttons="YesNo" Icon="Question" Caption="Confirm" Text="Are you sure you want to change the value of Enable Order Transfer? (If 0, then disabled and if 1, then enabled)" />
            </gwx:GwxProcessPoint.CustomConfirmMessage>
          </gwx:GwxProcessPoint>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="*.??" TextTrimming="CharacterEllipsis" LayoutTransform="0.839537406015038,0,0,0.839537406015038,0,0" />
  </Label>
  <Label Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsTabStop="True" Padding="0,0,0,0" Name="started_label2" Canvas.Left="1027.716757" Canvas.Top="47.475489" Block.TextAlignment="Center">
    <TextBlock Text="Completed" HorizontalAlignment="Center" />
  </Label>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg1_total_comp" Width="40" Height="23.098529" Canvas.Left="1034.436757" Canvas.Top="67">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg2_total_comp" Width="40" Height="23.098529" Canvas.Left="1034.436757" Canvas.Top="106.999997">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="sg3_total_comp" Width="40" Height="23.098529" Canvas.Left="1034.436757" Canvas.Top="147.000001">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <TextBox FontFamily="Calibri" FontSize="16" VerticalContentAlignment="Center" TabIndex="4" Name="manual_total_comp" Width="40" Height="23.098529" Canvas.Left="1034.436757" Canvas.Top="186.999995">
    <gwx:GwxEvents.ScriptEventBindings>
      <script:ScriptEventBindings>
        <script:ScriptEventBindings.EventBindings>
          <x:Array Type="script:ScriptEventBinding">
            <script:ScriptEventBinding EventName="TextChanged" MethodName="manual_line_TextChanged" ScriptType="JScriptNet" />
          </x:Array>
        </script:ScriptEventBindings.EventBindings>
      </script:ScriptEventBindings>
    </gwx:GwxEvents.ScriptEventBindings>
  </TextBox>
  <Button Background="#FF001848" Foreground="#FFFFFFFF" FontFamily="Calibri" FontSize="12" Name="clear" Width="110" Height="25" Canvas.Left="20" Canvas.Top="255" gwx:GwxProperties.ShowDescriptionInToolTip="True">
    <gwx:GwxDynamicGroup.GwxDynamicGroup>
      <gwx:GwxDynamicGroup>
        <gwx:GwxDynamicGroup.DynamicsList>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="Clear" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ScriptCommand />
            </gwx:GwxPick.CommandParameters>
            <gwx:GwxPick.EventBindings>
              <script:ScriptEventBindings>
                <script:ScriptEventBindings.EventBindings>
                  <x:Array Type="script:ScriptEventBinding">
                    <script:ScriptEventBinding EventName="CommandExecuted" MethodName="Clear" ScriptType="JScriptNet" />
                  </x:Array>
                </script:ScriptEventBindings.EventBindings>
              </script:ScriptEventBindings>
            </gwx:GwxPick.EventBindings>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="DBRefreshClear" DataSource="db:Bajaj_MEA_ProdData.LineProductionPlan.@@Refresh" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:ToggleValueCommand>
                <gwxcmd:ToggleValueCommand.Values>
                  <s:String>0</s:String>
                  <s:String>1</s:String>
                </gwxcmd:ToggleValueCommand.Values>
              </gwxcmd:ToggleValueCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
          <gwx:GwxPick LeftMouseButton="True" ExecuteOnUp="True" Name="GridRefreshClear" Control="True">
            <gwx:GwxPick.CommandParameters>
              <gwxcmd:IcoCommandingCommand>
                <gwxcmd:IcoCommandingCommand.Command>
                  <icc:RefreshCommandData Target="Preventitve" />
                </gwxcmd:IcoCommandingCommand.Command>
              </gwxcmd:IcoCommandingCommand>
            </gwx:GwxPick.CommandParameters>
          </gwx:GwxPick>
        </gwx:GwxDynamicGroup.DynamicsList>
      </gwx:GwxDynamicGroup>
    </gwx:GwxDynamicGroup.GwxDynamicGroup>
    <TextBlock Text="CLEAR" />
  </Button>
  <Rectangle Fill="#FFD8D8D8" Stroke="#FF000000" Width="73.053797" Height="190" Opacity="0.2" Canvas.Left="1016.487342" Canvas.Top="39.999999" />
  <Rectangle Fill="#FFD8D8D8" Stroke="#FF000000" Width="454.857595" Height="300" Opacity="0.05" Canvas.Left="644.541139" Canvas.Top="-2.018779" />
</Canvas>